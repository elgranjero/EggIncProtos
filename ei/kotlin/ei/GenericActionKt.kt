// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializegenericAction")
public inline fun genericAction(block: ei.GenericActionKt.Dsl.() -> kotlin.Unit): ei.Ei.GenericAction =
  ei.GenericActionKt.Dsl._create(ei.Ei.GenericAction.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.GenericAction`
 */
public object GenericActionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.GenericAction.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.GenericAction.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.GenericAction = _builder.build()

    /**
     * `optional string user_id = 1;`
     */
    public var userId: kotlin.String
      @kotlin.jvm.JvmName("getUserId")
        get() = _builder.userId
      @kotlin.jvm.JvmName("setUserId")
        set(value) {
        _builder.userId = value
      }
    /**
     * <code>optional string user_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 1;</code>
     * @return Whether the userId field is set.
     * @return This builder for chaining.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional bool cc_user = 9;`
     */
    public var ccUser: kotlin.Boolean
      @kotlin.jvm.JvmName("getCcUser")
        get() = _builder.ccUser
      @kotlin.jvm.JvmName("setCcUser")
        set(value) {
        _builder.ccUser = value
      }
    /**
     * <code>optional bool cc_user = 9;</code>
     * @return This builder for chaining.
     */
    public fun clearCcUser() {
      _builder.clearCcUser()
    }
    /**
     * <code>optional bool cc_user = 9;</code>
     * @return Whether the ccUser field is set.
     * @return This builder for chaining.
     */
    public fun hasCcUser(): kotlin.Boolean {
      return _builder.hasCcUser()
    }

    /**
     * `optional string advertising_id = 7;`
     */
    public var advertisingId: kotlin.String
      @kotlin.jvm.JvmName("getAdvertisingId")
        get() = _builder.advertisingId
      @kotlin.jvm.JvmName("setAdvertisingId")
        set(value) {
        _builder.advertisingId = value
      }
    /**
     * <code>optional string advertising_id = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearAdvertisingId() {
      _builder.clearAdvertisingId()
    }
    /**
     * <code>optional string advertising_id = 7;</code>
     * @return Whether the advertisingId field is set.
     * @return This builder for chaining.
     */
    public fun hasAdvertisingId(): kotlin.Boolean {
      return _builder.hasAdvertisingId()
    }

    /**
     * `optional float approx_time_DEP = 2;`
     */
    public var approxTimeDEP: kotlin.Float
      @kotlin.jvm.JvmName("getApproxTimeDEP")
        get() = _builder.approxTimeDEP
      @kotlin.jvm.JvmName("setApproxTimeDEP")
        set(value) {
        _builder.approxTimeDEP = value
      }
    /**
     * <code>optional float approx_time_DEP = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearApproxTimeDEP() {
      _builder.clearApproxTimeDEP()
    }
    /**
     * <code>optional float approx_time_DEP = 2;</code>
     * @return Whether the approxTimeDEP field is set.
     * @return This builder for chaining.
     */
    public fun hasApproxTimeDEP(): kotlin.Boolean {
      return _builder.hasApproxTimeDEP()
    }

    /**
     * `optional double approx_time = 8;`
     */
    public var approxTime: kotlin.Double
      @kotlin.jvm.JvmName("getApproxTime")
        get() = _builder.approxTime
      @kotlin.jvm.JvmName("setApproxTime")
        set(value) {
        _builder.approxTime = value
      }
    /**
     * <code>optional double approx_time = 8;</code>
     * @return This builder for chaining.
     */
    public fun clearApproxTime() {
      _builder.clearApproxTime()
    }
    /**
     * <code>optional double approx_time = 8;</code>
     * @return Whether the approxTime field is set.
     * @return This builder for chaining.
     */
    public fun hasApproxTime(): kotlin.Boolean {
      return _builder.hasApproxTime()
    }

    /**
     * `optional string action_name = 3;`
     */
    public var actionName: kotlin.String
      @kotlin.jvm.JvmName("getActionName")
        get() = _builder.actionName
      @kotlin.jvm.JvmName("setActionName")
        set(value) {
        _builder.actionName = value
      }
    /**
     * <code>optional string action_name = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearActionName() {
      _builder.clearActionName()
    }
    /**
     * <code>optional string action_name = 3;</code>
     * @return Whether the actionName field is set.
     * @return This builder for chaining.
     */
    public fun hasActionName(): kotlin.Boolean {
      return _builder.hasActionName()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DataProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ActionKeyValuePair data = 4;`
     */
     public val data: com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.dataList
      )
    /**
     * <code>repeated .ei.ActionKeyValuePair data = 4;</code>
     * @param value The data to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addData")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>.add(value: ei.Ei.ActionKeyValuePair) {
      _builder.addData(value)
    }
    /**
     * <code>repeated .ei.ActionKeyValuePair data = 4;</code>
     * @param value The data to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignData")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>.plusAssign(value: ei.Ei.ActionKeyValuePair) {
      add(value)
    }
    /**
     * <code>repeated .ei.ActionKeyValuePair data = 4;</code>
     * @param values The data to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllData")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ActionKeyValuePair>) {
      _builder.addAllData(values)
    }
    /**
     * <code>repeated .ei.ActionKeyValuePair data = 4;</code>
     * @param values The data to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllData")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ActionKeyValuePair>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ActionKeyValuePair data = 4;</code>
     * @param index The index to set the value at.
     * @param value The data to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setData")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>.set(index: kotlin.Int, value: ei.Ei.ActionKeyValuePair) {
      _builder.setData(index, value)
    }
    /**
     * <code>repeated .ei.ActionKeyValuePair data = 4;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearData")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ActionKeyValuePair, DataProxy>.clear() {
      _builder.clearData()
    }

    /**
     * `optional .ei.AppInfo app = 5;`
     */
    public var app: ei.Ei.AppInfo
      @kotlin.jvm.JvmName("getApp")
        get() = _builder.app
      @kotlin.jvm.JvmName("setApp")
        set(value) {
        _builder.app = value
      }
    /**
     * <code>optional .ei.AppInfo app = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearApp() {
      _builder.clearApp()
    }
    /**
     * <code>optional .ei.AppInfo app = 5;</code>
     * @return Whether the app field is set.
     * @return This builder for chaining.
     */
    public fun hasApp(): kotlin.Boolean {
      return _builder.hasApp()
    }

    public val GenericActionKt.Dsl.appOrNull: ei.Ei.AppInfo?
      get() = _builder.appOrNull

    /**
     * `optional .ei.DeviceInfo device = 6;`
     */
    public var device: ei.Ei.DeviceInfo
      @kotlin.jvm.JvmName("getDevice")
        get() = _builder.device
      @kotlin.jvm.JvmName("setDevice")
        set(value) {
        _builder.device = value
      }
    /**
     * <code>optional .ei.DeviceInfo device = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearDevice() {
      _builder.clearDevice()
    }
    /**
     * <code>optional .ei.DeviceInfo device = 6;</code>
     * @return Whether the device field is set.
     * @return This builder for chaining.
     */
    public fun hasDevice(): kotlin.Boolean {
      return _builder.hasDevice()
    }

    public val GenericActionKt.Dsl.deviceOrNull: ei.Ei.DeviceInfo?
      get() = _builder.deviceOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.GenericAction.copy(block: `ei`.GenericActionKt.Dsl.() -> kotlin.Unit): ei.Ei.GenericAction =
  `ei`.GenericActionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.GenericActionOrBuilder.appOrNull: ei.Ei.AppInfo?
  get() = if (hasApp()) getApp() else null

public val ei.Ei.GenericActionOrBuilder.deviceOrNull: ei.Ei.DeviceInfo?
  get() = if (hasDevice()) getDevice() else null


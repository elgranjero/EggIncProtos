// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecoopChickenRunEntry")
public inline fun coopChickenRunEntry(block: ei.CoopChickenRunEntryKt.Dsl.() -> kotlin.Unit): ei.Ei.CoopChickenRunEntry =
  ei.CoopChickenRunEntryKt.Dsl._create(ei.Ei.CoopChickenRunEntry.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.CoopChickenRunEntry`
 */
public object CoopChickenRunEntryKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CoopChickenRunEntry.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CoopChickenRunEntry.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CoopChickenRunEntry = _builder.build()

    /**
     * `optional string user_id = 1;`
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.userId
      @JvmName("setUserId")
      set(value) {
        _builder.userId = value
      }
    /**
     * `optional string user_id = 1;`
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * `optional string user_id = 1;`
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional double server_timestamp = 2;`
     */
    public var serverTimestamp: kotlin.Double
      @JvmName("getServerTimestamp")
      get() = _builder.serverTimestamp
      @JvmName("setServerTimestamp")
      set(value) {
        _builder.serverTimestamp = value
      }
    /**
     * `optional double server_timestamp = 2;`
     */
    public fun clearServerTimestamp() {
      _builder.clearServerTimestamp()
    }
    /**
     * `optional double server_timestamp = 2;`
     * @return Whether the serverTimestamp field is set.
     */
    public fun hasServerTimestamp(): kotlin.Boolean {
      return _builder.hasServerTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CoopChickenRunEntry.copy(block: `ei`.CoopChickenRunEntryKt.Dsl.() -> kotlin.Unit): ei.Ei.CoopChickenRunEntry =
  `ei`.CoopChickenRunEntryKt.Dsl._create(this.toBuilder()).apply { block() }._build()


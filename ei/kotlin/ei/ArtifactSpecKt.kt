// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeartifactSpec")
public inline fun artifactSpec(block: ei.ArtifactSpecKt.Dsl.() -> kotlin.Unit): ei.Ei.ArtifactSpec =
  ei.ArtifactSpecKt.Dsl._create(ei.Ei.ArtifactSpec.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ArtifactSpec`
 */
public object ArtifactSpecKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ArtifactSpec.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ArtifactSpec.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ArtifactSpec = _builder.build()

    /**
     * `optional .ei.ArtifactSpec.Name name = 1;`
     */
    public var name: ei.Ei.ArtifactSpec.Name
      @JvmName("getName")
      get() = _builder.name
      @JvmName("setName")
      set(value) {
        _builder.name = value
      }
    /**
     * `optional .ei.ArtifactSpec.Name name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }
    /**
     * `optional .ei.ArtifactSpec.Name name = 1;`
     * @return Whether the name field is set.
     */
    public fun hasName(): kotlin.Boolean {
      return _builder.hasName()
    }

    /**
     * `optional .ei.ArtifactSpec.Level level = 2;`
     */
    public var level: ei.Ei.ArtifactSpec.Level
      @JvmName("getLevel")
      get() = _builder.level
      @JvmName("setLevel")
      set(value) {
        _builder.level = value
      }
    /**
     * `optional .ei.ArtifactSpec.Level level = 2;`
     */
    public fun clearLevel() {
      _builder.clearLevel()
    }
    /**
     * `optional .ei.ArtifactSpec.Level level = 2;`
     * @return Whether the level field is set.
     */
    public fun hasLevel(): kotlin.Boolean {
      return _builder.hasLevel()
    }

    /**
     * `optional .ei.ArtifactSpec.Rarity rarity = 3;`
     */
    public var rarity: ei.Ei.ArtifactSpec.Rarity
      @JvmName("getRarity")
      get() = _builder.rarity
      @JvmName("setRarity")
      set(value) {
        _builder.rarity = value
      }
    /**
     * `optional .ei.ArtifactSpec.Rarity rarity = 3;`
     */
    public fun clearRarity() {
      _builder.clearRarity()
    }
    /**
     * `optional .ei.ArtifactSpec.Rarity rarity = 3;`
     * @return Whether the rarity field is set.
     */
    public fun hasRarity(): kotlin.Boolean {
      return _builder.hasRarity()
    }

    /**
     * `optional .ei.Egg egg = 4;`
     */
    public var egg: ei.Ei.Egg
      @JvmName("getEgg")
      get() = _builder.egg
      @JvmName("setEgg")
      set(value) {
        _builder.egg = value
      }
    /**
     * `optional .ei.Egg egg = 4;`
     */
    public fun clearEgg() {
      _builder.clearEgg()
    }
    /**
     * `optional .ei.Egg egg = 4;`
     * @return Whether the egg field is set.
     */
    public fun hasEgg(): kotlin.Boolean {
      return _builder.hasEgg()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ArtifactSpec.copy(block: `ei`.ArtifactSpecKt.Dsl.() -> kotlin.Unit): ei.Ei.ArtifactSpec =
  `ei`.ArtifactSpecKt.Dsl._create(this.toBuilder()).apply { block() }._build()


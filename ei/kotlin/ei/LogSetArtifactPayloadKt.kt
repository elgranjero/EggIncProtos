// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializelogSetArtifactPayload")
public inline fun logSetArtifactPayload(block: ei.LogSetArtifactPayloadKt.Dsl.() -> kotlin.Unit): ei.Ei.LogSetArtifactPayload =
  ei.LogSetArtifactPayloadKt.Dsl._create(ei.Ei.LogSetArtifactPayload.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.LogSetArtifactPayload`
 */
public object LogSetArtifactPayloadKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.LogSetArtifactPayload.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.LogSetArtifactPayload.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.LogSetArtifactPayload = _builder.build()

    /**
     * `optional .ei.SetArtifactRequest req = 1;`
     */
    public var req: ei.Ei.SetArtifactRequest
      @kotlin.jvm.JvmName("getReq")
        get() = _builder.req
      @kotlin.jvm.JvmName("setReq")
        set(value) {
        _builder.req = value
      }
    /**
     * <code>optional .ei.SetArtifactRequest req = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearReq() {
      _builder.clearReq()
    }
    /**
     * <code>optional .ei.SetArtifactRequest req = 1;</code>
     * @return Whether the req field is set.
     * @return This builder for chaining.
     */
    public fun hasReq(): kotlin.Boolean {
      return _builder.hasReq()
    }

    public val LogSetArtifactPayloadKt.Dsl.reqOrNull: ei.Ei.SetArtifactRequest?
      get() = _builder.reqOrNull

    /**
     * `optional .ei.SetArtifactResponse res = 2;`
     */
    public var res: ei.Ei.SetArtifactResponse
      @kotlin.jvm.JvmName("getRes")
        get() = _builder.res
      @kotlin.jvm.JvmName("setRes")
        set(value) {
        _builder.res = value
      }
    /**
     * <code>optional .ei.SetArtifactResponse res = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearRes() {
      _builder.clearRes()
    }
    /**
     * <code>optional .ei.SetArtifactResponse res = 2;</code>
     * @return Whether the res field is set.
     * @return This builder for chaining.
     */
    public fun hasRes(): kotlin.Boolean {
      return _builder.hasRes()
    }

    public val LogSetArtifactPayloadKt.Dsl.resOrNull: ei.Ei.SetArtifactResponse?
      get() = _builder.resOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.LogSetArtifactPayload.copy(block: `ei`.LogSetArtifactPayloadKt.Dsl.() -> kotlin.Unit): ei.Ei.LogSetArtifactPayload =
  `ei`.LogSetArtifactPayloadKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.LogSetArtifactPayloadOrBuilder.reqOrNull: ei.Ei.SetArtifactRequest?
  get() = if (hasReq()) getReq() else null

public val ei.Ei.LogSetArtifactPayloadOrBuilder.resOrNull: ei.Ei.SetArtifactResponse?
  get() = if (hasRes()) getRes() else null


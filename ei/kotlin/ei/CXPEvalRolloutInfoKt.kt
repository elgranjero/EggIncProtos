// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecXPEvalRolloutInfo")
public inline fun cXPEvalRolloutInfo(block: ei.CXPEvalRolloutInfoKt.Dsl.() -> kotlin.Unit): ei.Ei.CXPEvalRolloutInfo =
  ei.CXPEvalRolloutInfoKt.Dsl._create(ei.Ei.CXPEvalRolloutInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.CXPEvalRolloutInfo`
 */
public object CXPEvalRolloutInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CXPEvalRolloutInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CXPEvalRolloutInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CXPEvalRolloutInfo = _builder.build()

    /**
     * `optional string current_id = 1;`
     */
    public var currentId: kotlin.String
      @JvmName("getCurrentId")
      get() = _builder.currentId
      @JvmName("setCurrentId")
      set(value) {
        _builder.currentId = value
      }
    /**
     * `optional string current_id = 1;`
     */
    public fun clearCurrentId() {
      _builder.clearCurrentId()
    }
    /**
     * `optional string current_id = 1;`
     * @return Whether the currentId field is set.
     */
    public fun hasCurrentId(): kotlin.Boolean {
      return _builder.hasCurrentId()
    }

    /**
     * `optional uint32 basis_points = 2;`
     */
    public var basisPoints: kotlin.Int
      @JvmName("getBasisPoints")
      get() = _builder.basisPoints
      @JvmName("setBasisPoints")
      set(value) {
        _builder.basisPoints = value
      }
    /**
     * `optional uint32 basis_points = 2;`
     */
    public fun clearBasisPoints() {
      _builder.clearBasisPoints()
    }
    /**
     * `optional uint32 basis_points = 2;`
     * @return Whether the basisPoints field is set.
     */
    public fun hasBasisPoints(): kotlin.Boolean {
      return _builder.hasBasisPoints()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CXPEvalRolloutInfo.copy(block: `ei`.CXPEvalRolloutInfoKt.Dsl.() -> kotlin.Unit): ei.Ei.CXPEvalRolloutInfo =
  `ei`.CXPEvalRolloutInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeshellSetSpec")
public inline fun shellSetSpec(block: ei.ShellSetSpecKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellSetSpec =
  ei.ShellSetSpecKt.Dsl._create(ei.Ei.ShellSetSpec.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ShellSetSpec`
 */
public object ShellSetSpecKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ShellSetSpec.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ShellSetSpec.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ShellSetSpec = _builder.build()

    /**
     * `optional string identifier = 1;`
     */
    public var identifier: kotlin.String
      @kotlin.jvm.JvmName("getIdentifier")
        get() = _builder.identifier
      @kotlin.jvm.JvmName("setIdentifier")
        set(value) {
        _builder.identifier = value
      }
    /**
     * <code>optional string identifier = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearIdentifier() {
      _builder.clearIdentifier()
    }
    /**
     * <code>optional string identifier = 1;</code>
     * @return Whether the identifier field is set.
     * @return This builder for chaining.
     */
    public fun hasIdentifier(): kotlin.Boolean {
      return _builder.hasIdentifier()
    }

    /**
     * `optional string name = 2;`
     */
    public var name: kotlin.String
      @kotlin.jvm.JvmName("getName")
        get() = _builder.name
      @kotlin.jvm.JvmName("setName")
        set(value) {
        _builder.name = value
      }
    /**
     * <code>optional string name = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearName() {
      _builder.clearName()
    }
    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     * @return This builder for chaining.
     */
    public fun hasName(): kotlin.Boolean {
      return _builder.hasName()
    }

    /**
     * `optional uint32 price = 3;`
     */
    public var price: kotlin.Int
      @kotlin.jvm.JvmName("getPrice")
        get() = _builder.price
      @kotlin.jvm.JvmName("setPrice")
        set(value) {
        _builder.price = value
      }
    /**
     * <code>optional uint32 price = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearPrice() {
      _builder.clearPrice()
    }
    /**
     * <code>optional uint32 price = 3;</code>
     * @return Whether the price field is set.
     * @return This builder for chaining.
     */
    public fun hasPrice(): kotlin.Boolean {
      return _builder.hasPrice()
    }

    /**
     * `optional double price_mult_DEPRECATED = 8 [default = 1];`
     */
    public var priceMultDEPRECATED: kotlin.Double
      @kotlin.jvm.JvmName("getPriceMultDEPRECATED")
        get() = _builder.priceMultDEPRECATED
      @kotlin.jvm.JvmName("setPriceMultDEPRECATED")
        set(value) {
        _builder.priceMultDEPRECATED = value
      }
    /**
     * <code>optional double price_mult_DEPRECATED = 8 [default = 1];</code>
     * @return This builder for chaining.
     */
    public fun clearPriceMultDEPRECATED() {
      _builder.clearPriceMultDEPRECATED()
    }
    /**
     * <code>optional double price_mult_DEPRECATED = 8 [default = 1];</code>
     * @return Whether the priceMultDEPRECATED field is set.
     * @return This builder for chaining.
     */
    public fun hasPriceMultDEPRECATED(): kotlin.Boolean {
      return _builder.hasPriceMultDEPRECATED()
    }

    /**
     * `optional double discount = 17;`
     */
    public var discount: kotlin.Double
      @kotlin.jvm.JvmName("getDiscount")
        get() = _builder.discount
      @kotlin.jvm.JvmName("setDiscount")
        set(value) {
        _builder.discount = value
      }
    /**
     * <code>optional double discount = 17;</code>
     * @return This builder for chaining.
     */
    public fun clearDiscount() {
      _builder.clearDiscount()
    }
    /**
     * <code>optional double discount = 17;</code>
     * @return Whether the discount field is set.
     * @return This builder for chaining.
     */
    public fun hasDiscount(): kotlin.Boolean {
      return _builder.hasDiscount()
    }

    /**
     * `optional uint32 required_eop = 4;`
     */
    public var requiredEop: kotlin.Int
      @kotlin.jvm.JvmName("getRequiredEop")
        get() = _builder.requiredEop
      @kotlin.jvm.JvmName("setRequiredEop")
        set(value) {
        _builder.requiredEop = value
      }
    /**
     * <code>optional uint32 required_eop = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearRequiredEop() {
      _builder.clearRequiredEop()
    }
    /**
     * <code>optional uint32 required_eop = 4;</code>
     * @return Whether the requiredEop field is set.
     * @return This builder for chaining.
     */
    public fun hasRequiredEop(): kotlin.Boolean {
      return _builder.hasRequiredEop()
    }

    /**
     * `optional double required_soul_eggs = 5;`
     */
    public var requiredSoulEggs: kotlin.Double
      @kotlin.jvm.JvmName("getRequiredSoulEggs")
        get() = _builder.requiredSoulEggs
      @kotlin.jvm.JvmName("setRequiredSoulEggs")
        set(value) {
        _builder.requiredSoulEggs = value
      }
    /**
     * <code>optional double required_soul_eggs = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearRequiredSoulEggs() {
      _builder.clearRequiredSoulEggs()
    }
    /**
     * <code>optional double required_soul_eggs = 5;</code>
     * @return Whether the requiredSoulEggs field is set.
     * @return This builder for chaining.
     */
    public fun hasRequiredSoulEggs(): kotlin.Boolean {
      return _builder.hasRequiredSoulEggs()
    }

    /**
     * `optional string required_parent_set = 20;`
     */
    public var requiredParentSet: kotlin.String
      @kotlin.jvm.JvmName("getRequiredParentSet")
        get() = _builder.requiredParentSet
      @kotlin.jvm.JvmName("setRequiredParentSet")
        set(value) {
        _builder.requiredParentSet = value
      }
    /**
     * <code>optional string required_parent_set = 20;</code>
     * @return This builder for chaining.
     */
    public fun clearRequiredParentSet() {
      _builder.clearRequiredParentSet()
    }
    /**
     * <code>optional string required_parent_set = 20;</code>
     * @return Whether the requiredParentSet field is set.
     * @return This builder for chaining.
     */
    public fun hasRequiredParentSet(): kotlin.Boolean {
      return _builder.hasRequiredParentSet()
    }

    /**
     * `optional bool is_new = 9;`
     */
    public var isNew: kotlin.Boolean
      @kotlin.jvm.JvmName("getIsNew")
        get() = _builder.isNew
      @kotlin.jvm.JvmName("setIsNew")
        set(value) {
        _builder.isNew = value
      }
    /**
     * <code>optional bool is_new = 9;</code>
     * @return This builder for chaining.
     */
    public fun clearIsNew() {
      _builder.clearIsNew()
    }
    /**
     * <code>optional bool is_new = 9;</code>
     * @return Whether the isNew field is set.
     * @return This builder for chaining.
     */
    public fun hasIsNew(): kotlin.Boolean {
      return _builder.hasIsNew()
    }

    /**
     * `optional bool expires = 10;`
     */
    public var expires: kotlin.Boolean
      @kotlin.jvm.JvmName("getExpires")
        get() = _builder.expires
      @kotlin.jvm.JvmName("setExpires")
        set(value) {
        _builder.expires = value
      }
    /**
     * <code>optional bool expires = 10;</code>
     * @return This builder for chaining.
     */
    public fun clearExpires() {
      _builder.clearExpires()
    }
    /**
     * <code>optional bool expires = 10;</code>
     * @return Whether the expires field is set.
     * @return This builder for chaining.
     */
    public fun hasExpires(): kotlin.Boolean {
      return _builder.hasExpires()
    }

    /**
     * `optional double seconds_until_available = 18;`
     */
    public var secondsUntilAvailable: kotlin.Double
      @kotlin.jvm.JvmName("getSecondsUntilAvailable")
        get() = _builder.secondsUntilAvailable
      @kotlin.jvm.JvmName("setSecondsUntilAvailable")
        set(value) {
        _builder.secondsUntilAvailable = value
      }
    /**
     * <code>optional double seconds_until_available = 18;</code>
     * @return This builder for chaining.
     */
    public fun clearSecondsUntilAvailable() {
      _builder.clearSecondsUntilAvailable()
    }
    /**
     * <code>optional double seconds_until_available = 18;</code>
     * @return Whether the secondsUntilAvailable field is set.
     * @return This builder for chaining.
     */
    public fun hasSecondsUntilAvailable(): kotlin.Boolean {
      return _builder.hasSecondsUntilAvailable()
    }

    /**
     * `optional double seconds_remaining = 11;`
     */
    public var secondsRemaining: kotlin.Double
      @kotlin.jvm.JvmName("getSecondsRemaining")
        get() = _builder.secondsRemaining
      @kotlin.jvm.JvmName("setSecondsRemaining")
        set(value) {
        _builder.secondsRemaining = value
      }
    /**
     * <code>optional double seconds_remaining = 11;</code>
     * @return This builder for chaining.
     */
    public fun clearSecondsRemaining() {
      _builder.clearSecondsRemaining()
    }
    /**
     * <code>optional double seconds_remaining = 11;</code>
     * @return Whether the secondsRemaining field is set.
     * @return This builder for chaining.
     */
    public fun hasSecondsRemaining(): kotlin.Boolean {
      return _builder.hasSecondsRemaining()
    }

    /**
     * `optional uint64 popularity = 21;`
     */
    public var popularity: kotlin.Long
      @kotlin.jvm.JvmName("getPopularity")
        get() = _builder.popularity
      @kotlin.jvm.JvmName("setPopularity")
        set(value) {
        _builder.popularity = value
      }
    /**
     * <code>optional uint64 popularity = 21;</code>
     * @return This builder for chaining.
     */
    public fun clearPopularity() {
      _builder.clearPopularity()
    }
    /**
     * <code>optional uint64 popularity = 21;</code>
     * @return Whether the popularity field is set.
     * @return This builder for chaining.
     */
    public fun hasPopularity(): kotlin.Boolean {
      return _builder.hasPopularity()
    }

    /**
     * `optional bool decorator = 14;`
     */
    public var decorator: kotlin.Boolean
      @kotlin.jvm.JvmName("getDecorator")
        get() = _builder.decorator
      @kotlin.jvm.JvmName("setDecorator")
        set(value) {
        _builder.decorator = value
      }
    /**
     * <code>optional bool decorator = 14;</code>
     * @return This builder for chaining.
     */
    public fun clearDecorator() {
      _builder.clearDecorator()
    }
    /**
     * <code>optional bool decorator = 14;</code>
     * @return Whether the decorator field is set.
     * @return This builder for chaining.
     */
    public fun hasDecorator(): kotlin.Boolean {
      return _builder.hasDecorator()
    }

    /**
     * `optional bool modified_geometry = 13;`
     */
    public var modifiedGeometry: kotlin.Boolean
      @kotlin.jvm.JvmName("getModifiedGeometry")
        get() = _builder.modifiedGeometry
      @kotlin.jvm.JvmName("setModifiedGeometry")
        set(value) {
        _builder.modifiedGeometry = value
      }
    /**
     * <code>optional bool modified_geometry = 13;</code>
     * @return This builder for chaining.
     */
    public fun clearModifiedGeometry() {
      _builder.clearModifiedGeometry()
    }
    /**
     * <code>optional bool modified_geometry = 13;</code>
     * @return Whether the modifiedGeometry field is set.
     * @return This builder for chaining.
     */
    public fun hasModifiedGeometry(): kotlin.Boolean {
      return _builder.hasModifiedGeometry()
    }

    /**
     * `optional bool element_set = 7;`
     */
    public var elementSet: kotlin.Boolean
      @kotlin.jvm.JvmName("getElementSet")
        get() = _builder.elementSet
      @kotlin.jvm.JvmName("setElementSet")
        set(value) {
        _builder.elementSet = value
      }
    /**
     * <code>optional bool element_set = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearElementSet() {
      _builder.clearElementSet()
    }
    /**
     * <code>optional bool element_set = 7;</code>
     * @return Whether the elementSet field is set.
     * @return This builder for chaining.
     */
    public fun hasElementSet(): kotlin.Boolean {
      return _builder.hasElementSet()
    }

    /**
     * `optional string hex_base_color = 16;`
     */
    public var hexBaseColor: kotlin.String
      @kotlin.jvm.JvmName("getHexBaseColor")
        get() = _builder.hexBaseColor
      @kotlin.jvm.JvmName("setHexBaseColor")
        set(value) {
        _builder.hexBaseColor = value
      }
    /**
     * <code>optional string hex_base_color = 16;</code>
     * @return This builder for chaining.
     */
    public fun clearHexBaseColor() {
      _builder.clearHexBaseColor()
    }
    /**
     * <code>optional string hex_base_color = 16;</code>
     * @return Whether the hexBaseColor field is set.
     * @return This builder for chaining.
     */
    public fun hasHexBaseColor(): kotlin.Boolean {
      return _builder.hasHexBaseColor()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class VariationsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ShellSetSpec.VariationSpec variations = 15;`
     */
     public val variations: com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.variationsList
      )
    /**
     * <code>repeated .ei.ShellSetSpec.VariationSpec variations = 15;</code>
     * @param value The variations to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addVariations")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>.add(value: ei.Ei.ShellSetSpec.VariationSpec) {
      _builder.addVariations(value)
    }
    /**
     * <code>repeated .ei.ShellSetSpec.VariationSpec variations = 15;</code>
     * @param value The variations to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignVariations")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>.plusAssign(value: ei.Ei.ShellSetSpec.VariationSpec) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellSetSpec.VariationSpec variations = 15;</code>
     * @param values The variations to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllVariations")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellSetSpec.VariationSpec>) {
      _builder.addAllVariations(values)
    }
    /**
     * <code>repeated .ei.ShellSetSpec.VariationSpec variations = 15;</code>
     * @param values The variations to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllVariations")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellSetSpec.VariationSpec>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellSetSpec.VariationSpec variations = 15;</code>
     * @param index The index to set the value at.
     * @param value The variations to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setVariations")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>.set(index: kotlin.Int, value: ei.Ei.ShellSetSpec.VariationSpec) {
      _builder.setVariations(index, value)
    }
    /**
     * <code>repeated .ei.ShellSetSpec.VariationSpec variations = 15;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearVariations")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellSetSpec.VariationSpec, VariationsProxy>.clear() {
      _builder.clearVariations()
    }

    /**
     * `optional .ei.DLCItem icon = 19;`
     */
    public var icon: ei.Ei.DLCItem
      @kotlin.jvm.JvmName("getIcon")
        get() = _builder.icon
      @kotlin.jvm.JvmName("setIcon")
        set(value) {
        _builder.icon = value
      }
    /**
     * <code>optional .ei.DLCItem icon = 19;</code>
     * @return This builder for chaining.
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }
    /**
     * <code>optional .ei.DLCItem icon = 19;</code>
     * @return Whether the icon field is set.
     * @return This builder for chaining.
     */
    public fun hasIcon(): kotlin.Boolean {
      return _builder.hasIcon()
    }

    public val ShellSetSpecKt.Dsl.iconOrNull: ei.Ei.DLCItem?
      get() = _builder.iconOrNull

    /**
     * `optional bool default_appearance = 6;`
     */
    public var defaultAppearance: kotlin.Boolean
      @kotlin.jvm.JvmName("getDefaultAppearance")
        get() = _builder.defaultAppearance
      @kotlin.jvm.JvmName("setDefaultAppearance")
        set(value) {
        _builder.defaultAppearance = value
      }
    /**
     * <code>optional bool default_appearance = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearDefaultAppearance() {
      _builder.clearDefaultAppearance()
    }
    /**
     * <code>optional bool default_appearance = 6;</code>
     * @return Whether the defaultAppearance field is set.
     * @return This builder for chaining.
     */
    public fun hasDefaultAppearance(): kotlin.Boolean {
      return _builder.hasDefaultAppearance()
    }

    /**
     * `optional bool custom_appearance = 12;`
     */
    public var customAppearance: kotlin.Boolean
      @kotlin.jvm.JvmName("getCustomAppearance")
        get() = _builder.customAppearance
      @kotlin.jvm.JvmName("setCustomAppearance")
        set(value) {
        _builder.customAppearance = value
      }
    /**
     * <code>optional bool custom_appearance = 12;</code>
     * @return This builder for chaining.
     */
    public fun clearCustomAppearance() {
      _builder.clearCustomAppearance()
    }
    /**
     * <code>optional bool custom_appearance = 12;</code>
     * @return Whether the customAppearance field is set.
     * @return This builder for chaining.
     */
    public fun hasCustomAppearance(): kotlin.Boolean {
      return _builder.hasCustomAppearance()
    }
  }
  @kotlin.jvm.JvmName("-initializevariationSpec")
  public inline fun variationSpec(block: ei.ShellSetSpecKt.VariationSpecKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellSetSpec.VariationSpec =
    ei.ShellSetSpecKt.VariationSpecKt.Dsl._create(ei.Ei.ShellSetSpec.VariationSpec.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `ei.ShellSetSpec.VariationSpec`
   */
  public object VariationSpecKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: ei.Ei.ShellSetSpec.VariationSpec.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: ei.Ei.ShellSetSpec.VariationSpec.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): ei.Ei.ShellSetSpec.VariationSpec = _builder.build()

      /**
       * `optional string identifier = 1;`
       */
      public var identifier: kotlin.String
        @kotlin.jvm.JvmName("getIdentifier")
          get() = _builder.identifier
        @kotlin.jvm.JvmName("setIdentifier")
          set(value) {
          _builder.identifier = value
        }
      /**
       * <code>optional string identifier = 1;</code>
       * @return This builder for chaining.
       */
      public fun clearIdentifier() {
        _builder.clearIdentifier()
      }
      /**
       * <code>optional string identifier = 1;</code>
       * @return Whether the identifier field is set.
       * @return This builder for chaining.
       */
      public fun hasIdentifier(): kotlin.Boolean {
        return _builder.hasIdentifier()
      }

      /**
       * `optional string hex_color = 2;`
       */
      public var hexColor: kotlin.String
        @kotlin.jvm.JvmName("getHexColor")
          get() = _builder.hexColor
        @kotlin.jvm.JvmName("setHexColor")
          set(value) {
          _builder.hexColor = value
        }
      /**
       * <code>optional string hex_color = 2;</code>
       * @return This builder for chaining.
       */
      public fun clearHexColor() {
        _builder.clearHexColor()
      }
      /**
       * <code>optional string hex_color = 2;</code>
       * @return Whether the hexColor field is set.
       * @return This builder for chaining.
       */
      public fun hasHexColor(): kotlin.Boolean {
        return _builder.hasHexColor()
      }

      /**
       * `optional uint32 price = 3;`
       */
      public var price: kotlin.Int
        @kotlin.jvm.JvmName("getPrice")
          get() = _builder.price
        @kotlin.jvm.JvmName("setPrice")
          set(value) {
          _builder.price = value
        }
      /**
       * <code>optional uint32 price = 3;</code>
       * @return This builder for chaining.
       */
      public fun clearPrice() {
        _builder.clearPrice()
      }
      /**
       * <code>optional uint32 price = 3;</code>
       * @return Whether the price field is set.
       * @return This builder for chaining.
       */
      public fun hasPrice(): kotlin.Boolean {
        return _builder.hasPrice()
      }

      /**
       * `optional int32 sort_priority = 6;`
       */
      public var sortPriority: kotlin.Int
        @kotlin.jvm.JvmName("getSortPriority")
          get() = _builder.sortPriority
        @kotlin.jvm.JvmName("setSortPriority")
          set(value) {
          _builder.sortPriority = value
        }
      /**
       * <code>optional int32 sort_priority = 6;</code>
       * @return This builder for chaining.
       */
      public fun clearSortPriority() {
        _builder.clearSortPriority()
      }
      /**
       * <code>optional int32 sort_priority = 6;</code>
       * @return Whether the sortPriority field is set.
       * @return This builder for chaining.
       */
      public fun hasSortPriority(): kotlin.Boolean {
        return _builder.hasSortPriority()
      }

      /**
       * `optional bool default_appearance = 4;`
       */
      public var defaultAppearance: kotlin.Boolean
        @kotlin.jvm.JvmName("getDefaultAppearance")
          get() = _builder.defaultAppearance
        @kotlin.jvm.JvmName("setDefaultAppearance")
          set(value) {
          _builder.defaultAppearance = value
        }
      /**
       * <code>optional bool default_appearance = 4;</code>
       * @return This builder for chaining.
       */
      public fun clearDefaultAppearance() {
        _builder.clearDefaultAppearance()
      }
      /**
       * <code>optional bool default_appearance = 4;</code>
       * @return Whether the defaultAppearance field is set.
       * @return This builder for chaining.
       */
      public fun hasDefaultAppearance(): kotlin.Boolean {
        return _builder.hasDefaultAppearance()
      }

      /**
       * `optional bool custom_appearance = 5;`
       */
      public var customAppearance: kotlin.Boolean
        @kotlin.jvm.JvmName("getCustomAppearance")
          get() = _builder.customAppearance
        @kotlin.jvm.JvmName("setCustomAppearance")
          set(value) {
          _builder.customAppearance = value
        }
      /**
       * <code>optional bool custom_appearance = 5;</code>
       * @return This builder for chaining.
       */
      public fun clearCustomAppearance() {
        _builder.clearCustomAppearance()
      }
      /**
       * <code>optional bool custom_appearance = 5;</code>
       * @return Whether the customAppearance field is set.
       * @return This builder for chaining.
       */
      public fun hasCustomAppearance(): kotlin.Boolean {
        return _builder.hasCustomAppearance()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellSetSpec.copy(block: `ei`.ShellSetSpecKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellSetSpec =
  `ei`.ShellSetSpecKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellSetSpec.VariationSpec.copy(block: `ei`.ShellSetSpecKt.VariationSpecKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellSetSpec.VariationSpec =
  `ei`.ShellSetSpecKt.VariationSpecKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.ShellSetSpecOrBuilder.iconOrNull: ei.Ei.DLCItem?
  get() = if (hasIcon()) getIcon() else null


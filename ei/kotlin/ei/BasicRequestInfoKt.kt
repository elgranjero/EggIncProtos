// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializebasicRequestInfo")
public inline fun basicRequestInfo(block: ei.BasicRequestInfoKt.Dsl.() -> kotlin.Unit): ei.Ei.BasicRequestInfo =
  ei.BasicRequestInfoKt.Dsl._create(ei.Ei.BasicRequestInfo.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.BasicRequestInfo`
 */
public object BasicRequestInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.BasicRequestInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.BasicRequestInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.BasicRequestInfo = _builder.build()

    /**
     * `optional string ei_user_id = 1;`
     */
    public var eiUserId: kotlin.String
      @kotlin.jvm.JvmName("getEiUserId")
        get() = _builder.eiUserId
      @kotlin.jvm.JvmName("setEiUserId")
        set(value) {
        _builder.eiUserId = value
      }
    /**
     * <code>optional string ei_user_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearEiUserId() {
      _builder.clearEiUserId()
    }
    /**
     * <code>optional string ei_user_id = 1;</code>
     * @return Whether the eiUserId field is set.
     * @return This builder for chaining.
     */
    public fun hasEiUserId(): kotlin.Boolean {
      return _builder.hasEiUserId()
    }

    /**
     * `optional uint32 client_version = 2;`
     */
    public var clientVersion: kotlin.Int
      @kotlin.jvm.JvmName("getClientVersion")
        get() = _builder.clientVersion
      @kotlin.jvm.JvmName("setClientVersion")
        set(value) {
        _builder.clientVersion = value
      }
    /**
     * <code>optional uint32 client_version = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearClientVersion() {
      _builder.clearClientVersion()
    }
    /**
     * <code>optional uint32 client_version = 2;</code>
     * @return Whether the clientVersion field is set.
     * @return This builder for chaining.
     */
    public fun hasClientVersion(): kotlin.Boolean {
      return _builder.hasClientVersion()
    }

    /**
     * `optional string version = 3;`
     */
    public var version: kotlin.String
      @kotlin.jvm.JvmName("getVersion")
        get() = _builder.version
      @kotlin.jvm.JvmName("setVersion")
        set(value) {
        _builder.version = value
      }
    /**
     * <code>optional string version = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }
    /**
     * <code>optional string version = 3;</code>
     * @return Whether the version field is set.
     * @return This builder for chaining.
     */
    public fun hasVersion(): kotlin.Boolean {
      return _builder.hasVersion()
    }

    /**
     * `optional string build = 4;`
     */
    public var build: kotlin.String
      @kotlin.jvm.JvmName("getBuild")
        get() = _builder.build
      @kotlin.jvm.JvmName("setBuild")
        set(value) {
        _builder.build = value
      }
    /**
     * <code>optional string build = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearBuild() {
      _builder.clearBuild()
    }
    /**
     * <code>optional string build = 4;</code>
     * @return Whether the build field is set.
     * @return This builder for chaining.
     */
    public fun hasBuild(): kotlin.Boolean {
      return _builder.hasBuild()
    }

    /**
     * `optional string platform = 5;`
     */
    public var platform: kotlin.String
      @kotlin.jvm.JvmName("getPlatform")
        get() = _builder.platform
      @kotlin.jvm.JvmName("setPlatform")
        set(value) {
        _builder.platform = value
      }
    /**
     * <code>optional string platform = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }
    /**
     * <code>optional string platform = 5;</code>
     * @return Whether the platform field is set.
     * @return This builder for chaining.
     */
    public fun hasPlatform(): kotlin.Boolean {
      return _builder.hasPlatform()
    }

    /**
     * `optional string country = 6;`
     */
    public var country: kotlin.String
      @kotlin.jvm.JvmName("getCountry")
        get() = _builder.country
      @kotlin.jvm.JvmName("setCountry")
        set(value) {
        _builder.country = value
      }
    /**
     * <code>optional string country = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearCountry() {
      _builder.clearCountry()
    }
    /**
     * <code>optional string country = 6;</code>
     * @return Whether the country field is set.
     * @return This builder for chaining.
     */
    public fun hasCountry(): kotlin.Boolean {
      return _builder.hasCountry()
    }

    /**
     * `optional string language = 7;`
     */
    public var language: kotlin.String
      @kotlin.jvm.JvmName("getLanguage")
        get() = _builder.language
      @kotlin.jvm.JvmName("setLanguage")
        set(value) {
        _builder.language = value
      }
    /**
     * <code>optional string language = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearLanguage() {
      _builder.clearLanguage()
    }
    /**
     * <code>optional string language = 7;</code>
     * @return Whether the language field is set.
     * @return This builder for chaining.
     */
    public fun hasLanguage(): kotlin.Boolean {
      return _builder.hasLanguage()
    }

    /**
     * `optional bool debug = 8;`
     */
    public var debug: kotlin.Boolean
      @kotlin.jvm.JvmName("getDebug")
        get() = _builder.debug
      @kotlin.jvm.JvmName("setDebug")
        set(value) {
        _builder.debug = value
      }
    /**
     * <code>optional bool debug = 8;</code>
     * @return This builder for chaining.
     */
    public fun clearDebug() {
      _builder.clearDebug()
    }
    /**
     * <code>optional bool debug = 8;</code>
     * @return Whether the debug field is set.
     * @return This builder for chaining.
     */
    public fun hasDebug(): kotlin.Boolean {
      return _builder.hasDebug()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.BasicRequestInfo.copy(block: `ei`.BasicRequestInfoKt.Dsl.() -> kotlin.Unit): ei.Ei.BasicRequestInfo =
  `ei`.BasicRequestInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializesubmitShellShowcaseRequest")
public inline fun submitShellShowcaseRequest(block: ei.SubmitShellShowcaseRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SubmitShellShowcaseRequest =
  ei.SubmitShellShowcaseRequestKt.Dsl._create(ei.Ei.SubmitShellShowcaseRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.SubmitShellShowcaseRequest`
 */
public object SubmitShellShowcaseRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.SubmitShellShowcaseRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.SubmitShellShowcaseRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.SubmitShellShowcaseRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 4;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @kotlin.jvm.JvmName("getRinfo")
        get() = _builder.rinfo
      @kotlin.jvm.JvmName("setRinfo")
        set(value) {
        _builder.rinfo = value
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 4;</code>
     * @return Whether the rinfo field is set.
     * @return This builder for chaining.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val SubmitShellShowcaseRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string local_id = 1;`
     */
    public var localId: kotlin.String
      @kotlin.jvm.JvmName("getLocalId")
        get() = _builder.localId
      @kotlin.jvm.JvmName("setLocalId")
        set(value) {
        _builder.localId = value
      }
    /**
     * <code>optional string local_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearLocalId() {
      _builder.clearLocalId()
    }
    /**
     * <code>optional string local_id = 1;</code>
     * @return Whether the localId field is set.
     * @return This builder for chaining.
     */
    public fun hasLocalId(): kotlin.Boolean {
      return _builder.hasLocalId()
    }

    /**
     * `optional string user_id = 2;`
     */
    public var userId: kotlin.String
      @kotlin.jvm.JvmName("getUserId")
        get() = _builder.userId
      @kotlin.jvm.JvmName("setUserId")
        set(value) {
        _builder.userId = value
      }
    /**
     * <code>optional string user_id = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 2;</code>
     * @return Whether the userId field is set.
     * @return This builder for chaining.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional bool public_username = 5;`
     */
    public var publicUsername: kotlin.Boolean
      @kotlin.jvm.JvmName("getPublicUsername")
        get() = _builder.publicUsername
      @kotlin.jvm.JvmName("setPublicUsername")
        set(value) {
        _builder.publicUsername = value
      }
    /**
     * <code>optional bool public_username = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearPublicUsername() {
      _builder.clearPublicUsername()
    }
    /**
     * <code>optional bool public_username = 5;</code>
     * @return Whether the publicUsername field is set.
     * @return This builder for chaining.
     */
    public fun hasPublicUsername(): kotlin.Boolean {
      return _builder.hasPublicUsername()
    }

    /**
     * `optional .ei.ShellDB.FarmConfiguration farm_config = 3;`
     */
    public var farmConfig: ei.Ei.ShellDB.FarmConfiguration
      @kotlin.jvm.JvmName("getFarmConfig")
        get() = _builder.farmConfig
      @kotlin.jvm.JvmName("setFarmConfig")
        set(value) {
        _builder.farmConfig = value
      }
    /**
     * <code>optional .ei.ShellDB.FarmConfiguration farm_config = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearFarmConfig() {
      _builder.clearFarmConfig()
    }
    /**
     * <code>optional .ei.ShellDB.FarmConfiguration farm_config = 3;</code>
     * @return Whether the farmConfig field is set.
     * @return This builder for chaining.
     */
    public fun hasFarmConfig(): kotlin.Boolean {
      return _builder.hasFarmConfig()
    }

    public val SubmitShellShowcaseRequestKt.Dsl.farmConfigOrNull: ei.Ei.ShellDB.FarmConfiguration?
      get() = _builder.farmConfigOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.SubmitShellShowcaseRequest.copy(block: `ei`.SubmitShellShowcaseRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SubmitShellShowcaseRequest =
  `ei`.SubmitShellShowcaseRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.SubmitShellShowcaseRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

public val ei.Ei.SubmitShellShowcaseRequestOrBuilder.farmConfigOrNull: ei.Ei.ShellDB.FarmConfiguration?
  get() = if (hasFarmConfig()) getFarmConfig() else null


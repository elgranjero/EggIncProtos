// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeautoJoinCoopRequest")
public inline fun autoJoinCoopRequest(block: ei.AutoJoinCoopRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.AutoJoinCoopRequest =
  ei.AutoJoinCoopRequestKt.Dsl._create(ei.Ei.AutoJoinCoopRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.AutoJoinCoopRequest`
 */
public object AutoJoinCoopRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.AutoJoinCoopRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.AutoJoinCoopRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.AutoJoinCoopRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 9;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @kotlin.jvm.JvmName("getRinfo")
        get() = _builder.rinfo
      @kotlin.jvm.JvmName("setRinfo")
        set(value) {
        _builder.rinfo = value
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 9;</code>
     * @return This builder for chaining.
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 9;</code>
     * @return Whether the rinfo field is set.
     * @return This builder for chaining.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val AutoJoinCoopRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string contract_identifier = 1;`
     */
    public var contractIdentifier: kotlin.String
      @kotlin.jvm.JvmName("getContractIdentifier")
        get() = _builder.contractIdentifier
      @kotlin.jvm.JvmName("setContractIdentifier")
        set(value) {
        _builder.contractIdentifier = value
      }
    /**
     * <code>optional string contract_identifier = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearContractIdentifier() {
      _builder.clearContractIdentifier()
    }
    /**
     * <code>optional string contract_identifier = 1;</code>
     * @return Whether the contractIdentifier field is set.
     * @return This builder for chaining.
     */
    public fun hasContractIdentifier(): kotlin.Boolean {
      return _builder.hasContractIdentifier()
    }

    /**
     * `optional string user_id = 2;`
     */
    public var userId: kotlin.String
      @kotlin.jvm.JvmName("getUserId")
        get() = _builder.userId
      @kotlin.jvm.JvmName("setUserId")
        set(value) {
        _builder.userId = value
      }
    /**
     * <code>optional string user_id = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 2;</code>
     * @return Whether the userId field is set.
     * @return This builder for chaining.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional string user_name = 3;`
     */
    public var userName: kotlin.String
      @kotlin.jvm.JvmName("getUserName")
        get() = _builder.userName
      @kotlin.jvm.JvmName("setUserName")
        set(value) {
        _builder.userName = value
      }
    /**
     * <code>optional string user_name = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearUserName() {
      _builder.clearUserName()
    }
    /**
     * <code>optional string user_name = 3;</code>
     * @return Whether the userName field is set.
     * @return This builder for chaining.
     */
    public fun hasUserName(): kotlin.Boolean {
      return _builder.hasUserName()
    }

    /**
     * `optional double soul_power = 4;`
     */
    public var soulPower: kotlin.Double
      @kotlin.jvm.JvmName("getSoulPower")
        get() = _builder.soulPower
      @kotlin.jvm.JvmName("setSoulPower")
        set(value) {
        _builder.soulPower = value
      }
    /**
     * <code>optional double soul_power = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearSoulPower() {
      _builder.clearSoulPower()
    }
    /**
     * <code>optional double soul_power = 4;</code>
     * @return Whether the soulPower field is set.
     * @return This builder for chaining.
     */
    public fun hasSoulPower(): kotlin.Boolean {
      return _builder.hasSoulPower()
    }

    /**
     * `optional double eop = 10;`
     */
    public var eop: kotlin.Double
      @kotlin.jvm.JvmName("getEop")
        get() = _builder.eop
      @kotlin.jvm.JvmName("setEop")
        set(value) {
        _builder.eop = value
      }
    /**
     * <code>optional double eop = 10;</code>
     * @return This builder for chaining.
     */
    public fun clearEop() {
      _builder.clearEop()
    }
    /**
     * <code>optional double eop = 10;</code>
     * @return Whether the eop field is set.
     * @return This builder for chaining.
     */
    public fun hasEop(): kotlin.Boolean {
      return _builder.hasEop()
    }

    /**
     * `optional uint32 league = 8;`
     */
    public var league: kotlin.Int
      @kotlin.jvm.JvmName("getLeague")
        get() = _builder.league
      @kotlin.jvm.JvmName("setLeague")
        set(value) {
        _builder.league = value
      }
    /**
     * <code>optional uint32 league = 8;</code>
     * @return This builder for chaining.
     */
    public fun clearLeague() {
      _builder.clearLeague()
    }
    /**
     * <code>optional uint32 league = 8;</code>
     * @return Whether the league field is set.
     * @return This builder for chaining.
     */
    public fun hasLeague(): kotlin.Boolean {
      return _builder.hasLeague()
    }

    /**
     * `optional .ei.Contract.PlayerGrade grade = 12;`
     */
    public var grade: ei.Ei.Contract.PlayerGrade
      @kotlin.jvm.JvmName("getGrade")
        get() = _builder.grade
      @kotlin.jvm.JvmName("setGrade")
        set(value) {
        _builder.grade = value
      }
    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 12;</code>
     * @return This builder for chaining.
     */
    public fun clearGrade() {
      _builder.clearGrade()
    }
    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 12;</code>
     * @return Whether the grade field is set.
     * @return This builder for chaining.
     */
    public fun hasGrade(): kotlin.Boolean {
      return _builder.hasGrade()
    }

    /**
     * `optional bool points_replay = 14;`
     */
    public var pointsReplay: kotlin.Boolean
      @kotlin.jvm.JvmName("getPointsReplay")
        get() = _builder.pointsReplay
      @kotlin.jvm.JvmName("setPointsReplay")
        set(value) {
        _builder.pointsReplay = value
      }
    /**
     * <code>optional bool points_replay = 14;</code>
     * @return This builder for chaining.
     */
    public fun clearPointsReplay() {
      _builder.clearPointsReplay()
    }
    /**
     * <code>optional bool points_replay = 14;</code>
     * @return Whether the pointsReplay field is set.
     * @return This builder for chaining.
     */
    public fun hasPointsReplay(): kotlin.Boolean {
      return _builder.hasPointsReplay()
    }

    /**
     * `optional double seconds_remaining = 5;`
     */
    public var secondsRemaining: kotlin.Double
      @kotlin.jvm.JvmName("getSecondsRemaining")
        get() = _builder.secondsRemaining
      @kotlin.jvm.JvmName("setSecondsRemaining")
        set(value) {
        _builder.secondsRemaining = value
      }
    /**
     * <code>optional double seconds_remaining = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearSecondsRemaining() {
      _builder.clearSecondsRemaining()
    }
    /**
     * <code>optional double seconds_remaining = 5;</code>
     * @return Whether the secondsRemaining field is set.
     * @return This builder for chaining.
     */
    public fun hasSecondsRemaining(): kotlin.Boolean {
      return _builder.hasSecondsRemaining()
    }

    /**
     * `optional .ei.Platform platform = 6;`
     */
    public var platform: ei.Ei.Platform
      @kotlin.jvm.JvmName("getPlatform")
        get() = _builder.platform
      @kotlin.jvm.JvmName("setPlatform")
        set(value) {
        _builder.platform = value
      }
    /**
     * <code>optional .ei.Platform platform = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }
    /**
     * <code>optional .ei.Platform platform = 6;</code>
     * @return Whether the platform field is set.
     * @return This builder for chaining.
     */
    public fun hasPlatform(): kotlin.Boolean {
      return _builder.hasPlatform()
    }

    /**
     * `optional uint32 client_version = 7;`
     */
    public var clientVersion: kotlin.Int
      @kotlin.jvm.JvmName("getClientVersion")
        get() = _builder.clientVersion
      @kotlin.jvm.JvmName("setClientVersion")
        set(value) {
        _builder.clientVersion = value
      }
    /**
     * <code>optional uint32 client_version = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearClientVersion() {
      _builder.clearClientVersion()
    }
    /**
     * <code>optional uint32 client_version = 7;</code>
     * @return Whether the clientVersion field is set.
     * @return This builder for chaining.
     */
    public fun hasClientVersion(): kotlin.Boolean {
      return _builder.hasClientVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.AutoJoinCoopRequest.copy(block: `ei`.AutoJoinCoopRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.AutoJoinCoopRequest =
  `ei`.AutoJoinCoopRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.AutoJoinCoopRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null


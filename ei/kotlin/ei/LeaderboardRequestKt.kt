// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeleaderboardRequest")
public inline fun leaderboardRequest(block: ei.LeaderboardRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.LeaderboardRequest =
  ei.LeaderboardRequestKt.Dsl._create(ei.Ei.LeaderboardRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.LeaderboardRequest`
 */
public object LeaderboardRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.LeaderboardRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.LeaderboardRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.LeaderboardRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @kotlin.jvm.JvmName("getRinfo")
        get() = _builder.rinfo
      @kotlin.jvm.JvmName("setRinfo")
        set(value) {
        _builder.rinfo = value
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 1;</code>
     * @return Whether the rinfo field is set.
     * @return This builder for chaining.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val LeaderboardRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string scope = 2;`
     */
    public var scope: kotlin.String
      @kotlin.jvm.JvmName("getScope")
        get() = _builder.scope
      @kotlin.jvm.JvmName("setScope")
        set(value) {
        _builder.scope = value
      }
    /**
     * <code>optional string scope = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearScope() {
      _builder.clearScope()
    }
    /**
     * <code>optional string scope = 2;</code>
     * @return Whether the scope field is set.
     * @return This builder for chaining.
     */
    public fun hasScope(): kotlin.Boolean {
      return _builder.hasScope()
    }

    /**
     * `optional .ei.Contract.PlayerGrade grade = 3;`
     */
    public var grade: ei.Ei.Contract.PlayerGrade
      @kotlin.jvm.JvmName("getGrade")
        get() = _builder.grade
      @kotlin.jvm.JvmName("setGrade")
        set(value) {
        _builder.grade = value
      }
    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearGrade() {
      _builder.clearGrade()
    }
    /**
     * <code>optional .ei.Contract.PlayerGrade grade = 3;</code>
     * @return Whether the grade field is set.
     * @return This builder for chaining.
     */
    public fun hasGrade(): kotlin.Boolean {
      return _builder.hasGrade()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.LeaderboardRequest.copy(block: `ei`.LeaderboardRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.LeaderboardRequest =
  `ei`.LeaderboardRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.LeaderboardRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null


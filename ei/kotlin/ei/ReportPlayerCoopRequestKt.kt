// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializereportPlayerCoopRequest")
public inline fun reportPlayerCoopRequest(block: ei.ReportPlayerCoopRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ReportPlayerCoopRequest =
  ei.ReportPlayerCoopRequestKt.Dsl._create(ei.Ei.ReportPlayerCoopRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ReportPlayerCoopRequest`
 */
public object ReportPlayerCoopRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ReportPlayerCoopRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ReportPlayerCoopRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ReportPlayerCoopRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.rinfo
      @JvmName("setRinfo")
      set(value) {
        _builder.rinfo = value
      }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val ReportPlayerCoopRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string contract_identifier = 2;`
     */
    public var contractIdentifier: kotlin.String
      @JvmName("getContractIdentifier")
      get() = _builder.contractIdentifier
      @JvmName("setContractIdentifier")
      set(value) {
        _builder.contractIdentifier = value
      }
    /**
     * `optional string contract_identifier = 2;`
     */
    public fun clearContractIdentifier() {
      _builder.clearContractIdentifier()
    }
    /**
     * `optional string contract_identifier = 2;`
     * @return Whether the contractIdentifier field is set.
     */
    public fun hasContractIdentifier(): kotlin.Boolean {
      return _builder.hasContractIdentifier()
    }

    /**
     * `optional string coop_identifier = 3;`
     */
    public var coopIdentifier: kotlin.String
      @JvmName("getCoopIdentifier")
      get() = _builder.coopIdentifier
      @JvmName("setCoopIdentifier")
      set(value) {
        _builder.coopIdentifier = value
      }
    /**
     * `optional string coop_identifier = 3;`
     */
    public fun clearCoopIdentifier() {
      _builder.clearCoopIdentifier()
    }
    /**
     * `optional string coop_identifier = 3;`
     * @return Whether the coopIdentifier field is set.
     */
    public fun hasCoopIdentifier(): kotlin.Boolean {
      return _builder.hasCoopIdentifier()
    }

    /**
     * `optional string user_id = 4;`
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.userId
      @JvmName("setUserId")
      set(value) {
        _builder.userId = value
      }
    /**
     * `optional string user_id = 4;`
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * `optional string user_id = 4;`
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional .ei.ReportPlayerCoopRequest.Reason reason = 5;`
     */
    public var reason: ei.Ei.ReportPlayerCoopRequest.Reason
      @JvmName("getReason")
      get() = _builder.reason
      @JvmName("setReason")
      set(value) {
        _builder.reason = value
      }
    /**
     * `optional .ei.ReportPlayerCoopRequest.Reason reason = 5;`
     */
    public fun clearReason() {
      _builder.clearReason()
    }
    /**
     * `optional .ei.ReportPlayerCoopRequest.Reason reason = 5;`
     * @return Whether the reason field is set.
     */
    public fun hasReason(): kotlin.Boolean {
      return _builder.hasReason()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ReportPlayerCoopRequest.copy(block: `ei`.ReportPlayerCoopRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ReportPlayerCoopRequest =
  `ei`.ReportPlayerCoopRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.ReportPlayerCoopRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecontractAction")
public inline fun contractAction(block: ei.ContractActionKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractAction =
  ei.ContractActionKt.Dsl._create(ei.Ei.ContractAction.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ContractAction`
 */
public object ContractActionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ContractAction.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ContractAction.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ContractAction = _builder.build()

    /**
     * `optional string user_id = 1;`
     */
    public var userId: kotlin.String
      @kotlin.jvm.JvmName("getUserId")
        get() = _builder.userId
      @kotlin.jvm.JvmName("setUserId")
        set(value) {
        _builder.userId = value
      }
    /**
     * <code>optional string user_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 1;</code>
     * @return Whether the userId field is set.
     * @return This builder for chaining.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional string action_name = 2;`
     */
    public var actionName: kotlin.String
      @kotlin.jvm.JvmName("getActionName")
        get() = _builder.actionName
      @kotlin.jvm.JvmName("setActionName")
        set(value) {
        _builder.actionName = value
      }
    /**
     * <code>optional string action_name = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearActionName() {
      _builder.clearActionName()
    }
    /**
     * <code>optional string action_name = 2;</code>
     * @return Whether the actionName field is set.
     * @return This builder for chaining.
     */
    public fun hasActionName(): kotlin.Boolean {
      return _builder.hasActionName()
    }

    /**
     * `optional double approx_time = 3;`
     */
    public var approxTime: kotlin.Double
      @kotlin.jvm.JvmName("getApproxTime")
        get() = _builder.approxTime
      @kotlin.jvm.JvmName("setApproxTime")
        set(value) {
        _builder.approxTime = value
      }
    /**
     * <code>optional double approx_time = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearApproxTime() {
      _builder.clearApproxTime()
    }
    /**
     * <code>optional double approx_time = 3;</code>
     * @return Whether the approxTime field is set.
     * @return This builder for chaining.
     */
    public fun hasApproxTime(): kotlin.Boolean {
      return _builder.hasApproxTime()
    }

    /**
     * `optional string dest_user_id = 4;`
     */
    public var destUserId: kotlin.String
      @kotlin.jvm.JvmName("getDestUserId")
        get() = _builder.destUserId
      @kotlin.jvm.JvmName("setDestUserId")
        set(value) {
        _builder.destUserId = value
      }
    /**
     * <code>optional string dest_user_id = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearDestUserId() {
      _builder.clearDestUserId()
    }
    /**
     * <code>optional string dest_user_id = 4;</code>
     * @return Whether the destUserId field is set.
     * @return This builder for chaining.
     */
    public fun hasDestUserId(): kotlin.Boolean {
      return _builder.hasDestUserId()
    }

    /**
     * `optional string contract_id = 5;`
     */
    public var contractId: kotlin.String
      @kotlin.jvm.JvmName("getContractId")
        get() = _builder.contractId
      @kotlin.jvm.JvmName("setContractId")
        set(value) {
        _builder.contractId = value
      }
    /**
     * <code>optional string contract_id = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearContractId() {
      _builder.clearContractId()
    }
    /**
     * <code>optional string contract_id = 5;</code>
     * @return Whether the contractId field is set.
     * @return This builder for chaining.
     */
    public fun hasContractId(): kotlin.Boolean {
      return _builder.hasContractId()
    }

    /**
     * `optional string coop_id = 6;`
     */
    public var coopId: kotlin.String
      @kotlin.jvm.JvmName("getCoopId")
        get() = _builder.coopId
      @kotlin.jvm.JvmName("setCoopId")
        set(value) {
        _builder.coopId = value
      }
    /**
     * <code>optional string coop_id = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearCoopId() {
      _builder.clearCoopId()
    }
    /**
     * <code>optional string coop_id = 6;</code>
     * @return Whether the coopId field is set.
     * @return This builder for chaining.
     */
    public fun hasCoopId(): kotlin.Boolean {
      return _builder.hasCoopId()
    }

    /**
     * `optional bool autojoin = 7;`
     */
    public var autojoin: kotlin.Boolean
      @kotlin.jvm.JvmName("getAutojoin")
        get() = _builder.autojoin
      @kotlin.jvm.JvmName("setAutojoin")
        set(value) {
        _builder.autojoin = value
      }
    /**
     * <code>optional bool autojoin = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearAutojoin() {
      _builder.clearAutojoin()
    }
    /**
     * <code>optional bool autojoin = 7;</code>
     * @return Whether the autojoin field is set.
     * @return This builder for chaining.
     */
    public fun hasAutojoin(): kotlin.Boolean {
      return _builder.hasAutojoin()
    }

    /**
     * `optional uint32 grade = 8;`
     */
    public var grade: kotlin.Int
      @kotlin.jvm.JvmName("getGrade")
        get() = _builder.grade
      @kotlin.jvm.JvmName("setGrade")
        set(value) {
        _builder.grade = value
      }
    /**
     * <code>optional uint32 grade = 8;</code>
     * @return This builder for chaining.
     */
    public fun clearGrade() {
      _builder.clearGrade()
    }
    /**
     * <code>optional uint32 grade = 8;</code>
     * @return Whether the grade field is set.
     * @return This builder for chaining.
     */
    public fun hasGrade(): kotlin.Boolean {
      return _builder.hasGrade()
    }

    /**
     * `optional bool replay = 9;`
     */
    public var replay: kotlin.Boolean
      @kotlin.jvm.JvmName("getReplay")
        get() = _builder.replay
      @kotlin.jvm.JvmName("setReplay")
        set(value) {
        _builder.replay = value
      }
    /**
     * <code>optional bool replay = 9;</code>
     * @return This builder for chaining.
     */
    public fun clearReplay() {
      _builder.clearReplay()
    }
    /**
     * <code>optional bool replay = 9;</code>
     * @return Whether the replay field is set.
     * @return This builder for chaining.
     */
    public fun hasReplay(): kotlin.Boolean {
      return _builder.hasReplay()
    }

    /**
     * `optional bool points_replay = 10;`
     */
    public var pointsReplay: kotlin.Boolean
      @kotlin.jvm.JvmName("getPointsReplay")
        get() = _builder.pointsReplay
      @kotlin.jvm.JvmName("setPointsReplay")
        set(value) {
        _builder.pointsReplay = value
      }
    /**
     * <code>optional bool points_replay = 10;</code>
     * @return This builder for chaining.
     */
    public fun clearPointsReplay() {
      _builder.clearPointsReplay()
    }
    /**
     * <code>optional bool points_replay = 10;</code>
     * @return Whether the pointsReplay field is set.
     * @return This builder for chaining.
     */
    public fun hasPointsReplay(): kotlin.Boolean {
      return _builder.hasPointsReplay()
    }

    /**
     * `optional uint32 reward_type = 11;`
     */
    public var rewardType: kotlin.Int
      @kotlin.jvm.JvmName("getRewardType")
        get() = _builder.rewardType
      @kotlin.jvm.JvmName("setRewardType")
        set(value) {
        _builder.rewardType = value
      }
    /**
     * <code>optional uint32 reward_type = 11;</code>
     * @return This builder for chaining.
     */
    public fun clearRewardType() {
      _builder.clearRewardType()
    }
    /**
     * <code>optional uint32 reward_type = 11;</code>
     * @return Whether the rewardType field is set.
     * @return This builder for chaining.
     */
    public fun hasRewardType(): kotlin.Boolean {
      return _builder.hasRewardType()
    }

    /**
     * `optional string reward_subtype = 12;`
     */
    public var rewardSubtype: kotlin.String
      @kotlin.jvm.JvmName("getRewardSubtype")
        get() = _builder.rewardSubtype
      @kotlin.jvm.JvmName("setRewardSubtype")
        set(value) {
        _builder.rewardSubtype = value
      }
    /**
     * <code>optional string reward_subtype = 12;</code>
     * @return This builder for chaining.
     */
    public fun clearRewardSubtype() {
      _builder.clearRewardSubtype()
    }
    /**
     * <code>optional string reward_subtype = 12;</code>
     * @return Whether the rewardSubtype field is set.
     * @return This builder for chaining.
     */
    public fun hasRewardSubtype(): kotlin.Boolean {
      return _builder.hasRewardSubtype()
    }

    /**
     * `optional double reward_amount = 13;`
     */
    public var rewardAmount: kotlin.Double
      @kotlin.jvm.JvmName("getRewardAmount")
        get() = _builder.rewardAmount
      @kotlin.jvm.JvmName("setRewardAmount")
        set(value) {
        _builder.rewardAmount = value
      }
    /**
     * <code>optional double reward_amount = 13;</code>
     * @return This builder for chaining.
     */
    public fun clearRewardAmount() {
      _builder.clearRewardAmount()
    }
    /**
     * <code>optional double reward_amount = 13;</code>
     * @return Whether the rewardAmount field is set.
     * @return This builder for chaining.
     */
    public fun hasRewardAmount(): kotlin.Boolean {
      return _builder.hasRewardAmount()
    }

    /**
     * `optional uint32 goal_index = 14;`
     */
    public var goalIndex: kotlin.Int
      @kotlin.jvm.JvmName("getGoalIndex")
        get() = _builder.goalIndex
      @kotlin.jvm.JvmName("setGoalIndex")
        set(value) {
        _builder.goalIndex = value
      }
    /**
     * <code>optional uint32 goal_index = 14;</code>
     * @return This builder for chaining.
     */
    public fun clearGoalIndex() {
      _builder.clearGoalIndex()
    }
    /**
     * <code>optional uint32 goal_index = 14;</code>
     * @return Whether the goalIndex field is set.
     * @return This builder for chaining.
     */
    public fun hasGoalIndex(): kotlin.Boolean {
      return _builder.hasGoalIndex()
    }

    /**
     * `optional string boost_id = 15;`
     */
    public var boostId: kotlin.String
      @kotlin.jvm.JvmName("getBoostId")
        get() = _builder.boostId
      @kotlin.jvm.JvmName("setBoostId")
        set(value) {
        _builder.boostId = value
      }
    /**
     * <code>optional string boost_id = 15;</code>
     * @return This builder for chaining.
     */
    public fun clearBoostId() {
      _builder.clearBoostId()
    }
    /**
     * <code>optional string boost_id = 15;</code>
     * @return Whether the boostId field is set.
     * @return This builder for chaining.
     */
    public fun hasBoostId(): kotlin.Boolean {
      return _builder.hasBoostId()
    }

    /**
     * `optional uint32 tokens = 16;`
     */
    public var tokens: kotlin.Int
      @kotlin.jvm.JvmName("getTokens")
        get() = _builder.tokens
      @kotlin.jvm.JvmName("setTokens")
        set(value) {
        _builder.tokens = value
      }
    /**
     * <code>optional uint32 tokens = 16;</code>
     * @return This builder for chaining.
     */
    public fun clearTokens() {
      _builder.clearTokens()
    }
    /**
     * <code>optional uint32 tokens = 16;</code>
     * @return Whether the tokens field is set.
     * @return This builder for chaining.
     */
    public fun hasTokens(): kotlin.Boolean {
      return _builder.hasTokens()
    }

    /**
     * `optional uint32 kick_reason = 17;`
     */
    public var kickReason: kotlin.Int
      @kotlin.jvm.JvmName("getKickReason")
        get() = _builder.kickReason
      @kotlin.jvm.JvmName("setKickReason")
        set(value) {
        _builder.kickReason = value
      }
    /**
     * <code>optional uint32 kick_reason = 17;</code>
     * @return This builder for chaining.
     */
    public fun clearKickReason() {
      _builder.clearKickReason()
    }
    /**
     * <code>optional uint32 kick_reason = 17;</code>
     * @return Whether the kickReason field is set.
     * @return This builder for chaining.
     */
    public fun hasKickReason(): kotlin.Boolean {
      return _builder.hasKickReason()
    }

    /**
     * `optional bool public = 18;`
     */
    public var public: kotlin.Boolean
      @kotlin.jvm.JvmName("getPublic")
        get() = _builder.public
      @kotlin.jvm.JvmName("setPublic")
        set(value) {
        _builder.public = value
      }
    /**
     * <code>optional bool public = 18;</code>
     * @return This builder for chaining.
     */
    public fun clearPublic() {
      _builder.clearPublic()
    }
    /**
     * <code>optional bool public = 18;</code>
     * @return Whether the public field is set.
     * @return This builder for chaining.
     */
    public fun hasPublic(): kotlin.Boolean {
      return _builder.hasPublic()
    }

    /**
     * `optional bool cc_only = 19;`
     */
    public var ccOnly: kotlin.Boolean
      @kotlin.jvm.JvmName("getCcOnly")
        get() = _builder.ccOnly
      @kotlin.jvm.JvmName("setCcOnly")
        set(value) {
        _builder.ccOnly = value
      }
    /**
     * <code>optional bool cc_only = 19;</code>
     * @return This builder for chaining.
     */
    public fun clearCcOnly() {
      _builder.clearCcOnly()
    }
    /**
     * <code>optional bool cc_only = 19;</code>
     * @return Whether the ccOnly field is set.
     * @return This builder for chaining.
     */
    public fun hasCcOnly(): kotlin.Boolean {
      return _builder.hasCcOnly()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ContractAction.copy(block: `ei`.ContractActionKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractAction =
  `ei`.ContractActionKt.Dsl._create(this.toBuilder()).apply { block() }._build()


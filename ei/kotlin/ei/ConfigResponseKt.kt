// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeconfigResponse")
public inline fun configResponse(block: ei.ConfigResponseKt.Dsl.() -> kotlin.Unit): ei.Ei.ConfigResponse =
  ei.ConfigResponseKt.Dsl._create(ei.Ei.ConfigResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ConfigResponse`
 */
public object ConfigResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ConfigResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ConfigResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ConfigResponse = _builder.build()

    /**
     * `optional .ei.LiveConfig live_config = 1;`
     */
    public var liveConfig: ei.Ei.LiveConfig
      @JvmName("getLiveConfig")
      get() = _builder.liveConfig
      @JvmName("setLiveConfig")
      set(value) {
        _builder.liveConfig = value
      }
    /**
     * `optional .ei.LiveConfig live_config = 1;`
     */
    public fun clearLiveConfig() {
      _builder.clearLiveConfig()
    }
    /**
     * `optional .ei.LiveConfig live_config = 1;`
     * @return Whether the liveConfig field is set.
     */
    public fun hasLiveConfig(): kotlin.Boolean {
      return _builder.hasLiveConfig()
    }

    public val ConfigResponseKt.Dsl.liveConfigOrNull: ei.Ei.LiveConfig?
      get() = _builder.liveConfigOrNull

    /**
     * `optional .ei.MailDB mail_bag = 2;`
     */
    public var mailBag: ei.Ei.MailDB
      @JvmName("getMailBag")
      get() = _builder.mailBag
      @JvmName("setMailBag")
      set(value) {
        _builder.mailBag = value
      }
    /**
     * `optional .ei.MailDB mail_bag = 2;`
     */
    public fun clearMailBag() {
      _builder.clearMailBag()
    }
    /**
     * `optional .ei.MailDB mail_bag = 2;`
     * @return Whether the mailBag field is set.
     */
    public fun hasMailBag(): kotlin.Boolean {
      return _builder.hasMailBag()
    }

    public val ConfigResponseKt.Dsl.mailBagOrNull: ei.Ei.MailDB?
      get() = _builder.mailBagOrNull

    /**
     * `optional .ei.DLCCatalog dlc_catalog = 3;`
     */
    public var dlcCatalog: ei.Ei.DLCCatalog
      @JvmName("getDlcCatalog")
      get() = _builder.dlcCatalog
      @JvmName("setDlcCatalog")
      set(value) {
        _builder.dlcCatalog = value
      }
    /**
     * `optional .ei.DLCCatalog dlc_catalog = 3;`
     */
    public fun clearDlcCatalog() {
      _builder.clearDlcCatalog()
    }
    /**
     * `optional .ei.DLCCatalog dlc_catalog = 3;`
     * @return Whether the dlcCatalog field is set.
     */
    public fun hasDlcCatalog(): kotlin.Boolean {
      return _builder.hasDlcCatalog()
    }

    public val ConfigResponseKt.Dsl.dlcCatalogOrNull: ei.Ei.DLCCatalog?
      get() = _builder.dlcCatalogOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ConfigResponse.copy(block: `ei`.ConfigResponseKt.Dsl.() -> kotlin.Unit): ei.Ei.ConfigResponse =
  `ei`.ConfigResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.ConfigResponseOrBuilder.liveConfigOrNull: ei.Ei.LiveConfig?
  get() = if (hasLiveConfig()) getLiveConfig() else null

public val ei.Ei.ConfigResponseOrBuilder.mailBagOrNull: ei.Ei.MailDB?
  get() = if (hasMailBag()) getMailBag() else null

public val ei.Ei.ConfigResponseOrBuilder.dlcCatalogOrNull: ei.Ei.DLCCatalog?
  get() = if (hasDlcCatalog()) getDlcCatalog() else null


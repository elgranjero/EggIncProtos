// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializefarmProductionParams")
public inline fun farmProductionParams(block: ei.FarmProductionParamsKt.Dsl.() -> kotlin.Unit): ei.Ei.FarmProductionParams =
  ei.FarmProductionParamsKt.Dsl._create(ei.Ei.FarmProductionParams.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.FarmProductionParams`
 */
public object FarmProductionParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.FarmProductionParams.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.FarmProductionParams.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.FarmProductionParams = _builder.build()

    /**
     * `optional double farm_population = 1;`
     */
    public var farmPopulation: kotlin.Double
      @kotlin.jvm.JvmName("getFarmPopulation")
        get() = _builder.farmPopulation
      @kotlin.jvm.JvmName("setFarmPopulation")
        set(value) {
        _builder.farmPopulation = value
      }
    /**
     * <code>optional double farm_population = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearFarmPopulation() {
      _builder.clearFarmPopulation()
    }
    /**
     * <code>optional double farm_population = 1;</code>
     * @return Whether the farmPopulation field is set.
     * @return This builder for chaining.
     */
    public fun hasFarmPopulation(): kotlin.Boolean {
      return _builder.hasFarmPopulation()
    }

    /**
     * `optional double farm_capacity = 2;`
     */
    public var farmCapacity: kotlin.Double
      @kotlin.jvm.JvmName("getFarmCapacity")
        get() = _builder.farmCapacity
      @kotlin.jvm.JvmName("setFarmCapacity")
        set(value) {
        _builder.farmCapacity = value
      }
    /**
     * <code>optional double farm_capacity = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearFarmCapacity() {
      _builder.clearFarmCapacity()
    }
    /**
     * <code>optional double farm_capacity = 2;</code>
     * @return Whether the farmCapacity field is set.
     * @return This builder for chaining.
     */
    public fun hasFarmCapacity(): kotlin.Boolean {
      return _builder.hasFarmCapacity()
    }

    /**
     * `optional double elr = 3;`
     */
    public var elr: kotlin.Double
      @kotlin.jvm.JvmName("getElr")
        get() = _builder.elr
      @kotlin.jvm.JvmName("setElr")
        set(value) {
        _builder.elr = value
      }
    /**
     * <code>optional double elr = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearElr() {
      _builder.clearElr()
    }
    /**
     * <code>optional double elr = 3;</code>
     * @return Whether the elr field is set.
     * @return This builder for chaining.
     */
    public fun hasElr(): kotlin.Boolean {
      return _builder.hasElr()
    }

    /**
     * `optional double ihr = 4;`
     */
    public var ihr: kotlin.Double
      @kotlin.jvm.JvmName("getIhr")
        get() = _builder.ihr
      @kotlin.jvm.JvmName("setIhr")
        set(value) {
        _builder.ihr = value
      }
    /**
     * <code>optional double ihr = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearIhr() {
      _builder.clearIhr()
    }
    /**
     * <code>optional double ihr = 4;</code>
     * @return Whether the ihr field is set.
     * @return This builder for chaining.
     */
    public fun hasIhr(): kotlin.Boolean {
      return _builder.hasIhr()
    }

    /**
     * `optional double sr = 5;`
     */
    public var sr: kotlin.Double
      @kotlin.jvm.JvmName("getSr")
        get() = _builder.sr
      @kotlin.jvm.JvmName("setSr")
        set(value) {
        _builder.sr = value
      }
    /**
     * <code>optional double sr = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearSr() {
      _builder.clearSr()
    }
    /**
     * <code>optional double sr = 5;</code>
     * @return Whether the sr field is set.
     * @return This builder for chaining.
     */
    public fun hasSr(): kotlin.Boolean {
      return _builder.hasSr()
    }

    /**
     * `optional double delivered = 6;`
     */
    public var delivered: kotlin.Double
      @kotlin.jvm.JvmName("getDelivered")
        get() = _builder.delivered
      @kotlin.jvm.JvmName("setDelivered")
        set(value) {
        _builder.delivered = value
      }
    /**
     * <code>optional double delivered = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearDelivered() {
      _builder.clearDelivered()
    }
    /**
     * <code>optional double delivered = 6;</code>
     * @return Whether the delivered field is set.
     * @return This builder for chaining.
     */
    public fun hasDelivered(): kotlin.Boolean {
      return _builder.hasDelivered()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.FarmProductionParams.copy(block: `ei`.FarmProductionParamsKt.Dsl.() -> kotlin.Unit): ei.Ei.FarmProductionParams =
  `ei`.FarmProductionParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()


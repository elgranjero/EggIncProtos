// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializesetArtifactRequest")
public inline fun setArtifactRequest(block: ei.SetArtifactRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SetArtifactRequest =
  ei.SetArtifactRequestKt.Dsl._create(ei.Ei.SetArtifactRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.SetArtifactRequest`
 */
public object SetArtifactRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.SetArtifactRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.SetArtifactRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.SetArtifactRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.rinfo
      @JvmName("setRinfo")
      set(value) {
        _builder.rinfo = value
      }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val SetArtifactRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional .ei.ArtifactInventoryItem artifact = 2;`
     */
    public var artifact: ei.Ei.ArtifactInventoryItem
      @JvmName("getArtifact")
      get() = _builder.artifact
      @JvmName("setArtifact")
      set(value) {
        _builder.artifact = value
      }
    /**
     * `optional .ei.ArtifactInventoryItem artifact = 2;`
     */
    public fun clearArtifact() {
      _builder.clearArtifact()
    }
    /**
     * `optional .ei.ArtifactInventoryItem artifact = 2;`
     * @return Whether the artifact field is set.
     */
    public fun hasArtifact(): kotlin.Boolean {
      return _builder.hasArtifact()
    }

    public val SetArtifactRequestKt.Dsl.artifactOrNull: ei.Ei.ArtifactInventoryItem?
      get() = _builder.artifactOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class StonesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     */
     public val stones: com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.stonesList
      )
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     * @param value The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addStones")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.add(value: ei.Ei.ArtifactSpec) {
      _builder.addStones(value)
    }
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     * @param value The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignStones")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.plusAssign(value: ei.Ei.ArtifactSpec) {
      add(value)
    }
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     * @param values The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllStones")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ArtifactSpec>) {
      _builder.addAllStones(values)
    }
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     * @param values The stones to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllStones")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ArtifactSpec>) {
      addAll(values)
    }
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     * @param index The index to set the value at.
     * @param value The stones to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setStones")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.set(index: kotlin.Int, value: ei.Ei.ArtifactSpec) {
      _builder.setStones(index, value)
    }
    /**
     * `repeated .ei.ArtifactSpec stones = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearStones")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactSpec, StonesProxy>.clear() {
      _builder.clearStones()
    }


    /**
     * `optional double gold_price_paid = 4;`
     */
    public var goldPricePaid: kotlin.Double
      @JvmName("getGoldPricePaid")
      get() = _builder.goldPricePaid
      @JvmName("setGoldPricePaid")
      set(value) {
        _builder.goldPricePaid = value
      }
    /**
     * `optional double gold_price_paid = 4;`
     */
    public fun clearGoldPricePaid() {
      _builder.clearGoldPricePaid()
    }
    /**
     * `optional double gold_price_paid = 4;`
     * @return Whether the goldPricePaid field is set.
     */
    public fun hasGoldPricePaid(): kotlin.Boolean {
      return _builder.hasGoldPricePaid()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.SetArtifactRequest.copy(block: `ei`.SetArtifactRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.SetArtifactRequest =
  `ei`.SetArtifactRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.SetArtifactRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

public val ei.Ei.SetArtifactRequestOrBuilder.artifactOrNull: ei.Ei.ArtifactInventoryItem?
  get() = if (hasArtifact()) getArtifact() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeserverGift")
public inline fun serverGift(block: ei.ServerGiftKt.Dsl.() -> kotlin.Unit): ei.Ei.ServerGift =
  ei.ServerGiftKt.Dsl._create(ei.Ei.ServerGift.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ServerGift`
 */
public object ServerGiftKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ServerGift.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ServerGift.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ServerGift = _builder.build()

    /**
     * `optional string user_id = 1;`
     */
    public var userId: kotlin.String
      @JvmName("getUserId")
      get() = _builder.userId
      @JvmName("setUserId")
      set(value) {
        _builder.userId = value
      }
    /**
     * `optional string user_id = 1;`
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * `optional string user_id = 1;`
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional .ei.RewardType reward_type = 3;`
     */
    public var rewardType: ei.Ei.RewardType
      @JvmName("getRewardType")
      get() = _builder.rewardType
      @JvmName("setRewardType")
      set(value) {
        _builder.rewardType = value
      }
    /**
     * `optional .ei.RewardType reward_type = 3;`
     */
    public fun clearRewardType() {
      _builder.clearRewardType()
    }
    /**
     * `optional .ei.RewardType reward_type = 3;`
     * @return Whether the rewardType field is set.
     */
    public fun hasRewardType(): kotlin.Boolean {
      return _builder.hasRewardType()
    }

    /**
     * `optional string reward_sub_type = 4;`
     */
    public var rewardSubType: kotlin.String
      @JvmName("getRewardSubType")
      get() = _builder.rewardSubType
      @JvmName("setRewardSubType")
      set(value) {
        _builder.rewardSubType = value
      }
    /**
     * `optional string reward_sub_type = 4;`
     */
    public fun clearRewardSubType() {
      _builder.clearRewardSubType()
    }
    /**
     * `optional string reward_sub_type = 4;`
     * @return Whether the rewardSubType field is set.
     */
    public fun hasRewardSubType(): kotlin.Boolean {
      return _builder.hasRewardSubType()
    }

    /**
     * `optional double reward_amount = 5;`
     */
    public var rewardAmount: kotlin.Double
      @JvmName("getRewardAmount")
      get() = _builder.rewardAmount
      @JvmName("setRewardAmount")
      set(value) {
        _builder.rewardAmount = value
      }
    /**
     * `optional double reward_amount = 5;`
     */
    public fun clearRewardAmount() {
      _builder.clearRewardAmount()
    }
    /**
     * `optional double reward_amount = 5;`
     * @return Whether the rewardAmount field is set.
     */
    public fun hasRewardAmount(): kotlin.Boolean {
      return _builder.hasRewardAmount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ServerGift.copy(block: `ei`.ServerGiftKt.Dsl.() -> kotlin.Unit): ei.Ei.ServerGift =
  `ei`.ServerGiftKt.Dsl._create(this.toBuilder()).apply { block() }._build()


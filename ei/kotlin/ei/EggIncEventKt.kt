// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeeggIncEvent")
public inline fun eggIncEvent(block: ei.EggIncEventKt.Dsl.() -> kotlin.Unit): ei.Ei.EggIncEvent =
  ei.EggIncEventKt.Dsl._create(ei.Ei.EggIncEvent.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.EggIncEvent`
 */
public object EggIncEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.EggIncEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.EggIncEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.EggIncEvent = _builder.build()

    /**
     * `optional string identifier = 1;`
     */
    public var identifier: kotlin.String
      @JvmName("getIdentifier")
      get() = _builder.identifier
      @JvmName("setIdentifier")
      set(value) {
        _builder.identifier = value
      }
    /**
     * `optional string identifier = 1;`
     */
    public fun clearIdentifier() {
      _builder.clearIdentifier()
    }
    /**
     * `optional string identifier = 1;`
     * @return Whether the identifier field is set.
     */
    public fun hasIdentifier(): kotlin.Boolean {
      return _builder.hasIdentifier()
    }

    /**
     * `optional double seconds_remaining = 2;`
     */
    public var secondsRemaining: kotlin.Double
      @JvmName("getSecondsRemaining")
      get() = _builder.secondsRemaining
      @JvmName("setSecondsRemaining")
      set(value) {
        _builder.secondsRemaining = value
      }
    /**
     * `optional double seconds_remaining = 2;`
     */
    public fun clearSecondsRemaining() {
      _builder.clearSecondsRemaining()
    }
    /**
     * `optional double seconds_remaining = 2;`
     * @return Whether the secondsRemaining field is set.
     */
    public fun hasSecondsRemaining(): kotlin.Boolean {
      return _builder.hasSecondsRemaining()
    }

    /**
     * `optional string type = 3;`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.type
      @JvmName("setType")
      set(value) {
        _builder.type = value
      }
    /**
     * `optional string type = 3;`
     */
    public fun clearType() {
      _builder.clearType()
    }
    /**
     * `optional string type = 3;`
     * @return Whether the type field is set.
     */
    public fun hasType(): kotlin.Boolean {
      return _builder.hasType()
    }

    /**
     * `optional double multiplier = 4;`
     */
    public var multiplier: kotlin.Double
      @JvmName("getMultiplier")
      get() = _builder.multiplier
      @JvmName("setMultiplier")
      set(value) {
        _builder.multiplier = value
      }
    /**
     * `optional double multiplier = 4;`
     */
    public fun clearMultiplier() {
      _builder.clearMultiplier()
    }
    /**
     * `optional double multiplier = 4;`
     * @return Whether the multiplier field is set.
     */
    public fun hasMultiplier(): kotlin.Boolean {
      return _builder.hasMultiplier()
    }

    /**
     * `optional string subtitle = 5;`
     */
    public var subtitle: kotlin.String
      @JvmName("getSubtitle")
      get() = _builder.subtitle
      @JvmName("setSubtitle")
      set(value) {
        _builder.subtitle = value
      }
    /**
     * `optional string subtitle = 5;`
     */
    public fun clearSubtitle() {
      _builder.clearSubtitle()
    }
    /**
     * `optional string subtitle = 5;`
     * @return Whether the subtitle field is set.
     */
    public fun hasSubtitle(): kotlin.Boolean {
      return _builder.hasSubtitle()
    }

    /**
     * `optional double start_time = 6;`
     */
    public var startTime: kotlin.Double
      @JvmName("getStartTime")
      get() = _builder.startTime
      @JvmName("setStartTime")
      set(value) {
        _builder.startTime = value
      }
    /**
     * `optional double start_time = 6;`
     */
    public fun clearStartTime() {
      _builder.clearStartTime()
    }
    /**
     * `optional double start_time = 6;`
     * @return Whether the startTime field is set.
     */
    public fun hasStartTime(): kotlin.Boolean {
      return _builder.hasStartTime()
    }

    /**
     * `optional double duration = 7;`
     */
    public var duration: kotlin.Double
      @JvmName("getDuration")
      get() = _builder.duration
      @JvmName("setDuration")
      set(value) {
        _builder.duration = value
      }
    /**
     * `optional double duration = 7;`
     */
    public fun clearDuration() {
      _builder.clearDuration()
    }
    /**
     * `optional double duration = 7;`
     * @return Whether the duration field is set.
     */
    public fun hasDuration(): kotlin.Boolean {
      return _builder.hasDuration()
    }

    /**
     * `optional bool cc_only = 8;`
     */
    public var ccOnly: kotlin.Boolean
      @JvmName("getCcOnly")
      get() = _builder.ccOnly
      @JvmName("setCcOnly")
      set(value) {
        _builder.ccOnly = value
      }
    /**
     * `optional bool cc_only = 8;`
     */
    public fun clearCcOnly() {
      _builder.clearCcOnly()
    }
    /**
     * `optional bool cc_only = 8;`
     * @return Whether the ccOnly field is set.
     */
    public fun hasCcOnly(): kotlin.Boolean {
      return _builder.hasCcOnly()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.EggIncEvent.copy(block: `ei`.EggIncEventKt.Dsl.() -> kotlin.Unit): ei.Ei.EggIncEvent =
  `ei`.EggIncEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializequeryCoopResponse")
public inline fun queryCoopResponse(block: ei.QueryCoopResponseKt.Dsl.() -> kotlin.Unit): ei.Ei.QueryCoopResponse =
  ei.QueryCoopResponseKt.Dsl._create(ei.Ei.QueryCoopResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.QueryCoopResponse`
 */
public object QueryCoopResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.QueryCoopResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.QueryCoopResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.QueryCoopResponse = _builder.build()

    /**
     * `optional bool exists = 1;`
     */
    public var exists: kotlin.Boolean
      @JvmName("getExists")
      get() = _builder.exists
      @JvmName("setExists")
      set(value) {
        _builder.exists = value
      }
    /**
     * `optional bool exists = 1;`
     */
    public fun clearExists() {
      _builder.clearExists()
    }
    /**
     * `optional bool exists = 1;`
     * @return Whether the exists field is set.
     */
    public fun hasExists(): kotlin.Boolean {
      return _builder.hasExists()
    }

    /**
     * `optional bool full = 2;`
     */
    public var full: kotlin.Boolean
      @JvmName("getFull")
      get() = _builder.full
      @JvmName("setFull")
      set(value) {
        _builder.full = value
      }
    /**
     * `optional bool full = 2;`
     */
    public fun clearFull() {
      _builder.clearFull()
    }
    /**
     * `optional bool full = 2;`
     * @return Whether the full field is set.
     */
    public fun hasFull(): kotlin.Boolean {
      return _builder.hasFull()
    }

    /**
     * `optional bool expired = 5;`
     */
    public var expired: kotlin.Boolean
      @JvmName("getExpired")
      get() = _builder.expired
      @JvmName("setExpired")
      set(value) {
        _builder.expired = value
      }
    /**
     * `optional bool expired = 5;`
     */
    public fun clearExpired() {
      _builder.clearExpired()
    }
    /**
     * `optional bool expired = 5;`
     * @return Whether the expired field is set.
     */
    public fun hasExpired(): kotlin.Boolean {
      return _builder.hasExpired()
    }

    /**
     * `optional bool different_league = 4;`
     */
    public var differentLeague: kotlin.Boolean
      @JvmName("getDifferentLeague")
      get() = _builder.differentLeague
      @JvmName("setDifferentLeague")
      set(value) {
        _builder.differentLeague = value
      }
    /**
     * `optional bool different_league = 4;`
     */
    public fun clearDifferentLeague() {
      _builder.clearDifferentLeague()
    }
    /**
     * `optional bool different_league = 4;`
     * @return Whether the differentLeague field is set.
     */
    public fun hasDifferentLeague(): kotlin.Boolean {
      return _builder.hasDifferentLeague()
    }

    /**
     * `optional bool different_grade = 6;`
     */
    public var differentGrade: kotlin.Boolean
      @JvmName("getDifferentGrade")
      get() = _builder.differentGrade
      @JvmName("setDifferentGrade")
      set(value) {
        _builder.differentGrade = value
      }
    /**
     * `optional bool different_grade = 6;`
     */
    public fun clearDifferentGrade() {
      _builder.clearDifferentGrade()
    }
    /**
     * `optional bool different_grade = 6;`
     * @return Whether the differentGrade field is set.
     */
    public fun hasDifferentGrade(): kotlin.Boolean {
      return _builder.hasDifferentGrade()
    }

    /**
     * `optional bool cc_only = 7;`
     */
    public var ccOnly: kotlin.Boolean
      @JvmName("getCcOnly")
      get() = _builder.ccOnly
      @JvmName("setCcOnly")
      set(value) {
        _builder.ccOnly = value
      }
    /**
     * `optional bool cc_only = 7;`
     */
    public fun clearCcOnly() {
      _builder.clearCcOnly()
    }
    /**
     * `optional bool cc_only = 7;`
     * @return Whether the ccOnly field is set.
     */
    public fun hasCcOnly(): kotlin.Boolean {
      return _builder.hasCcOnly()
    }

    /**
     * `optional bool banned = 3;`
     */
    public var banned: kotlin.Boolean
      @JvmName("getBanned")
      get() = _builder.banned
      @JvmName("setBanned")
      set(value) {
        _builder.banned = value
      }
    /**
     * `optional bool banned = 3;`
     */
    public fun clearBanned() {
      _builder.clearBanned()
    }
    /**
     * `optional bool banned = 3;`
     * @return Whether the banned field is set.
     */
    public fun hasBanned(): kotlin.Boolean {
      return _builder.hasBanned()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.QueryCoopResponse.copy(block: `ei`.QueryCoopResponseKt.Dsl.() -> kotlin.Unit): ei.Ei.QueryCoopResponse =
  `ei`.QueryCoopResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()


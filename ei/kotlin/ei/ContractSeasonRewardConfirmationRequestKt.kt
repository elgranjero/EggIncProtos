// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecontractSeasonRewardConfirmationRequest")
public inline fun contractSeasonRewardConfirmationRequest(block: ei.ContractSeasonRewardConfirmationRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractSeasonRewardConfirmationRequest =
  ei.ContractSeasonRewardConfirmationRequestKt.Dsl._create(ei.Ei.ContractSeasonRewardConfirmationRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ContractSeasonRewardConfirmationRequest`
 */
public object ContractSeasonRewardConfirmationRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ContractSeasonRewardConfirmationRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ContractSeasonRewardConfirmationRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ContractSeasonRewardConfirmationRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.rinfo
      @JvmName("setRinfo")
      set(value) {
        _builder.rinfo = value
      }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 1;`
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val ContractSeasonRewardConfirmationRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string season_id = 2;`
     */
    public var seasonId: kotlin.String
      @JvmName("getSeasonId")
      get() = _builder.seasonId
      @JvmName("setSeasonId")
      set(value) {
        _builder.seasonId = value
      }
    /**
     * `optional string season_id = 2;`
     */
    public fun clearSeasonId() {
      _builder.clearSeasonId()
    }
    /**
     * `optional string season_id = 2;`
     * @return Whether the seasonId field is set.
     */
    public fun hasSeasonId(): kotlin.Boolean {
      return _builder.hasSeasonId()
    }

    /**
     * `optional .ei.ContractSeasonGoal goal = 3;`
     */
    public var goal: ei.Ei.ContractSeasonGoal
      @JvmName("getGoal")
      get() = _builder.goal
      @JvmName("setGoal")
      set(value) {
        _builder.goal = value
      }
    /**
     * `optional .ei.ContractSeasonGoal goal = 3;`
     */
    public fun clearGoal() {
      _builder.clearGoal()
    }
    /**
     * `optional .ei.ContractSeasonGoal goal = 3;`
     * @return Whether the goal field is set.
     */
    public fun hasGoal(): kotlin.Boolean {
      return _builder.hasGoal()
    }

    public val ContractSeasonRewardConfirmationRequestKt.Dsl.goalOrNull: ei.Ei.ContractSeasonGoal?
      get() = _builder.goalOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ContractSeasonRewardConfirmationRequest.copy(block: `ei`.ContractSeasonRewardConfirmationRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractSeasonRewardConfirmationRequest =
  `ei`.ContractSeasonRewardConfirmationRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.ContractSeasonRewardConfirmationRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

public val ei.Ei.ContractSeasonRewardConfirmationRequestOrBuilder.goalOrNull: ei.Ei.ContractSeasonGoal?
  get() = if (hasGoal()) getGoal() else null


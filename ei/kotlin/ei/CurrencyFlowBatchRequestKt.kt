// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecurrencyFlowBatchRequest")
public inline fun currencyFlowBatchRequest(block: ei.CurrencyFlowBatchRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.CurrencyFlowBatchRequest =
  ei.CurrencyFlowBatchRequestKt.Dsl._create(ei.Ei.CurrencyFlowBatchRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.CurrencyFlowBatchRequest`
 */
public object CurrencyFlowBatchRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CurrencyFlowBatchRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CurrencyFlowBatchRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CurrencyFlowBatchRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 2;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @JvmName("getRinfo")
      get() = _builder.rinfo
      @JvmName("setRinfo")
      set(value) {
        _builder.rinfo = value
      }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 2;`
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * `optional .ei.BasicRequestInfo rinfo = 2;`
     * @return Whether the rinfo field is set.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val CurrencyFlowBatchRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LogsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     */
     public val logs: com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.logsList
      )
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     * @param value The logs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLogs")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>.add(value: ei.Ei.CurrencyFlowLog) {
      _builder.addLogs(value)
    }
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     * @param value The logs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLogs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>.plusAssign(value: ei.Ei.CurrencyFlowLog) {
      add(value)
    }
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     * @param values The logs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLogs")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.CurrencyFlowLog>) {
      _builder.addAllLogs(values)
    }
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     * @param values The logs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLogs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.CurrencyFlowLog>) {
      addAll(values)
    }
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     * @param index The index to set the value at.
     * @param value The logs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLogs")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>.set(index: kotlin.Int, value: ei.Ei.CurrencyFlowLog) {
      _builder.setLogs(index, value)
    }
    /**
     * `repeated .ei.CurrencyFlowLog logs = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLogs")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.CurrencyFlowLog, LogsProxy>.clear() {
      _builder.clearLogs()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CurrencyFlowBatchRequest.copy(block: `ei`.CurrencyFlowBatchRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.CurrencyFlowBatchRequest =
  `ei`.CurrencyFlowBatchRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.CurrencyFlowBatchRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecontractSimResultUpdate")
public inline fun contractSimResultUpdate(block: ei.ContractSimResultUpdateKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractSimResultUpdate =
  ei.ContractSimResultUpdateKt.Dsl._create(ei.Ei.ContractSimResultUpdate.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ContractSimResultUpdate`
 */
public object ContractSimResultUpdateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ContractSimResultUpdate.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ContractSimResultUpdate.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ContractSimResultUpdate = _builder.build()

    /**
     * `optional string contract_id = 1;`
     */
    public var contractId: kotlin.String
      @kotlin.jvm.JvmName("getContractId")
        get() = _builder.contractId
      @kotlin.jvm.JvmName("setContractId")
        set(value) {
        _builder.contractId = value
      }
    /**
     * <code>optional string contract_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearContractId() {
      _builder.clearContractId()
    }
    /**
     * <code>optional string contract_id = 1;</code>
     * @return Whether the contractId field is set.
     * @return This builder for chaining.
     */
    public fun hasContractId(): kotlin.Boolean {
      return _builder.hasContractId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class GoalInfosProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;`
     */
     public val goalInfos: com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.goalInfosList
      )
    /**
     * <code>repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;</code>
     * @param value The goalInfos to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addGoalInfos")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>.add(value: ei.Ei.ContractSimResultUpdate.GoalInfo) {
      _builder.addGoalInfos(value)
    }
    /**
     * <code>repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;</code>
     * @param value The goalInfos to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignGoalInfos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>.plusAssign(value: ei.Ei.ContractSimResultUpdate.GoalInfo) {
      add(value)
    }
    /**
     * <code>repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;</code>
     * @param values The goalInfos to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllGoalInfos")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ContractSimResultUpdate.GoalInfo>) {
      _builder.addAllGoalInfos(values)
    }
    /**
     * <code>repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;</code>
     * @param values The goalInfos to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllGoalInfos")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ContractSimResultUpdate.GoalInfo>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;</code>
     * @param index The index to set the value at.
     * @param value The goalInfos to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setGoalInfos")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>.set(index: kotlin.Int, value: ei.Ei.ContractSimResultUpdate.GoalInfo) {
      _builder.setGoalInfos(index, value)
    }
    /**
     * <code>repeated .ei.ContractSimResultUpdate.GoalInfo goal_infos = 2;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearGoalInfos")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ContractSimResultUpdate.GoalInfo, GoalInfosProxy>.clear() {
      _builder.clearGoalInfos()
    }
  }
  @kotlin.jvm.JvmName("-initializegoalInfo")
  public inline fun goalInfo(block: ei.ContractSimResultUpdateKt.GoalInfoKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractSimResultUpdate.GoalInfo =
    ei.ContractSimResultUpdateKt.GoalInfoKt.Dsl._create(ei.Ei.ContractSimResultUpdate.GoalInfo.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `ei.ContractSimResultUpdate.GoalInfo`
   */
  public object GoalInfoKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: ei.Ei.ContractSimResultUpdate.GoalInfo.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: ei.Ei.ContractSimResultUpdate.GoalInfo.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): ei.Ei.ContractSimResultUpdate.GoalInfo = _builder.build()

      /**
       * `optional .ei.Contract.PlayerGrade grade = 1;`
       */
      public var grade: ei.Ei.Contract.PlayerGrade
        @kotlin.jvm.JvmName("getGrade")
          get() = _builder.grade
        @kotlin.jvm.JvmName("setGrade")
          set(value) {
          _builder.grade = value
        }
      /**
       * <code>optional .ei.Contract.PlayerGrade grade = 1;</code>
       * @return This builder for chaining.
       */
      public fun clearGrade() {
        _builder.clearGrade()
      }
      /**
       * <code>optional .ei.Contract.PlayerGrade grade = 1;</code>
       * @return Whether the grade field is set.
       * @return This builder for chaining.
       */
      public fun hasGrade(): kotlin.Boolean {
        return _builder.hasGrade()
      }

      /**
       * `optional uint32 goal_index = 2;`
       */
      public var goalIndex: kotlin.Int
        @kotlin.jvm.JvmName("getGoalIndex")
          get() = _builder.goalIndex
        @kotlin.jvm.JvmName("setGoalIndex")
          set(value) {
          _builder.goalIndex = value
        }
      /**
       * <code>optional uint32 goal_index = 2;</code>
       * @return This builder for chaining.
       */
      public fun clearGoalIndex() {
        _builder.clearGoalIndex()
      }
      /**
       * <code>optional uint32 goal_index = 2;</code>
       * @return Whether the goalIndex field is set.
       * @return This builder for chaining.
       */
      public fun hasGoalIndex(): kotlin.Boolean {
        return _builder.hasGoalIndex()
      }

      /**
       * `optional double projected_eggs_laid = 3;`
       */
      public var projectedEggsLaid: kotlin.Double
        @kotlin.jvm.JvmName("getProjectedEggsLaid")
          get() = _builder.projectedEggsLaid
        @kotlin.jvm.JvmName("setProjectedEggsLaid")
          set(value) {
          _builder.projectedEggsLaid = value
        }
      /**
       * <code>optional double projected_eggs_laid = 3;</code>
       * @return This builder for chaining.
       */
      public fun clearProjectedEggsLaid() {
        _builder.clearProjectedEggsLaid()
      }
      /**
       * <code>optional double projected_eggs_laid = 3;</code>
       * @return Whether the projectedEggsLaid field is set.
       * @return This builder for chaining.
       */
      public fun hasProjectedEggsLaid(): kotlin.Boolean {
        return _builder.hasProjectedEggsLaid()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ContractSimResultUpdate.copy(block: `ei`.ContractSimResultUpdateKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractSimResultUpdate =
  `ei`.ContractSimResultUpdateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ContractSimResultUpdate.GoalInfo.copy(block: `ei`.ContractSimResultUpdateKt.GoalInfoKt.Dsl.() -> kotlin.Unit): ei.Ei.ContractSimResultUpdate.GoalInfo =
  `ei`.ContractSimResultUpdateKt.GoalInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()


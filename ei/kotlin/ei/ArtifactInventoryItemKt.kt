// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeartifactInventoryItem")
public inline fun artifactInventoryItem(block: ei.ArtifactInventoryItemKt.Dsl.() -> kotlin.Unit): ei.Ei.ArtifactInventoryItem =
  ei.ArtifactInventoryItemKt.Dsl._create(ei.Ei.ArtifactInventoryItem.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ArtifactInventoryItem`
 */
public object ArtifactInventoryItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ArtifactInventoryItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ArtifactInventoryItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ArtifactInventoryItem = _builder.build()

    /**
     * `optional uint64 item_id = 1;`
     */
    public var itemId: kotlin.Long
      @JvmName("getItemId")
      get() = _builder.itemId
      @JvmName("setItemId")
      set(value) {
        _builder.itemId = value
      }
    /**
     * `optional uint64 item_id = 1;`
     */
    public fun clearItemId() {
      _builder.clearItemId()
    }
    /**
     * `optional uint64 item_id = 1;`
     * @return Whether the itemId field is set.
     */
    public fun hasItemId(): kotlin.Boolean {
      return _builder.hasItemId()
    }

    /**
     * `optional .ei.CompleteArtifact artifact = 2;`
     */
    public var artifact: ei.Ei.CompleteArtifact
      @JvmName("getArtifact")
      get() = _builder.artifact
      @JvmName("setArtifact")
      set(value) {
        _builder.artifact = value
      }
    /**
     * `optional .ei.CompleteArtifact artifact = 2;`
     */
    public fun clearArtifact() {
      _builder.clearArtifact()
    }
    /**
     * `optional .ei.CompleteArtifact artifact = 2;`
     * @return Whether the artifact field is set.
     */
    public fun hasArtifact(): kotlin.Boolean {
      return _builder.hasArtifact()
    }

    public val ArtifactInventoryItemKt.Dsl.artifactOrNull: ei.Ei.CompleteArtifact?
      get() = _builder.artifactOrNull

    /**
     * `optional double quantity = 3;`
     */
    public var quantity: kotlin.Double
      @JvmName("getQuantity")
      get() = _builder.quantity
      @JvmName("setQuantity")
      set(value) {
        _builder.quantity = value
      }
    /**
     * `optional double quantity = 3;`
     */
    public fun clearQuantity() {
      _builder.clearQuantity()
    }
    /**
     * `optional double quantity = 3;`
     * @return Whether the quantity field is set.
     */
    public fun hasQuantity(): kotlin.Boolean {
      return _builder.hasQuantity()
    }

    /**
     * `optional string server_id = 4;`
     */
    public var serverId: kotlin.String
      @JvmName("getServerId")
      get() = _builder.serverId
      @JvmName("setServerId")
      set(value) {
        _builder.serverId = value
      }
    /**
     * `optional string server_id = 4;`
     */
    public fun clearServerId() {
      _builder.clearServerId()
    }
    /**
     * `optional string server_id = 4;`
     * @return Whether the serverId field is set.
     */
    public fun hasServerId(): kotlin.Boolean {
      return _builder.hasServerId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ArtifactInventoryItem.copy(block: `ei`.ArtifactInventoryItemKt.Dsl.() -> kotlin.Unit): ei.Ei.ArtifactInventoryItem =
  `ei`.ArtifactInventoryItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.ArtifactInventoryItemOrBuilder.artifactOrNull: ei.Ei.CompleteArtifact?
  get() = if (hasArtifact()) getArtifact() else null


// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecraftArtifactRequest")
public inline fun craftArtifactRequest(block: ei.CraftArtifactRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.CraftArtifactRequest =
  ei.CraftArtifactRequestKt.Dsl._create(ei.Ei.CraftArtifactRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.CraftArtifactRequest`
 */
public object CraftArtifactRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CraftArtifactRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CraftArtifactRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CraftArtifactRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 5;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @kotlin.jvm.JvmName("getRinfo")
        get() = _builder.rinfo
      @kotlin.jvm.JvmName("setRinfo")
        set(value) {
        _builder.rinfo = value
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 5;</code>
     * @return Whether the rinfo field is set.
     * @return This builder for chaining.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val CraftArtifactRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string ei_user_id = 1;`
     */
    public var eiUserId: kotlin.String
      @kotlin.jvm.JvmName("getEiUserId")
        get() = _builder.eiUserId
      @kotlin.jvm.JvmName("setEiUserId")
        set(value) {
        _builder.eiUserId = value
      }
    /**
     * <code>optional string ei_user_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearEiUserId() {
      _builder.clearEiUserId()
    }
    /**
     * <code>optional string ei_user_id = 1;</code>
     * @return Whether the eiUserId field is set.
     * @return This builder for chaining.
     */
    public fun hasEiUserId(): kotlin.Boolean {
      return _builder.hasEiUserId()
    }

    /**
     * `optional .ei.ArtifactSpec spec = 2;`
     */
    public var spec: ei.Ei.ArtifactSpec
      @kotlin.jvm.JvmName("getSpec")
        get() = _builder.spec
      @kotlin.jvm.JvmName("setSpec")
        set(value) {
        _builder.spec = value
      }
    /**
     * <code>optional .ei.ArtifactSpec spec = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearSpec() {
      _builder.clearSpec()
    }
    /**
     * <code>optional .ei.ArtifactSpec spec = 2;</code>
     * @return Whether the spec field is set.
     * @return This builder for chaining.
     */
    public fun hasSpec(): kotlin.Boolean {
      return _builder.hasSpec()
    }

    public val CraftArtifactRequestKt.Dsl.specOrNull: ei.Ei.ArtifactSpec?
      get() = _builder.specOrNull

    /**
     * `optional uint64 item_id = 3;`
     */
    public var itemId: kotlin.Long
      @kotlin.jvm.JvmName("getItemId")
        get() = _builder.itemId
      @kotlin.jvm.JvmName("setItemId")
        set(value) {
        _builder.itemId = value
      }
    /**
     * <code>optional uint64 item_id = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearItemId() {
      _builder.clearItemId()
    }
    /**
     * <code>optional uint64 item_id = 3;</code>
     * @return Whether the itemId field is set.
     * @return This builder for chaining.
     */
    public fun hasItemId(): kotlin.Boolean {
      return _builder.hasItemId()
    }

    /**
     * `optional double gold_price_paid = 6;`
     */
    public var goldPricePaid: kotlin.Double
      @kotlin.jvm.JvmName("getGoldPricePaid")
        get() = _builder.goldPricePaid
      @kotlin.jvm.JvmName("setGoldPricePaid")
        set(value) {
        _builder.goldPricePaid = value
      }
    /**
     * <code>optional double gold_price_paid = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearGoldPricePaid() {
      _builder.clearGoldPricePaid()
    }
    /**
     * <code>optional double gold_price_paid = 6;</code>
     * @return Whether the goldPricePaid field is set.
     * @return This builder for chaining.
     */
    public fun hasGoldPricePaid(): kotlin.Boolean {
      return _builder.hasGoldPricePaid()
    }

    /**
     * `optional uint32 crafting_count = 7;`
     */
    public var craftingCount: kotlin.Int
      @kotlin.jvm.JvmName("getCraftingCount")
        get() = _builder.craftingCount
      @kotlin.jvm.JvmName("setCraftingCount")
        set(value) {
        _builder.craftingCount = value
      }
    /**
     * <code>optional uint32 crafting_count = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearCraftingCount() {
      _builder.clearCraftingCount()
    }
    /**
     * <code>optional uint32 crafting_count = 7;</code>
     * @return Whether the craftingCount field is set.
     * @return This builder for chaining.
     */
    public fun hasCraftingCount(): kotlin.Boolean {
      return _builder.hasCraftingCount()
    }

    /**
     * `optional double crafting_xp = 8;`
     */
    public var craftingXp: kotlin.Double
      @kotlin.jvm.JvmName("getCraftingXp")
        get() = _builder.craftingXp
      @kotlin.jvm.JvmName("setCraftingXp")
        set(value) {
        _builder.craftingXp = value
      }
    /**
     * <code>optional double crafting_xp = 8;</code>
     * @return This builder for chaining.
     */
    public fun clearCraftingXp() {
      _builder.clearCraftingXp()
    }
    /**
     * <code>optional double crafting_xp = 8;</code>
     * @return Whether the craftingXp field is set.
     * @return This builder for chaining.
     */
    public fun hasCraftingXp(): kotlin.Boolean {
      return _builder.hasCraftingXp()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class IngredientsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ArtifactInventoryItem ingredients = 4;`
     */
     public val ingredients: com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.ingredientsList
      )
    /**
     * <code>repeated .ei.ArtifactInventoryItem ingredients = 4;</code>
     * @param value The ingredients to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addIngredients")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>.add(value: ei.Ei.ArtifactInventoryItem) {
      _builder.addIngredients(value)
    }
    /**
     * <code>repeated .ei.ArtifactInventoryItem ingredients = 4;</code>
     * @param value The ingredients to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignIngredients")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>.plusAssign(value: ei.Ei.ArtifactInventoryItem) {
      add(value)
    }
    /**
     * <code>repeated .ei.ArtifactInventoryItem ingredients = 4;</code>
     * @param values The ingredients to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllIngredients")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ArtifactInventoryItem>) {
      _builder.addAllIngredients(values)
    }
    /**
     * <code>repeated .ei.ArtifactInventoryItem ingredients = 4;</code>
     * @param values The ingredients to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllIngredients")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ArtifactInventoryItem>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ArtifactInventoryItem ingredients = 4;</code>
     * @param index The index to set the value at.
     * @param value The ingredients to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setIngredients")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>.set(index: kotlin.Int, value: ei.Ei.ArtifactInventoryItem) {
      _builder.setIngredients(index, value)
    }
    /**
     * <code>repeated .ei.ArtifactInventoryItem ingredients = 4;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearIngredients")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ArtifactInventoryItem, IngredientsProxy>.clear() {
      _builder.clearIngredients()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CraftArtifactRequest.copy(block: `ei`.CraftArtifactRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.CraftArtifactRequest =
  `ei`.CraftArtifactRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.CraftArtifactRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null

public val ei.Ei.CraftArtifactRequestOrBuilder.specOrNull: ei.Ei.ArtifactSpec?
  get() = if (hasSpec()) getSpec() else null


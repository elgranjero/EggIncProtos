// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializecoopCompletionSnapshot")
public inline fun coopCompletionSnapshot(block: ei.CoopCompletionSnapshotKt.Dsl.() -> kotlin.Unit): ei.Ei.CoopCompletionSnapshot =
  ei.CoopCompletionSnapshotKt.Dsl._create(ei.Ei.CoopCompletionSnapshot.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.CoopCompletionSnapshot`
 */
public object CoopCompletionSnapshotKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.CoopCompletionSnapshot.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.CoopCompletionSnapshot.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.CoopCompletionSnapshot = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContributorsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     */
     public val contributors: com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.contributorsList
      )
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     * @param value The contributors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContributors")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>.add(value: ei.Ei.CoopCompletionSnapshot.ContributorSnapshot) {
      _builder.addContributors(value)
    }
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     * @param value The contributors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContributors")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>.plusAssign(value: ei.Ei.CoopCompletionSnapshot.ContributorSnapshot) {
      add(value)
    }
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     * @param values The contributors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContributors")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot>) {
      _builder.addAllContributors(values)
    }
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     * @param values The contributors to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContributors")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot>) {
      addAll(values)
    }
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     * @param index The index to set the value at.
     * @param value The contributors to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContributors")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>.set(index: kotlin.Int, value: ei.Ei.CoopCompletionSnapshot.ContributorSnapshot) {
      _builder.setContributors(index, value)
    }
    /**
     * `repeated .ei.CoopCompletionSnapshot.ContributorSnapshot contributors = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContributors")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.CoopCompletionSnapshot.ContributorSnapshot, ContributorsProxy>.clear() {
      _builder.clearContributors()
    }

  }
  @kotlin.jvm.JvmName("-initializecontributorSnapshot")
  public inline fun contributorSnapshot(block: ei.CoopCompletionSnapshotKt.ContributorSnapshotKt.Dsl.() -> kotlin.Unit): ei.Ei.CoopCompletionSnapshot.ContributorSnapshot =
    ei.CoopCompletionSnapshotKt.ContributorSnapshotKt.Dsl._create(ei.Ei.CoopCompletionSnapshot.ContributorSnapshot.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `ei.CoopCompletionSnapshot.ContributorSnapshot`
   */
  public object ContributorSnapshotKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: ei.Ei.CoopCompletionSnapshot.ContributorSnapshot.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
        internal fun _create(builder: ei.Ei.CoopCompletionSnapshot.ContributorSnapshot.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
      internal fun _build(): ei.Ei.CoopCompletionSnapshot.ContributorSnapshot = _builder.build()

      /**
       * `optional double contribution = 1;`
       */
      public var contribution: kotlin.Double
        @JvmName("getContribution")
        get() = _builder.contribution
        @JvmName("setContribution")
        set(value) {
          _builder.contribution = value
        }
      /**
       * `optional double contribution = 1;`
       */
      public fun clearContribution() {
        _builder.clearContribution()
      }
      /**
       * `optional double contribution = 1;`
       * @return Whether the contribution field is set.
       */
      public fun hasContribution(): kotlin.Boolean {
        return _builder.hasContribution()
      }

      /**
       * `optional double total_step_time = 8;`
       */
      public var totalStepTime: kotlin.Double
        @JvmName("getTotalStepTime")
        get() = _builder.totalStepTime
        @JvmName("setTotalStepTime")
        set(value) {
          _builder.totalStepTime = value
        }
      /**
       * `optional double total_step_time = 8;`
       */
      public fun clearTotalStepTime() {
        _builder.clearTotalStepTime()
      }
      /**
       * `optional double total_step_time = 8;`
       * @return Whether the totalStepTime field is set.
       */
      public fun hasTotalStepTime(): kotlin.Boolean {
        return _builder.hasTotalStepTime()
      }

      /**
       * `optional double last_contribution_time = 6;`
       */
      public var lastContributionTime: kotlin.Double
        @JvmName("getLastContributionTime")
        get() = _builder.lastContributionTime
        @JvmName("setLastContributionTime")
        set(value) {
          _builder.lastContributionTime = value
        }
      /**
       * `optional double last_contribution_time = 6;`
       */
      public fun clearLastContributionTime() {
        _builder.clearLastContributionTime()
      }
      /**
       * `optional double last_contribution_time = 6;`
       * @return Whether the lastContributionTime field is set.
       */
      public fun hasLastContributionTime(): kotlin.Boolean {
        return _builder.hasLastContributionTime()
      }

      /**
       * `optional bool finalized = 7;`
       */
      public var finalized: kotlin.Boolean
        @JvmName("getFinalized")
        get() = _builder.finalized
        @JvmName("setFinalized")
        set(value) {
          _builder.finalized = value
        }
      /**
       * `optional bool finalized = 7;`
       */
      public fun clearFinalized() {
        _builder.clearFinalized()
      }
      /**
       * `optional bool finalized = 7;`
       * @return Whether the finalized field is set.
       */
      public fun hasFinalized(): kotlin.Boolean {
        return _builder.hasFinalized()
      }

      /**
       * `optional double soul_power = 2;`
       */
      public var soulPower: kotlin.Double
        @JvmName("getSoulPower")
        get() = _builder.soulPower
        @JvmName("setSoulPower")
        set(value) {
          _builder.soulPower = value
        }
      /**
       * `optional double soul_power = 2;`
       */
      public fun clearSoulPower() {
        _builder.clearSoulPower()
      }
      /**
       * `optional double soul_power = 2;`
       * @return Whether the soulPower field is set.
       */
      public fun hasSoulPower(): kotlin.Boolean {
        return _builder.hasSoulPower()
      }

      /**
       * `optional string user_id = 3;`
       */
      public var userId: kotlin.String
        @JvmName("getUserId")
        get() = _builder.userId
        @JvmName("setUserId")
        set(value) {
          _builder.userId = value
        }
      /**
       * `optional string user_id = 3;`
       */
      public fun clearUserId() {
        _builder.clearUserId()
      }
      /**
       * `optional string user_id = 3;`
       * @return Whether the userId field is set.
       */
      public fun hasUserId(): kotlin.Boolean {
        return _builder.hasUserId()
      }

      /**
       * `optional uint32 tokens = 4;`
       */
      public var tokens: kotlin.Int
        @JvmName("getTokens")
        get() = _builder.tokens
        @JvmName("setTokens")
        set(value) {
          _builder.tokens = value
        }
      /**
       * `optional uint32 tokens = 4;`
       */
      public fun clearTokens() {
        _builder.clearTokens()
      }
      /**
       * `optional uint32 tokens = 4;`
       * @return Whether the tokens field is set.
       */
      public fun hasTokens(): kotlin.Boolean {
        return _builder.hasTokens()
      }

      /**
       * `optional uint32 tokens_spent = 5;`
       */
      public var tokensSpent: kotlin.Int
        @JvmName("getTokensSpent")
        get() = _builder.tokensSpent
        @JvmName("setTokensSpent")
        set(value) {
          _builder.tokensSpent = value
        }
      /**
       * `optional uint32 tokens_spent = 5;`
       */
      public fun clearTokensSpent() {
        _builder.clearTokensSpent()
      }
      /**
       * `optional uint32 tokens_spent = 5;`
       * @return Whether the tokensSpent field is set.
       */
      public fun hasTokensSpent(): kotlin.Boolean {
        return _builder.hasTokensSpent()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CoopCompletionSnapshot.copy(block: `ei`.CoopCompletionSnapshotKt.Dsl.() -> kotlin.Unit): ei.Ei.CoopCompletionSnapshot =
  `ei`.CoopCompletionSnapshotKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.CoopCompletionSnapshot.ContributorSnapshot.copy(block: `ei`.CoopCompletionSnapshotKt.ContributorSnapshotKt.Dsl.() -> kotlin.Unit): ei.Ei.CoopCompletionSnapshot.ContributorSnapshot =
  `ei`.CoopCompletionSnapshotKt.ContributorSnapshotKt.Dsl._create(this.toBuilder()).apply { block() }._build()


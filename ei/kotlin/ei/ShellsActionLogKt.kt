// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeshellsActionLog")
public inline fun shellsActionLog(block: ei.ShellsActionLogKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellsActionLog =
  ei.ShellsActionLogKt.Dsl._create(ei.Ei.ShellsActionLog.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ShellsActionLog`
 */
public object ShellsActionLogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ShellsActionLog.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ShellsActionLog.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ShellsActionLog = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 8;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @kotlin.jvm.JvmName("getRinfo")
        get() = _builder.rinfo
      @kotlin.jvm.JvmName("setRinfo")
        set(value) {
        _builder.rinfo = value
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 8;</code>
     * @return This builder for chaining.
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 8;</code>
     * @return Whether the rinfo field is set.
     * @return This builder for chaining.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val ShellsActionLogKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string user_id = 1;`
     */
    public var userId: kotlin.String
      @kotlin.jvm.JvmName("getUserId")
        get() = _builder.userId
      @kotlin.jvm.JvmName("setUserId")
        set(value) {
        _builder.userId = value
      }
    /**
     * <code>optional string user_id = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional string user_id = 1;</code>
     * @return Whether the userId field is set.
     * @return This builder for chaining.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * `optional string action = 2;`
     */
    public var action: kotlin.String
      @kotlin.jvm.JvmName("getAction")
        get() = _builder.action
      @kotlin.jvm.JvmName("setAction")
        set(value) {
        _builder.action = value
      }
    /**
     * <code>optional string action = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearAction() {
      _builder.clearAction()
    }
    /**
     * <code>optional string action = 2;</code>
     * @return Whether the action field is set.
     * @return This builder for chaining.
     */
    public fun hasAction(): kotlin.Boolean {
      return _builder.hasAction()
    }

    /**
     * `optional string sub_id = 3;`
     */
    public var subId: kotlin.String
      @kotlin.jvm.JvmName("getSubId")
        get() = _builder.subId
      @kotlin.jvm.JvmName("setSubId")
        set(value) {
        _builder.subId = value
      }
    /**
     * <code>optional string sub_id = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearSubId() {
      _builder.clearSubId()
    }
    /**
     * <code>optional string sub_id = 3;</code>
     * @return Whether the subId field is set.
     * @return This builder for chaining.
     */
    public fun hasSubId(): kotlin.Boolean {
      return _builder.hasSubId()
    }

    /**
     * `optional .ei.ShellDB.FarmElement farm_element = 9;`
     */
    public var farmElement: ei.Ei.ShellDB.FarmElement
      @kotlin.jvm.JvmName("getFarmElement")
        get() = _builder.farmElement
      @kotlin.jvm.JvmName("setFarmElement")
        set(value) {
        _builder.farmElement = value
      }
    /**
     * <code>optional .ei.ShellDB.FarmElement farm_element = 9;</code>
     * @return This builder for chaining.
     */
    public fun clearFarmElement() {
      _builder.clearFarmElement()
    }
    /**
     * <code>optional .ei.ShellDB.FarmElement farm_element = 9;</code>
     * @return Whether the farmElement field is set.
     * @return This builder for chaining.
     */
    public fun hasFarmElement(): kotlin.Boolean {
      return _builder.hasFarmElement()
    }

    /**
     * `optional uint32 cost = 4;`
     */
    public var cost: kotlin.Int
      @kotlin.jvm.JvmName("getCost")
        get() = _builder.cost
      @kotlin.jvm.JvmName("setCost")
        set(value) {
        _builder.cost = value
      }
    /**
     * <code>optional uint32 cost = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearCost() {
      _builder.clearCost()
    }
    /**
     * <code>optional uint32 cost = 4;</code>
     * @return Whether the cost field is set.
     * @return This builder for chaining.
     */
    public fun hasCost(): kotlin.Boolean {
      return _builder.hasCost()
    }

    /**
     * `optional double approx_time = 5;`
     */
    public var approxTime: kotlin.Double
      @kotlin.jvm.JvmName("getApproxTime")
        get() = _builder.approxTime
      @kotlin.jvm.JvmName("setApproxTime")
        set(value) {
        _builder.approxTime = value
      }
    /**
     * <code>optional double approx_time = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearApproxTime() {
      _builder.clearApproxTime()
    }
    /**
     * <code>optional double approx_time = 5;</code>
     * @return Whether the approxTime field is set.
     * @return This builder for chaining.
     */
    public fun hasApproxTime(): kotlin.Boolean {
      return _builder.hasApproxTime()
    }

    /**
     * `optional string version = 6;`
     */
    public var version: kotlin.String
      @kotlin.jvm.JvmName("getVersion")
        get() = _builder.version
      @kotlin.jvm.JvmName("setVersion")
        set(value) {
        _builder.version = value
      }
    /**
     * <code>optional string version = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }
    /**
     * <code>optional string version = 6;</code>
     * @return Whether the version field is set.
     * @return This builder for chaining.
     */
    public fun hasVersion(): kotlin.Boolean {
      return _builder.hasVersion()
    }

    /**
     * `optional int32 farm_index = 7;`
     */
    public var farmIndex: kotlin.Int
      @kotlin.jvm.JvmName("getFarmIndex")
        get() = _builder.farmIndex
      @kotlin.jvm.JvmName("setFarmIndex")
        set(value) {
        _builder.farmIndex = value
      }
    /**
     * <code>optional int32 farm_index = 7;</code>
     * @return This builder for chaining.
     */
    public fun clearFarmIndex() {
      _builder.clearFarmIndex()
    }
    /**
     * <code>optional int32 farm_index = 7;</code>
     * @return Whether the farmIndex field is set.
     * @return This builder for chaining.
     */
    public fun hasFarmIndex(): kotlin.Boolean {
      return _builder.hasFarmIndex()
    }

    /**
     * `optional double soul_eggs = 10;`
     */
    public var soulEggs: kotlin.Double
      @kotlin.jvm.JvmName("getSoulEggs")
        get() = _builder.soulEggs
      @kotlin.jvm.JvmName("setSoulEggs")
        set(value) {
        _builder.soulEggs = value
      }
    /**
     * <code>optional double soul_eggs = 10;</code>
     * @return This builder for chaining.
     */
    public fun clearSoulEggs() {
      _builder.clearSoulEggs()
    }
    /**
     * <code>optional double soul_eggs = 10;</code>
     * @return Whether the soulEggs field is set.
     * @return This builder for chaining.
     */
    public fun hasSoulEggs(): kotlin.Boolean {
      return _builder.hasSoulEggs()
    }

    /**
     * `optional uint64 tickets_spent = 11;`
     */
    public var ticketsSpent: kotlin.Long
      @kotlin.jvm.JvmName("getTicketsSpent")
        get() = _builder.ticketsSpent
      @kotlin.jvm.JvmName("setTicketsSpent")
        set(value) {
        _builder.ticketsSpent = value
      }
    /**
     * <code>optional uint64 tickets_spent = 11;</code>
     * @return This builder for chaining.
     */
    public fun clearTicketsSpent() {
      _builder.clearTicketsSpent()
    }
    /**
     * <code>optional uint64 tickets_spent = 11;</code>
     * @return Whether the ticketsSpent field is set.
     * @return This builder for chaining.
     */
    public fun hasTicketsSpent(): kotlin.Boolean {
      return _builder.hasTicketsSpent()
    }

    /**
     * `optional uint64 gold_spent = 12;`
     */
    public var goldSpent: kotlin.Long
      @kotlin.jvm.JvmName("getGoldSpent")
        get() = _builder.goldSpent
      @kotlin.jvm.JvmName("setGoldSpent")
        set(value) {
        _builder.goldSpent = value
      }
    /**
     * <code>optional uint64 gold_spent = 12;</code>
     * @return This builder for chaining.
     */
    public fun clearGoldSpent() {
      _builder.clearGoldSpent()
    }
    /**
     * <code>optional uint64 gold_spent = 12;</code>
     * @return Whether the goldSpent field is set.
     * @return This builder for chaining.
     */
    public fun hasGoldSpent(): kotlin.Boolean {
      return _builder.hasGoldSpent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellsActionLog.copy(block: `ei`.ShellsActionLogKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellsActionLog =
  `ei`.ShellsActionLogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.ShellsActionLogOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null


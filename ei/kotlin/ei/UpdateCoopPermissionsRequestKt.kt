// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeupdateCoopPermissionsRequest")
public inline fun updateCoopPermissionsRequest(block: ei.UpdateCoopPermissionsRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.UpdateCoopPermissionsRequest =
  ei.UpdateCoopPermissionsRequestKt.Dsl._create(ei.Ei.UpdateCoopPermissionsRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.UpdateCoopPermissionsRequest`
 */
public object UpdateCoopPermissionsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.UpdateCoopPermissionsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.UpdateCoopPermissionsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.UpdateCoopPermissionsRequest = _builder.build()

    /**
     * `optional .ei.BasicRequestInfo rinfo = 6;`
     */
    public var rinfo: ei.Ei.BasicRequestInfo
      @kotlin.jvm.JvmName("getRinfo")
        get() = _builder.rinfo
      @kotlin.jvm.JvmName("setRinfo")
        set(value) {
        _builder.rinfo = value
      }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 6;</code>
     * @return This builder for chaining.
     */
    public fun clearRinfo() {
      _builder.clearRinfo()
    }
    /**
     * <code>optional .ei.BasicRequestInfo rinfo = 6;</code>
     * @return Whether the rinfo field is set.
     * @return This builder for chaining.
     */
    public fun hasRinfo(): kotlin.Boolean {
      return _builder.hasRinfo()
    }

    public val UpdateCoopPermissionsRequestKt.Dsl.rinfoOrNull: ei.Ei.BasicRequestInfo?
      get() = _builder.rinfoOrNull

    /**
     * `optional string contract_identifier = 1;`
     */
    public var contractIdentifier: kotlin.String
      @kotlin.jvm.JvmName("getContractIdentifier")
        get() = _builder.contractIdentifier
      @kotlin.jvm.JvmName("setContractIdentifier")
        set(value) {
        _builder.contractIdentifier = value
      }
    /**
     * <code>optional string contract_identifier = 1;</code>
     * @return This builder for chaining.
     */
    public fun clearContractIdentifier() {
      _builder.clearContractIdentifier()
    }
    /**
     * <code>optional string contract_identifier = 1;</code>
     * @return Whether the contractIdentifier field is set.
     * @return This builder for chaining.
     */
    public fun hasContractIdentifier(): kotlin.Boolean {
      return _builder.hasContractIdentifier()
    }

    /**
     * `optional string coop_identifier = 2;`
     */
    public var coopIdentifier: kotlin.String
      @kotlin.jvm.JvmName("getCoopIdentifier")
        get() = _builder.coopIdentifier
      @kotlin.jvm.JvmName("setCoopIdentifier")
        set(value) {
        _builder.coopIdentifier = value
      }
    /**
     * <code>optional string coop_identifier = 2;</code>
     * @return This builder for chaining.
     */
    public fun clearCoopIdentifier() {
      _builder.clearCoopIdentifier()
    }
    /**
     * <code>optional string coop_identifier = 2;</code>
     * @return Whether the coopIdentifier field is set.
     * @return This builder for chaining.
     */
    public fun hasCoopIdentifier(): kotlin.Boolean {
      return _builder.hasCoopIdentifier()
    }

    /**
     * `optional string requesting_user_id = 3;`
     */
    public var requestingUserId: kotlin.String
      @kotlin.jvm.JvmName("getRequestingUserId")
        get() = _builder.requestingUserId
      @kotlin.jvm.JvmName("setRequestingUserId")
        set(value) {
        _builder.requestingUserId = value
      }
    /**
     * <code>optional string requesting_user_id = 3;</code>
     * @return This builder for chaining.
     */
    public fun clearRequestingUserId() {
      _builder.clearRequestingUserId()
    }
    /**
     * <code>optional string requesting_user_id = 3;</code>
     * @return Whether the requestingUserId field is set.
     * @return This builder for chaining.
     */
    public fun hasRequestingUserId(): kotlin.Boolean {
      return _builder.hasRequestingUserId()
    }

    /**
     * `optional bool public = 4;`
     */
    public var public: kotlin.Boolean
      @kotlin.jvm.JvmName("getPublic")
        get() = _builder.public
      @kotlin.jvm.JvmName("setPublic")
        set(value) {
        _builder.public = value
      }
    /**
     * <code>optional bool public = 4;</code>
     * @return This builder for chaining.
     */
    public fun clearPublic() {
      _builder.clearPublic()
    }
    /**
     * <code>optional bool public = 4;</code>
     * @return Whether the public field is set.
     * @return This builder for chaining.
     */
    public fun hasPublic(): kotlin.Boolean {
      return _builder.hasPublic()
    }

    /**
     * `optional uint32 client_version = 5;`
     */
    public var clientVersion: kotlin.Int
      @kotlin.jvm.JvmName("getClientVersion")
        get() = _builder.clientVersion
      @kotlin.jvm.JvmName("setClientVersion")
        set(value) {
        _builder.clientVersion = value
      }
    /**
     * <code>optional uint32 client_version = 5;</code>
     * @return This builder for chaining.
     */
    public fun clearClientVersion() {
      _builder.clearClientVersion()
    }
    /**
     * <code>optional uint32 client_version = 5;</code>
     * @return Whether the clientVersion field is set.
     * @return This builder for chaining.
     */
    public fun hasClientVersion(): kotlin.Boolean {
      return _builder.hasClientVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.UpdateCoopPermissionsRequest.copy(block: `ei`.UpdateCoopPermissionsRequestKt.Dsl.() -> kotlin.Unit): ei.Ei.UpdateCoopPermissionsRequest =
  `ei`.UpdateCoopPermissionsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ei.Ei.UpdateCoopPermissionsRequestOrBuilder.rinfoOrNull: ei.Ei.BasicRequestInfo?
  get() = if (hasRinfo()) getRinfo() else null


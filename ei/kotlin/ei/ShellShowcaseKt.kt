// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeshellShowcase")
public inline fun shellShowcase(block: ei.ShellShowcaseKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellShowcase =
  ei.ShellShowcaseKt.Dsl._create(ei.Ei.ShellShowcase.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.ShellShowcase`
 */
public object ShellShowcaseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.ShellShowcase.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.ShellShowcase.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.ShellShowcase = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TopProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ShellShowcaseListingInfo top = 1;`
     */
     public val top: com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.topList
      )
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo top = 1;</code>
     * @param value The top to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addTop")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>.add(value: ei.Ei.ShellShowcaseListingInfo) {
      _builder.addTop(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo top = 1;</code>
     * @param value The top to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignTop")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>.plusAssign(value: ei.Ei.ShellShowcaseListingInfo) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo top = 1;</code>
     * @param values The top to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllTop")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListingInfo>) {
      _builder.addAllTop(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo top = 1;</code>
     * @param values The top to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllTop")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListingInfo>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo top = 1;</code>
     * @param index The index to set the value at.
     * @param value The top to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setTop")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>.set(index: kotlin.Int, value: ei.Ei.ShellShowcaseListingInfo) {
      _builder.setTop(index, value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo top = 1;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearTop")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, TopProxy>.clear() {
      _builder.clearTop()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FeaturedProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ShellShowcaseListingInfo featured = 2;`
     */
     public val featured: com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.featuredList
      )
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo featured = 2;</code>
     * @param value The featured to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addFeatured")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>.add(value: ei.Ei.ShellShowcaseListingInfo) {
      _builder.addFeatured(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo featured = 2;</code>
     * @param value The featured to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignFeatured")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>.plusAssign(value: ei.Ei.ShellShowcaseListingInfo) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo featured = 2;</code>
     * @param values The featured to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllFeatured")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListingInfo>) {
      _builder.addAllFeatured(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo featured = 2;</code>
     * @param values The featured to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllFeatured")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListingInfo>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo featured = 2;</code>
     * @param index The index to set the value at.
     * @param value The featured to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setFeatured")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>.set(index: kotlin.Int, value: ei.Ei.ShellShowcaseListingInfo) {
      _builder.setFeatured(index, value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo featured = 2;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearFeatured")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FeaturedProxy>.clear() {
      _builder.clearFeatured()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FreshProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.ShellShowcaseListingInfo fresh = 3;`
     */
     public val fresh: com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.freshList
      )
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo fresh = 3;</code>
     * @param value The fresh to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addFresh")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>.add(value: ei.Ei.ShellShowcaseListingInfo) {
      _builder.addFresh(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo fresh = 3;</code>
     * @param value The fresh to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignFresh")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>.plusAssign(value: ei.Ei.ShellShowcaseListingInfo) {
      add(value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo fresh = 3;</code>
     * @param values The fresh to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllFresh")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListingInfo>) {
      _builder.addAllFresh(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo fresh = 3;</code>
     * @param values The fresh to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllFresh")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.ShellShowcaseListingInfo>) {
      addAll(values)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo fresh = 3;</code>
     * @param index The index to set the value at.
     * @param value The fresh to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setFresh")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>.set(index: kotlin.Int, value: ei.Ei.ShellShowcaseListingInfo) {
      _builder.setFresh(index, value)
    }
    /**
     * <code>repeated .ei.ShellShowcaseListingInfo fresh = 3;</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearFresh")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.ShellShowcaseListingInfo, FreshProxy>.clear() {
      _builder.clearFresh()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.ShellShowcase.copy(block: `ei`.ShellShowcaseKt.Dsl.() -> kotlin.Unit): ei.Ei.ShellShowcase =
  `ei`.ShellShowcaseKt.Dsl._create(this.toBuilder()).apply { block() }._build()


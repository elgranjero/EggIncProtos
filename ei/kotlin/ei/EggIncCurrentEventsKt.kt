// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ei.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ei;

@kotlin.jvm.JvmName("-initializeeggIncCurrentEvents")
public inline fun eggIncCurrentEvents(block: ei.EggIncCurrentEventsKt.Dsl.() -> kotlin.Unit): ei.Ei.EggIncCurrentEvents =
  ei.EggIncCurrentEventsKt.Dsl._create(ei.Ei.EggIncCurrentEvents.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `ei.EggIncCurrentEvents`
 */
public object EggIncCurrentEventsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ei.Ei.EggIncCurrentEvents.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ei.Ei.EggIncCurrentEvents.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ei.Ei.EggIncCurrentEvents = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EventsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     */
     public val events: com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.eventsList
      )
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     * @param value The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEvents")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>.add(value: ei.Ei.EggIncEvent) {
      _builder.addEvents(value)
    }
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     * @param value The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEvents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>.plusAssign(value: ei.Ei.EggIncEvent) {
      add(value)
    }
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     * @param values The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEvents")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>.addAll(values: kotlin.collections.Iterable<ei.Ei.EggIncEvent>) {
      _builder.addAllEvents(values)
    }
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     * @param values The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEvents")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>.plusAssign(values: kotlin.collections.Iterable<ei.Ei.EggIncEvent>) {
      addAll(values)
    }
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     * @param index The index to set the value at.
     * @param value The events to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEvents")
    public operator fun com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>.set(index: kotlin.Int, value: ei.Ei.EggIncEvent) {
      _builder.setEvents(index, value)
    }
    /**
     * `repeated .ei.EggIncEvent events = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEvents")
    public fun com.google.protobuf.kotlin.DslList<ei.Ei.EggIncEvent, EventsProxy>.clear() {
      _builder.clearEvents()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ei.Ei.EggIncCurrentEvents.copy(block: `ei`.EggIncCurrentEventsKt.Dsl.() -> kotlin.Unit): ei.Ei.EggIncCurrentEvents =
  `ei`.EggIncCurrentEventsKt.Dsl._create(this.toBuilder()).apply { block() }._build()


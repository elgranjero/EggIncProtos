// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ShellObjectSpec');
goog.provide('proto.ei.ShellObjectSpec.ChickenAnimation');
goog.provide('proto.ei.ShellObjectSpec.LODPiece');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ei.DLCItem');

goog.forwardDeclare('proto.ei.ShellSpec.AssetType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellObjectSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellObjectSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellObjectSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellObjectSpec.displayName = 'proto.ei.ShellObjectSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellObjectSpec.LODPiece = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellObjectSpec.LODPiece, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellObjectSpec.LODPiece.displayName = 'proto.ei.ShellObjectSpec.LODPiece';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellObjectSpec.repeatedFields_ = [15,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellObjectSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellObjectSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellObjectSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    assetType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    objectClass: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    iconColorsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requiredEop: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    requiredSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    isNew: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    expires: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    secondsUntilAvailable: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    popularity: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f,
    metadataList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f,
    noHats: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    chickenAnimation: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    sortPriority: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    piecesList: jspb.Message.toObjectList(msg.getPiecesList(),
    proto.ei.ShellObjectSpec.LODPiece.toObject, includeInstance),
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellObjectSpec}
 */
proto.ei.ShellObjectSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellObjectSpec;
  return proto.ei.ShellObjectSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellObjectSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellObjectSpec}
 */
proto.ei.ShellObjectSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.ShellSpec.AssetType} */ (reader.readEnum());
      msg.setAssetType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectClass(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addIconColors(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequiredEop(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredSoulEggs(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNew(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpires(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsUntilAvailable(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPopularity(value);
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMetadata(values[i]);
      }
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoHats(value);
      break;
    case 16:
      var value = /** @type {!proto.ei.ShellObjectSpec.ChickenAnimation} */ (reader.readEnum());
      msg.setChickenAnimation(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortPriority(value);
      break;
    case 8:
      var value = new proto.ei.ShellObjectSpec.LODPiece;
      reader.readMessage(value,proto.ei.ShellObjectSpec.LODPiece.deserializeBinaryFromReader);
      msg.addPieces(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellObjectSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellObjectSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellObjectSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIconColorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {!proto.ei.ShellObjectSpec.ChickenAnimation} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getPiecesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ShellObjectSpec.LODPiece.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.ShellObjectSpec.ChickenAnimation = {
  STANDARD_RUN: 0,
  SLOWMO: 7,
  WOBBLE: 1,
  WOBBLE_LEAN: 5,
  SMOOTH: 2,
  SMOOTH_LEAN: 6,
  HOVER: 3,
  SIDEWAYS_SMOOTH: 4,
  SIDEWAYS_LEAN: 8
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellObjectSpec.LODPiece.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellObjectSpec.LODPiece} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.LODPiece.toObject = function(includeInstance, msg) {
  var f, obj = {
    dlc: (f = msg.getDlc()) && proto.ei.DLCItem.toObject(includeInstance, f),
    lod: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellObjectSpec.LODPiece}
 */
proto.ei.ShellObjectSpec.LODPiece.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellObjectSpec.LODPiece;
  return proto.ei.ShellObjectSpec.LODPiece.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellObjectSpec.LODPiece} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellObjectSpec.LODPiece}
 */
proto.ei.ShellObjectSpec.LODPiece.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.setDlc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellObjectSpec.LODPiece.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellObjectSpec.LODPiece} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellObjectSpec.LODPiece.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDlc();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional DLCItem dlc = 1;
 * @return {?proto.ei.DLCItem}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.getDlc = function() {
  return /** @type{?proto.ei.DLCItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCItem, 1));
};


/**
 * @param {?proto.ei.DLCItem|undefined} value
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
*/
proto.ei.ShellObjectSpec.LODPiece.prototype.setDlc = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.clearDlc = function() {
  return this.setDlc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.hasDlc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 lod = 2;
 * @return {number}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.getLod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.setLod = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec.LODPiece} returns this
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.clearLod = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.LODPiece.prototype.hasLod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellObjectSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.ShellObjectSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ShellSpec.AssetType asset_type = 3;
 * @return {!proto.ei.ShellSpec.AssetType}
 */
proto.ei.ShellObjectSpec.prototype.getAssetType = function() {
  return /** @type {!proto.ei.ShellSpec.AssetType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.ShellSpec.AssetType} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setAssetType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearAssetType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasAssetType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string object_class = 14;
 * @return {string}
 */
proto.ei.ShellObjectSpec.prototype.getObjectClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setObjectClass = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearObjectClass = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasObjectClass = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated string icon_colors = 15;
 * @return {!Array<string>}
 */
proto.ei.ShellObjectSpec.prototype.getIconColorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setIconColorsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.addIconColors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearIconColorsList = function() {
  return this.setIconColorsList([]);
};


/**
 * optional uint32 price = 4;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 required_eop = 5;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getRequiredEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setRequiredEop = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearRequiredEop = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasRequiredEop = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double required_soul_eggs = 6;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getRequiredSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setRequiredSoulEggs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearRequiredSoulEggs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasRequiredSoulEggs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool is_new = 10;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getIsNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setIsNew = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearIsNew = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasIsNew = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool expires = 11;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getExpires = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setExpires = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearExpires = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double seconds_until_available = 18;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getSecondsUntilAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setSecondsUntilAvailable = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearSecondsUntilAvailable = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasSecondsUntilAvailable = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double seconds_remaining = 12;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 popularity = 19;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setPopularity = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearPopularity = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasPopularity = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated double metadata = 7;
 * @return {!Array<number>}
 */
proto.ei.ShellObjectSpec.prototype.getMetadataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setMetadataList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.addMetadata = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearMetadataList = function() {
  return this.setMetadataList([]);
};


/**
 * optional bool no_hats = 13;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getNoHats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setNoHats = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearNoHats = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasNoHats = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ChickenAnimation chicken_animation = 16;
 * @return {!proto.ei.ShellObjectSpec.ChickenAnimation}
 */
proto.ei.ShellObjectSpec.prototype.getChickenAnimation = function() {
  return /** @type {!proto.ei.ShellObjectSpec.ChickenAnimation} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.ei.ShellObjectSpec.ChickenAnimation} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setChickenAnimation = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearChickenAnimation = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasChickenAnimation = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional int32 sort_priority = 17;
 * @return {number}
 */
proto.ei.ShellObjectSpec.prototype.getSortPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setSortPriority = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearSortPriority = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasSortPriority = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated LODPiece pieces = 8;
 * @return {!Array<!proto.ei.ShellObjectSpec.LODPiece>}
 */
proto.ei.ShellObjectSpec.prototype.getPiecesList = function() {
  return /** @type{!Array<!proto.ei.ShellObjectSpec.LODPiece>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellObjectSpec.LODPiece, 8));
};


/**
 * @param {!Array<!proto.ei.ShellObjectSpec.LODPiece>} value
 * @return {!proto.ei.ShellObjectSpec} returns this
*/
proto.ei.ShellObjectSpec.prototype.setPiecesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ShellObjectSpec.LODPiece=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec.LODPiece}
 */
proto.ei.ShellObjectSpec.prototype.addPieces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ShellObjectSpec.LODPiece, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearPiecesList = function() {
  return this.setPiecesList([]);
};


/**
 * optional bool default_appearance = 9;
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellObjectSpec} returns this
 */
proto.ei.ShellObjectSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellObjectSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 9) != null;
};



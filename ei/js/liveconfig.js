// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.LiveConfig');
goog.provide('proto.ei.LiveConfig.BoostsConfig');
goog.provide('proto.ei.LiveConfig.BoostsConfig.ItemConfig');
goog.provide('proto.ei.LiveConfig.GiftConfig');
goog.provide('proto.ei.LiveConfig.GiftConfig.GiftMuConfig');
goog.provide('proto.ei.LiveConfig.GiftConfig.GiftValueConfig');
goog.provide('proto.ei.LiveConfig.HelpConfig');
goog.provide('proto.ei.LiveConfig.HelpConfig.HowToVideoInfo');
goog.provide('proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type');
goog.provide('proto.ei.LiveConfig.MiscConfig');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.displayName = 'proto.ei.LiveConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.BoostsConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LiveConfig.BoostsConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.LiveConfig.BoostsConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.BoostsConfig.displayName = 'proto.ei.LiveConfig.BoostsConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.BoostsConfig.ItemConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.BoostsConfig.ItemConfig.displayName = 'proto.ei.LiveConfig.BoostsConfig.ItemConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.GiftConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LiveConfig.GiftConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.LiveConfig.GiftConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.GiftConfig.displayName = 'proto.ei.LiveConfig.GiftConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.GiftConfig.GiftValueConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.GiftConfig.GiftValueConfig.displayName = 'proto.ei.LiveConfig.GiftConfig.GiftValueConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.GiftConfig.GiftMuConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.GiftConfig.GiftMuConfig.displayName = 'proto.ei.LiveConfig.GiftConfig.GiftMuConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.MiscConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.MiscConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.MiscConfig.displayName = 'proto.ei.LiveConfig.MiscConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.HelpConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LiveConfig.HelpConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.LiveConfig.HelpConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.HelpConfig.displayName = 'proto.ei.LiveConfig.HelpConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LiveConfig.HelpConfig.HowToVideoInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.displayName = 'proto.ei.LiveConfig.HelpConfig.HowToVideoInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    configId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    boostsConfig: (f = msg.getBoostsConfig()) && proto.ei.LiveConfig.BoostsConfig.toObject(includeInstance, f),
    giftConfig: (f = msg.getGiftConfig()) && proto.ei.LiveConfig.GiftConfig.toObject(includeInstance, f),
    miscConfig: (f = msg.getMiscConfig()) && proto.ei.LiveConfig.MiscConfig.toObject(includeInstance, f),
    helpConfig: (f = msg.getHelpConfig()) && proto.ei.LiveConfig.HelpConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig}
 */
proto.ei.LiveConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig;
  return proto.ei.LiveConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig}
 */
proto.ei.LiveConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigId(value);
      break;
    case 2:
      var value = new proto.ei.LiveConfig.BoostsConfig;
      reader.readMessage(value,proto.ei.LiveConfig.BoostsConfig.deserializeBinaryFromReader);
      msg.setBoostsConfig(value);
      break;
    case 3:
      var value = new proto.ei.LiveConfig.GiftConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.deserializeBinaryFromReader);
      msg.setGiftConfig(value);
      break;
    case 4:
      var value = new proto.ei.LiveConfig.MiscConfig;
      reader.readMessage(value,proto.ei.LiveConfig.MiscConfig.deserializeBinaryFromReader);
      msg.setMiscConfig(value);
      break;
    case 5:
      var value = new proto.ei.LiveConfig.HelpConfig;
      reader.readMessage(value,proto.ei.LiveConfig.HelpConfig.deserializeBinaryFromReader);
      msg.setHelpConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBoostsConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ei.LiveConfig.BoostsConfig.serializeBinaryToWriter
    );
  }
  f = message.getGiftConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ei.LiveConfig.GiftConfig.serializeBinaryToWriter
    );
  }
  f = message.getMiscConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ei.LiveConfig.MiscConfig.serializeBinaryToWriter
    );
  }
  f = message.getHelpConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ei.LiveConfig.HelpConfig.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LiveConfig.BoostsConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.BoostsConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.BoostsConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemConfigsList: jspb.Message.toObjectList(msg.getItemConfigsList(),
    proto.ei.LiveConfig.BoostsConfig.ItemConfig.toObject, includeInstance),
    cashBoostCooloffTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.BoostsConfig}
 */
proto.ei.LiveConfig.BoostsConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.BoostsConfig;
  return proto.ei.LiveConfig.BoostsConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.BoostsConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.BoostsConfig}
 */
proto.ei.LiveConfig.BoostsConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LiveConfig.BoostsConfig.ItemConfig;
      reader.readMessage(value,proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinaryFromReader);
      msg.addItemConfigs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCashBoostCooloffTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.BoostsConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.BoostsConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LiveConfig.BoostsConfig.ItemConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.BoostsConfig.ItemConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    boostId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    tokenPrice: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    seRequired: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.BoostsConfig.ItemConfig;
  return proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoostId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTokenPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeRequired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.BoostsConfig.ItemConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string boost_id = 1;
 * @return {string}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getBoostId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setBoostId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearBoostId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasBoostId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 price = 2;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 token_price = 3;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getTokenPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setTokenPrice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearTokenPrice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasTokenPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double se_required = 4;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.getSeRequired = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.setSeRequired = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.clearSeRequired = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.ItemConfig.prototype.hasSeRequired = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated ItemConfig item_configs = 1;
 * @return {!Array<!proto.ei.LiveConfig.BoostsConfig.ItemConfig>}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.getItemConfigsList = function() {
  return /** @type{!Array<!proto.ei.LiveConfig.BoostsConfig.ItemConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LiveConfig.BoostsConfig.ItemConfig, 1));
};


/**
 * @param {!Array<!proto.ei.LiveConfig.BoostsConfig.ItemConfig>} value
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
*/
proto.ei.LiveConfig.BoostsConfig.prototype.setItemConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LiveConfig.BoostsConfig.ItemConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LiveConfig.BoostsConfig.ItemConfig}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.addItemConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LiveConfig.BoostsConfig.ItemConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.prototype.clearItemConfigsList = function() {
  return this.setItemConfigsList([]);
};


/**
 * optional double cash_boost_cooloff_time = 2;
 * @return {number}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.getCashBoostCooloffTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.prototype.setCashBoostCooloffTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.BoostsConfig} returns this
 */
proto.ei.LiveConfig.BoostsConfig.prototype.clearCashBoostCooloffTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.BoostsConfig.prototype.hasCashBoostCooloffTime = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LiveConfig.GiftConfig.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.GiftConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.GiftConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.GiftConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    giftConfigsList: jspb.Message.toObjectList(msg.getGiftConfigsList(),
    proto.ei.LiveConfig.GiftConfig.GiftValueConfig.toObject, includeInstance),
    giftMuMinSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    giftMuMaxSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    giftMuOverallMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 12)) == null ? undefined : f,
    randomGiftMuConfig: (f = msg.getRandomGiftMuConfig()) && proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject(includeInstance, f),
    videoGiftMuConfig: (f = msg.getVideoGiftMuConfig()) && proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject(includeInstance, f),
    packageInterval: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    videoOfferInterval: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    videoOfferIntervalContract: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    videoOfferIntervalPiggyFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    videoOfferIntervalPiggyExtraFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    videoResetOnIdle: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    packageIntervalContract: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    packageIntervalPiggyFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    packageIntervalPiggyExtraFull: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    packageResetOnIdle: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.GiftConfig}
 */
proto.ei.LiveConfig.GiftConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.GiftConfig;
  return proto.ei.LiveConfig.GiftConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.GiftConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.GiftConfig}
 */
proto.ei.LiveConfig.GiftConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = new proto.ei.LiveConfig.GiftConfig.GiftValueConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinaryFromReader);
      msg.addGiftConfigs(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftMuMinSpent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftMuMaxSpent(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGiftMuOverallMult(value);
      break;
    case 15:
      var value = new proto.ei.LiveConfig.GiftConfig.GiftMuConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader);
      msg.setRandomGiftMuConfig(value);
      break;
    case 16:
      var value = new proto.ei.LiveConfig.GiftConfig.GiftMuConfig;
      reader.readMessage(value,proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader);
      msg.setVideoGiftMuConfig(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageInterval(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferInterval(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferIntervalContract(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferIntervalPiggyFull(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoOfferIntervalPiggyExtraFull(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVideoResetOnIdle(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageIntervalContract(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageIntervalPiggyFull(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPackageIntervalPiggyExtraFull(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPackageResetOnIdle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.GiftConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.GiftConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.GiftConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGiftConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.LiveConfig.GiftConfig.GiftValueConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getRandomGiftMuConfig();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter
    );
  }
  f = message.getVideoGiftMuConfig();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.GiftConfig.GiftValueConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    giftId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    amount: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    randMin: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    randMax: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    videoMin: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    videoMax: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.GiftConfig.GiftValueConfig;
  return proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGiftId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRandMin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRandMax(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoMin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVideoMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.GiftConfig.GiftValueConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string gift_id = 1;
 * @return {string}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getGiftId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setGiftId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearGiftId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasGiftId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double amount = 4;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double rand_min = 2;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getRandMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setRandMin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearRandMin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasRandMin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double rand_max = 3;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getRandMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setRandMax = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearRandMax = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasRandMax = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double video_min = 5;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getVideoMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setVideoMin = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearVideoMin = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasVideoMin = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double video_max = 6;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.getVideoMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.setVideoMax = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.clearVideoMax = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftValueConfig.prototype.hasVideoMax = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    minSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    maxSpent: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    overallMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.GiftConfig.GiftMuConfig;
  return proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinSpent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxSpent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverallMult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double min_spent = 1;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.getMinSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.setMinSpent = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.clearMinSpent = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.hasMinSpent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double max_spent = 2;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.getMaxSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.setMaxSpent = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.clearMaxSpent = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.hasMaxSpent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double overall_mult = 3;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.getOverallMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.setOverallMult = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftMuConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.clearOverallMult = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.GiftMuConfig.prototype.hasOverallMult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated GiftValueConfig gift_configs = 9;
 * @return {!Array<!proto.ei.LiveConfig.GiftConfig.GiftValueConfig>}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftConfigsList = function() {
  return /** @type{!Array<!proto.ei.LiveConfig.GiftConfig.GiftValueConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LiveConfig.GiftConfig.GiftValueConfig, 9));
};


/**
 * @param {!Array<!proto.ei.LiveConfig.GiftConfig.GiftValueConfig>} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
*/
proto.ei.LiveConfig.GiftConfig.prototype.setGiftConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LiveConfig.GiftConfig.GiftValueConfig}
 */
proto.ei.LiveConfig.GiftConfig.prototype.addGiftConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.LiveConfig.GiftConfig.GiftValueConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftConfigsList = function() {
  return this.setGiftConfigsList([]);
};


/**
 * optional double gift_mu_min_spent = 10;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftMuMinSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setGiftMuMinSpent = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftMuMinSpent = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasGiftMuMinSpent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double gift_mu_max_spent = 11;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftMuMaxSpent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setGiftMuMaxSpent = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftMuMaxSpent = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasGiftMuMaxSpent = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional double gift_mu_overall_mult = 12;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getGiftMuOverallMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setGiftMuOverallMult = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearGiftMuOverallMult = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasGiftMuOverallMult = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GiftMuConfig random_gift_mu_config = 15;
 * @return {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getRandomGiftMuConfig = function() {
  return /** @type{?proto.ei.LiveConfig.GiftConfig.GiftMuConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.GiftConfig.GiftMuConfig, 15));
};


/**
 * @param {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig|undefined} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
*/
proto.ei.LiveConfig.GiftConfig.prototype.setRandomGiftMuConfig = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearRandomGiftMuConfig = function() {
  return this.setRandomGiftMuConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasRandomGiftMuConfig = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional GiftMuConfig video_gift_mu_config = 16;
 * @return {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoGiftMuConfig = function() {
  return /** @type{?proto.ei.LiveConfig.GiftConfig.GiftMuConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.GiftConfig.GiftMuConfig, 16));
};


/**
 * @param {?proto.ei.LiveConfig.GiftConfig.GiftMuConfig|undefined} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
*/
proto.ei.LiveConfig.GiftConfig.prototype.setVideoGiftMuConfig = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoGiftMuConfig = function() {
  return this.setVideoGiftMuConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoGiftMuConfig = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double package_interval = 1;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageInterval = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageInterval = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageInterval = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageInterval = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double video_offer_interval = 2;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferInterval = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferInterval = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferInterval = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferInterval = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double video_offer_interval_contract = 3;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferIntervalContract = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferIntervalContract = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferIntervalContract = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferIntervalContract = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double video_offer_interval_piggy_full = 4;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferIntervalPiggyFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferIntervalPiggyFull = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferIntervalPiggyFull = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferIntervalPiggyFull = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double video_offer_interval_piggy_extra_full = 5;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoOfferIntervalPiggyExtraFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoOfferIntervalPiggyExtraFull = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoOfferIntervalPiggyExtraFull = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoOfferIntervalPiggyExtraFull = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool video_reset_on_idle = 14;
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getVideoResetOnIdle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setVideoResetOnIdle = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearVideoResetOnIdle = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasVideoResetOnIdle = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double package_interval_contract = 6;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageIntervalContract = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageIntervalContract = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageIntervalContract = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageIntervalContract = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double package_interval_piggy_full = 7;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageIntervalPiggyFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageIntervalPiggyFull = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageIntervalPiggyFull = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageIntervalPiggyFull = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double package_interval_piggy_extra_full = 8;
 * @return {number}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageIntervalPiggyExtraFull = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageIntervalPiggyExtraFull = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageIntervalPiggyExtraFull = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageIntervalPiggyExtraFull = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool package_reset_on_idle = 13;
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.getPackageResetOnIdle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.setPackageResetOnIdle = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.GiftConfig} returns this
 */
proto.ei.LiveConfig.GiftConfig.prototype.clearPackageResetOnIdle = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.GiftConfig.prototype.hasPackageResetOnIdle = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.MiscConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.MiscConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.MiscConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.MiscConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    askToTrack: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    askToTrackMinSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    askToTrackMessage: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    askToTrackShowPreDialog: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    askToTrackAfterPrivacy: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    chickenRunBoostPercentage: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    shellsIntroTickets: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    shellsMaxFreeChickenConfigs: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    shellsIntroAlertThreshold: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    shellsLightingControlsPrice: jspb.Message.getFieldWithDefault(msg, 14, 175),
    contractsExpertLeagueMinSoulPower: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    newPlayerEventDuration: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    contractsClubAvailable: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    contractsBeta: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    seasonRewardsEnabled: (f = jspb.Message.getBooleanField(msg, 15)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.MiscConfig}
 */
proto.ei.LiveConfig.MiscConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.MiscConfig;
  return proto.ei.LiveConfig.MiscConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.MiscConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.MiscConfig}
 */
proto.ei.LiveConfig.MiscConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAskToTrack(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAskToTrackMinSoulEggs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAskToTrackMessage(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAskToTrackShowPreDialog(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAskToTrackAfterPrivacy(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChickenRunBoostPercentage(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsIntroTickets(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsMaxFreeChickenConfigs(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsIntroAlertThreshold(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShellsLightingControlsPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractsExpertLeagueMinSoulPower(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNewPlayerEventDuration(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsClubAvailable(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContractsBeta(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSeasonRewardsEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.MiscConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.MiscConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.MiscConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.MiscConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional bool ask_to_track = 1;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrack = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrack = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrack = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrack = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double ask_to_track_min_soul_eggs = 2;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackMinSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackMinSoulEggs = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackMinSoulEggs = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackMinSoulEggs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ask_to_track_message = 3;
 * @return {string}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool ask_to_track_show_pre_dialog = 4;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackShowPreDialog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackShowPreDialog = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackShowPreDialog = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackShowPreDialog = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool ask_to_track_after_privacy = 5;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getAskToTrackAfterPrivacy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setAskToTrackAfterPrivacy = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearAskToTrackAfterPrivacy = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasAskToTrackAfterPrivacy = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double chicken_run_boost_percentage = 6;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getChickenRunBoostPercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setChickenRunBoostPercentage = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearChickenRunBoostPercentage = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasChickenRunBoostPercentage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 shells_intro_tickets = 7;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsIntroTickets = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsIntroTickets = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsIntroTickets = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsIntroTickets = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 shells_max_free_chicken_configs = 8;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsMaxFreeChickenConfigs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsMaxFreeChickenConfigs = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsMaxFreeChickenConfigs = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsMaxFreeChickenConfigs = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 shells_intro_alert_threshold = 9;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsIntroAlertThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsIntroAlertThreshold = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsIntroAlertThreshold = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsIntroAlertThreshold = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 shells_lighting_controls_price = 14;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getShellsLightingControlsPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 175));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setShellsLightingControlsPrice = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearShellsLightingControlsPrice = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasShellsLightingControlsPrice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional double contracts_expert_league_min_soul_power = 10;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getContractsExpertLeagueMinSoulPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setContractsExpertLeagueMinSoulPower = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearContractsExpertLeagueMinSoulPower = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasContractsExpertLeagueMinSoulPower = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double new_player_event_duration = 11;
 * @return {number}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getNewPlayerEventDuration = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setNewPlayerEventDuration = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearNewPlayerEventDuration = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasNewPlayerEventDuration = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool contracts_club_available = 12;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getContractsClubAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setContractsClubAvailable = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearContractsClubAvailable = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasContractsClubAvailable = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool contracts_beta = 13;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getContractsBeta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setContractsBeta = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearContractsBeta = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasContractsBeta = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool season_rewards_enabled = 15;
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.getSeasonRewardsEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.setSeasonRewardsEnabled = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.MiscConfig} returns this
 */
proto.ei.LiveConfig.MiscConfig.prototype.clearSeasonRewardsEnabled = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.MiscConfig.prototype.hasSeasonRewardsEnabled = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LiveConfig.HelpConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.HelpConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.HelpConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.HelpConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    videoInfosList: jspb.Message.toObjectList(msg.getVideoInfosList(),
    proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.HelpConfig}
 */
proto.ei.LiveConfig.HelpConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.HelpConfig;
  return proto.ei.LiveConfig.HelpConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.HelpConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.HelpConfig}
 */
proto.ei.LiveConfig.HelpConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.LiveConfig.HelpConfig.HowToVideoInfo;
      reader.readMessage(value,proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinaryFromReader);
      msg.addVideoInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.HelpConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.HelpConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.HelpConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVideoInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    duration: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    url: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    soulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LiveConfig.HelpConfig.HowToVideoInfo;
  return proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = /** @type {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoulEggs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type = {
  VIDEO: 0,
  ARTICLE: 1
};

/**
 * optional Type type = 6;
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getType = function() {
  return /** @type {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.Type} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setType = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearType = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string duration = 5;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getDuration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double soul_eggs = 4;
 * @return {number}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.getSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.setSoulEggs = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo} returns this
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.clearSoulEggs = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.HelpConfig.HowToVideoInfo.prototype.hasSoulEggs = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated HowToVideoInfo video_infos = 1;
 * @return {!Array<!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo>}
 */
proto.ei.LiveConfig.HelpConfig.prototype.getVideoInfosList = function() {
  return /** @type{!Array<!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LiveConfig.HelpConfig.HowToVideoInfo, 1));
};


/**
 * @param {!Array<!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo>} value
 * @return {!proto.ei.LiveConfig.HelpConfig} returns this
*/
proto.ei.LiveConfig.HelpConfig.prototype.setVideoInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LiveConfig.HelpConfig.HowToVideoInfo}
 */
proto.ei.LiveConfig.HelpConfig.prototype.addVideoInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.LiveConfig.HelpConfig.HowToVideoInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LiveConfig.HelpConfig} returns this
 */
proto.ei.LiveConfig.HelpConfig.prototype.clearVideoInfosList = function() {
  return this.setVideoInfosList([]);
};


/**
 * optional string config_id = 1;
 * @return {string}
 */
proto.ei.LiveConfig.prototype.getConfigId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.setConfigId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearConfigId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasConfigId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoostsConfig boosts_config = 2;
 * @return {?proto.ei.LiveConfig.BoostsConfig}
 */
proto.ei.LiveConfig.prototype.getBoostsConfig = function() {
  return /** @type{?proto.ei.LiveConfig.BoostsConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.BoostsConfig, 2));
};


/**
 * @param {?proto.ei.LiveConfig.BoostsConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setBoostsConfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearBoostsConfig = function() {
  return this.setBoostsConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasBoostsConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GiftConfig gift_config = 3;
 * @return {?proto.ei.LiveConfig.GiftConfig}
 */
proto.ei.LiveConfig.prototype.getGiftConfig = function() {
  return /** @type{?proto.ei.LiveConfig.GiftConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.GiftConfig, 3));
};


/**
 * @param {?proto.ei.LiveConfig.GiftConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setGiftConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearGiftConfig = function() {
  return this.setGiftConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasGiftConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MiscConfig misc_config = 4;
 * @return {?proto.ei.LiveConfig.MiscConfig}
 */
proto.ei.LiveConfig.prototype.getMiscConfig = function() {
  return /** @type{?proto.ei.LiveConfig.MiscConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.MiscConfig, 4));
};


/**
 * @param {?proto.ei.LiveConfig.MiscConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setMiscConfig = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearMiscConfig = function() {
  return this.setMiscConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasMiscConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional HelpConfig help_config = 5;
 * @return {?proto.ei.LiveConfig.HelpConfig}
 */
proto.ei.LiveConfig.prototype.getHelpConfig = function() {
  return /** @type{?proto.ei.LiveConfig.HelpConfig} */ (
    jspb.Message.getWrapperField(this, proto.ei.LiveConfig.HelpConfig, 5));
};


/**
 * @param {?proto.ei.LiveConfig.HelpConfig|undefined} value
 * @return {!proto.ei.LiveConfig} returns this
*/
proto.ei.LiveConfig.prototype.setHelpConfig = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.LiveConfig} returns this
 */
proto.ei.LiveConfig.prototype.clearHelpConfig = function() {
  return this.setHelpConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LiveConfig.prototype.hasHelpConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};



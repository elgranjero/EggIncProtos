// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ContractSimConfig');
goog.provide('proto.ei.ContractSimConfig.ContractGradeSimConfig');
goog.provide('proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.Contract.PlayerGrade');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractSimConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractSimConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimConfig.displayName = 'proto.ei.ContractSimConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ContractSimConfig.ContractGradeSimConfig.repeatedFields_, null);
};
goog.inherits(proto.ei.ContractSimConfig.ContractGradeSimConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimConfig.ContractGradeSimConfig.displayName = 'proto.ei.ContractSimConfig.ContractGradeSimConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.displayName = 'proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractSimConfig.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    gradeConfigsList: jspb.Message.toObjectList(msg.getGradeConfigsList(),
    proto.ei.ContractSimConfig.ContractGradeSimConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimConfig}
 */
proto.ei.ContractSimConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimConfig;
  return proto.ei.ContractSimConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimConfig}
 */
proto.ei.ContractSimConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ContractSimConfig.ContractGradeSimConfig;
      reader.readMessage(value,proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinaryFromReader);
      msg.addGradeConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGradeConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ContractSimConfig.ContractGradeSimConfig.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    grade: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goalParamsList: jspb.Message.toObjectList(msg.getGoalParamsList(),
    proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimConfig.ContractGradeSimConfig;
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 2:
      var value = new proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams;
      reader.readMessage(value,proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinaryFromReader);
      msg.addGoalParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimConfig.ContractGradeSimConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGoalParamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetSe: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    cpsMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    elrMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    earningsMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    timeEfficacy: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    habCapacityMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    epicResearchBudget: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams;
  return proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetSe(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCpsMult(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setElrMult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEarningsMult(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeEfficacy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHabCapacityMult(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEpicResearchBudget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional double target_se = 1;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getTargetSe = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setTargetSe = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearTargetSe = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasTargetSe = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double cps_mult = 2;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getCpsMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setCpsMult = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearCpsMult = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasCpsMult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double elr_mult = 7;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getElrMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setElrMult = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearElrMult = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasElrMult = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double earnings_mult = 3;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getEarningsMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setEarningsMult = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearEarningsMult = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasEarningsMult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double time_efficacy = 4;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getTimeEfficacy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setTimeEfficacy = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearTimeEfficacy = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasTimeEfficacy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double hab_capacity_mult = 5;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getHabCapacityMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setHabCapacityMult = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearHabCapacityMult = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasHabCapacityMult = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double epic_research_budget = 6;
 * @return {number}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.getEpicResearchBudget = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.setEpicResearchBudget = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.clearEpicResearchBudget = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams.prototype.hasEpicResearchBudget = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Contract.PlayerGrade grade = 1;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GoalParams goal_params = 2;
 * @return {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams>}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.getGoalParamsList = function() {
  return /** @type{!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams, 2));
};


/**
 * @param {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams>} value
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
*/
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.setGoalParamsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams}
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.addGoalParams = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ContractSimConfig.ContractGradeSimConfig.GoalParams, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig} returns this
 */
proto.ei.ContractSimConfig.ContractGradeSimConfig.prototype.clearGoalParamsList = function() {
  return this.setGoalParamsList([]);
};


/**
 * repeated ContractGradeSimConfig grade_configs = 1;
 * @return {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig>}
 */
proto.ei.ContractSimConfig.prototype.getGradeConfigsList = function() {
  return /** @type{!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ContractSimConfig.ContractGradeSimConfig, 1));
};


/**
 * @param {!Array<!proto.ei.ContractSimConfig.ContractGradeSimConfig>} value
 * @return {!proto.ei.ContractSimConfig} returns this
*/
proto.ei.ContractSimConfig.prototype.setGradeConfigsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ContractSimConfig.ContractGradeSimConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ContractSimConfig.ContractGradeSimConfig}
 */
proto.ei.ContractSimConfig.prototype.addGradeConfigs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ContractSimConfig.ContractGradeSimConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ContractSimConfig} returns this
 */
proto.ei.ContractSimConfig.prototype.clearGradeConfigsList = function() {
  return this.setGradeConfigsList([]);
};



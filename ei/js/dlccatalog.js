// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.DLCCatalog');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ei.DLCItem');
goog.require('proto.ei.ShellGroupSpec');
goog.require('proto.ei.ShellObjectSpec');
goog.require('proto.ei.ShellSetSpec');
goog.require('proto.ei.ShellSpec');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.DLCCatalog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.DLCCatalog.repeatedFields_, null);
};
goog.inherits(proto.ei.DLCCatalog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.DLCCatalog.displayName = 'proto.ei.DLCCatalog';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.DLCCatalog.repeatedFields_ = [1,2,3,6,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.DLCCatalog.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.DLCCatalog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.DLCCatalog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DLCCatalog.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.ei.DLCItem.toObject, includeInstance),
    shellsList: jspb.Message.toObjectList(msg.getShellsList(),
    proto.ei.ShellSpec.toObject, includeInstance),
    shellSetsList: jspb.Message.toObjectList(msg.getShellSetsList(),
    proto.ei.ShellSetSpec.toObject, includeInstance),
    decoratorsList: jspb.Message.toObjectList(msg.getDecoratorsList(),
    proto.ei.ShellSetSpec.toObject, includeInstance),
    shellObjectsList: jspb.Message.toObjectList(msg.getShellObjectsList(),
    proto.ei.ShellObjectSpec.toObject, includeInstance),
    shellGroupsList: jspb.Message.toObjectList(msg.getShellGroupsList(),
    proto.ei.ShellGroupSpec.toObject, includeInstance),
    shellsShowcaseLastFeaturedTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.DLCCatalog}
 */
proto.ei.DLCCatalog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.DLCCatalog;
  return proto.ei.DLCCatalog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.DLCCatalog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.DLCCatalog}
 */
proto.ei.DLCCatalog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new proto.ei.ShellSpec;
      reader.readMessage(value,proto.ei.ShellSpec.deserializeBinaryFromReader);
      msg.addShells(value);
      break;
    case 3:
      var value = new proto.ei.ShellSetSpec;
      reader.readMessage(value,proto.ei.ShellSetSpec.deserializeBinaryFromReader);
      msg.addShellSets(value);
      break;
    case 6:
      var value = new proto.ei.ShellSetSpec;
      reader.readMessage(value,proto.ei.ShellSetSpec.deserializeBinaryFromReader);
      msg.addDecorators(value);
      break;
    case 4:
      var value = new proto.ei.ShellObjectSpec;
      reader.readMessage(value,proto.ei.ShellObjectSpec.deserializeBinaryFromReader);
      msg.addShellObjects(value);
      break;
    case 5:
      var value = new proto.ei.ShellGroupSpec;
      reader.readMessage(value,proto.ei.ShellGroupSpec.deserializeBinaryFromReader);
      msg.addShellGroups(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setShellsShowcaseLastFeaturedTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.DLCCatalog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.DLCCatalog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.DLCCatalog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.DLCCatalog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = message.getShellsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ShellSpec.serializeBinaryToWriter
    );
  }
  f = message.getShellSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ShellSetSpec.serializeBinaryToWriter
    );
  }
  f = message.getDecoratorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ei.ShellSetSpec.serializeBinaryToWriter
    );
  }
  f = message.getShellObjectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.ShellObjectSpec.serializeBinaryToWriter
    );
  }
  f = message.getShellGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ei.ShellGroupSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
};


/**
 * repeated DLCItem items = 1;
 * @return {!Array<!proto.ei.DLCItem>}
 */
proto.ei.DLCCatalog.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.ei.DLCItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.DLCItem, 1));
};


/**
 * @param {!Array<!proto.ei.DLCItem>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.DLCItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.DLCItem}
 */
proto.ei.DLCCatalog.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.DLCItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * repeated ShellSpec shells = 2;
 * @return {!Array<!proto.ei.ShellSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellsList = function() {
  return /** @type{!Array<!proto.ei.ShellSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSpec, 2));
};


/**
 * @param {!Array<!proto.ei.ShellSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ShellSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSpec}
 */
proto.ei.DLCCatalog.prototype.addShells = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ShellSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellsList = function() {
  return this.setShellsList([]);
};


/**
 * repeated ShellSetSpec shell_sets = 3;
 * @return {!Array<!proto.ei.ShellSetSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellSetsList = function() {
  return /** @type{!Array<!proto.ei.ShellSetSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSetSpec, 3));
};


/**
 * @param {!Array<!proto.ei.ShellSetSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ShellSetSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.DLCCatalog.prototype.addShellSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ShellSetSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellSetsList = function() {
  return this.setShellSetsList([]);
};


/**
 * repeated ShellSetSpec decorators = 6;
 * @return {!Array<!proto.ei.ShellSetSpec>}
 */
proto.ei.DLCCatalog.prototype.getDecoratorsList = function() {
  return /** @type{!Array<!proto.ei.ShellSetSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSetSpec, 6));
};


/**
 * @param {!Array<!proto.ei.ShellSetSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setDecoratorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ei.ShellSetSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.DLCCatalog.prototype.addDecorators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ei.ShellSetSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearDecoratorsList = function() {
  return this.setDecoratorsList([]);
};


/**
 * repeated ShellObjectSpec shell_objects = 4;
 * @return {!Array<!proto.ei.ShellObjectSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellObjectsList = function() {
  return /** @type{!Array<!proto.ei.ShellObjectSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellObjectSpec, 4));
};


/**
 * @param {!Array<!proto.ei.ShellObjectSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellObjectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.ShellObjectSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellObjectSpec}
 */
proto.ei.DLCCatalog.prototype.addShellObjects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.ShellObjectSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellObjectsList = function() {
  return this.setShellObjectsList([]);
};


/**
 * repeated ShellGroupSpec shell_groups = 5;
 * @return {!Array<!proto.ei.ShellGroupSpec>}
 */
proto.ei.DLCCatalog.prototype.getShellGroupsList = function() {
  return /** @type{!Array<!proto.ei.ShellGroupSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellGroupSpec, 5));
};


/**
 * @param {!Array<!proto.ei.ShellGroupSpec>} value
 * @return {!proto.ei.DLCCatalog} returns this
*/
proto.ei.DLCCatalog.prototype.setShellGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ei.ShellGroupSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellGroupSpec}
 */
proto.ei.DLCCatalog.prototype.addShellGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ei.ShellGroupSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellGroupsList = function() {
  return this.setShellGroupsList([]);
};


/**
 * optional double shells_showcase_last_featured_time = 7;
 * @return {number}
 */
proto.ei.DLCCatalog.prototype.getShellsShowcaseLastFeaturedTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.setShellsShowcaseLastFeaturedTime = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.DLCCatalog} returns this
 */
proto.ei.DLCCatalog.prototype.clearShellsShowcaseLastFeaturedTime = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.DLCCatalog.prototype.hasShellsShowcaseLastFeaturedTime = function() {
  return jspb.Message.getField(this, 7) != null;
};



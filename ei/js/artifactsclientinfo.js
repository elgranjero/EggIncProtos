// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ArtifactsClientInfo');
goog.provide('proto.ei.ArtifactsClientInfo.LaunchCount');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.MissionInfo.Spaceship');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsClientInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsClientInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsClientInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsClientInfo.displayName = 'proto.ei.ArtifactsClientInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsClientInfo.LaunchCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsClientInfo.LaunchCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsClientInfo.LaunchCount.displayName = 'proto.ei.ArtifactsClientInfo.LaunchCount';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsClientInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsClientInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsClientInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsClientInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionCapacityMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    missionDurationMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    missionFtlDurationResearchMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    missionCapacityResearchMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    launchCountsList: jspb.Message.toObjectList(msg.getLaunchCountsList(),
    proto.ei.ArtifactsClientInfo.LaunchCount.toObject, includeInstance),
    lastServerLaunchCountSumTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsClientInfo}
 */
proto.ei.ArtifactsClientInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsClientInfo;
  return proto.ei.ArtifactsClientInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsClientInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsClientInfo}
 */
proto.ei.ArtifactsClientInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionCapacityMult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionDurationMult(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionFtlDurationResearchMult(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMissionCapacityResearchMult(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactsClientInfo.LaunchCount;
      reader.readMessage(value,proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinaryFromReader);
      msg.addLaunchCounts(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastServerLaunchCountSumTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsClientInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsClientInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsClientInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLaunchCountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactsClientInfo.LaunchCount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsClientInfo.LaunchCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.LaunchCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    ship: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    numLaunches: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    launchPoints: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsClientInfo.LaunchCount;
  return proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setShip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumLaunches(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLaunchPoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsClientInfo.LaunchCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsClientInfo.LaunchCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional MissionInfo.Spaceship ship = 1;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.getShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.setShip = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.clearShip = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.hasShip = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 num_launches = 2;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.getNumLaunches = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.setNumLaunches = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.clearNumLaunches = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.hasNumLaunches = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double launch_points = 3;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.getLaunchPoints = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.setLaunchPoints = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount} returns this
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.clearLaunchPoints = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.LaunchCount.prototype.hasLaunchPoints = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double mission_capacity_mult = 1;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionCapacityMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionCapacityMult = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionCapacityMult = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionCapacityMult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double mission_duration_mult = 2;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionDurationMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionDurationMult = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionDurationMult = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionDurationMult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double mission_ftl_duration_research_mult = 4;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionFtlDurationResearchMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionFtlDurationResearchMult = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionFtlDurationResearchMult = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionFtlDurationResearchMult = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double mission_capacity_research_mult = 6;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getMissionCapacityResearchMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setMissionCapacityResearchMult = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearMissionCapacityResearchMult = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasMissionCapacityResearchMult = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated LaunchCount launch_counts = 3;
 * @return {!Array<!proto.ei.ArtifactsClientInfo.LaunchCount>}
 */
proto.ei.ArtifactsClientInfo.prototype.getLaunchCountsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsClientInfo.LaunchCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsClientInfo.LaunchCount, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactsClientInfo.LaunchCount>} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
*/
proto.ei.ArtifactsClientInfo.prototype.setLaunchCountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactsClientInfo.LaunchCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsClientInfo.LaunchCount}
 */
proto.ei.ArtifactsClientInfo.prototype.addLaunchCounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactsClientInfo.LaunchCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearLaunchCountsList = function() {
  return this.setLaunchCountsList([]);
};


/**
 * optional double last_server_launch_count_sum_time = 5;
 * @return {number}
 */
proto.ei.ArtifactsClientInfo.prototype.getLastServerLaunchCountSumTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.setLastServerLaunchCountSumTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsClientInfo} returns this
 */
proto.ei.ArtifactsClientInfo.prototype.clearLastServerLaunchCountSumTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsClientInfo.prototype.hasLastServerLaunchCountSumTime = function() {
  return jspb.Message.getField(this, 5) != null;
};



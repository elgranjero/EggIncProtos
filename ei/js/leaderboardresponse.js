// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.LeaderboardResponse');
goog.provide('proto.ei.LeaderboardResponse.Entry');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.Contract.PlayerGrade');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.LeaderboardResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.LeaderboardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardResponse.displayName = 'proto.ei.LeaderboardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.LeaderboardResponse.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.LeaderboardResponse.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.LeaderboardResponse.Entry.displayName = 'proto.ei.LeaderboardResponse.Entry';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.LeaderboardResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    grade: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    topEntriesList: jspb.Message.toObjectList(msg.getTopEntriesList(),
    proto.ei.LeaderboardResponse.Entry.toObject, includeInstance),
    count: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rank: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    score: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardResponse}
 */
proto.ei.LeaderboardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardResponse;
  return proto.ei.LeaderboardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardResponse}
 */
proto.ei.LeaderboardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 3:
      var value = new proto.ei.LeaderboardResponse.Entry;
      reader.readMessage(value,proto.ei.LeaderboardResponse.Entry.deserializeBinaryFromReader);
      msg.addTopEntries(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTopEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.LeaderboardResponse.Entry.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.LeaderboardResponse.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.LeaderboardResponse.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.LeaderboardResponse.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    alias: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    score: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.LeaderboardResponse.Entry}
 */
proto.ei.LeaderboardResponse.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.LeaderboardResponse.Entry;
  return proto.ei.LeaderboardResponse.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.LeaderboardResponse.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.LeaderboardResponse.Entry}
 */
proto.ei.LeaderboardResponse.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.LeaderboardResponse.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.LeaderboardResponse.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.LeaderboardResponse.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.LeaderboardResponse.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional uint32 rank = 1;
 * @return {number}
 */
proto.ei.LeaderboardResponse.Entry.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.setRank = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.clearRank = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.Entry.prototype.hasRank = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.ei.LeaderboardResponse.Entry.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.Entry.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double score = 3;
 * @return {number}
 */
proto.ei.LeaderboardResponse.Entry.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.setScore = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse.Entry} returns this
 */
proto.ei.LeaderboardResponse.Entry.prototype.clearScore = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.Entry.prototype.hasScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.ei.LeaderboardResponse.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearScope = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasScope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Contract.PlayerGrade grade = 2;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.LeaderboardResponse.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Entry top_entries = 3;
 * @return {!Array<!proto.ei.LeaderboardResponse.Entry>}
 */
proto.ei.LeaderboardResponse.prototype.getTopEntriesList = function() {
  return /** @type{!Array<!proto.ei.LeaderboardResponse.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.LeaderboardResponse.Entry, 3));
};


/**
 * @param {!Array<!proto.ei.LeaderboardResponse.Entry>} value
 * @return {!proto.ei.LeaderboardResponse} returns this
*/
proto.ei.LeaderboardResponse.prototype.setTopEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.LeaderboardResponse.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.LeaderboardResponse.Entry}
 */
proto.ei.LeaderboardResponse.prototype.addTopEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.LeaderboardResponse.Entry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearTopEntriesList = function() {
  return this.setTopEntriesList([]);
};


/**
 * optional uint32 count = 4;
 * @return {number}
 */
proto.ei.LeaderboardResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearCount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasCount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 rank = 5;
 * @return {number}
 */
proto.ei.LeaderboardResponse.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setRank = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearRank = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasRank = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double score = 6;
 * @return {number}
 */
proto.ei.LeaderboardResponse.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.setScore = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.LeaderboardResponse} returns this
 */
proto.ei.LeaderboardResponse.prototype.clearScore = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.LeaderboardResponse.prototype.hasScore = function() {
  return jspb.Message.getField(this, 6) != null;
};



// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.UserSubscriptionInfo');
goog.provide('proto.ei.UserSubscriptionInfo.HistoryEntry');
goog.provide('proto.ei.UserSubscriptionInfo.Level');
goog.provide('proto.ei.UserSubscriptionInfo.Status');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.Platform');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserSubscriptionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.UserSubscriptionInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.UserSubscriptionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserSubscriptionInfo.displayName = 'proto.ei.UserSubscriptionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.UserSubscriptionInfo.HistoryEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.UserSubscriptionInfo.HistoryEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.UserSubscriptionInfo.HistoryEntry.displayName = 'proto.ei.UserSubscriptionInfo.HistoryEntry';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.UserSubscriptionInfo.repeatedFields_ = [9,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserSubscriptionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserSubscriptionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserSubscriptionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    subscriptionLevel: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    nextSubscriptionLevel: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f,
    lockNextSubscriptionLevel: (f = jspb.Message.getBooleanField(msg, 18)) == null ? undefined : f,
    platform: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    originalTransactionId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    linkedTransactionId: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    acknowledged: (f = jspb.Message.getBooleanField(msg, 17)) == null ? undefined : f,
    firstSubscribed: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    periodEnd: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    storeStatus: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    autoRenew: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    sandbox: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    lastUpdated: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.ei.UserSubscriptionInfo.HistoryEntry.toObject, includeInstance),
    pastUserIdsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserSubscriptionInfo}
 */
proto.ei.UserSubscriptionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserSubscriptionInfo;
  return proto.ei.UserSubscriptionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserSubscriptionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserSubscriptionInfo}
 */
proto.ei.UserSubscriptionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 13:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (reader.readEnum());
      msg.setSubscriptionLevel(value);
      break;
    case 15:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (reader.readEnum());
      msg.setNextSubscriptionLevel(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLockNextSubscriptionLevel(value);
      break;
    case 10:
      var value = /** @type {!proto.ei.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginalTransactionId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkedTransactionId(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcknowledged(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFirstSubscribed(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPeriodEnd(value);
      break;
    case 5:
      var value = /** @type {!proto.ei.UserSubscriptionInfo.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreStatus(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoRenew(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSandbox(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastUpdated(value);
      break;
    case 9:
      var value = new proto.ei.UserSubscriptionInfo.HistoryEntry;
      reader.readMessage(value,proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addPastUserIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserSubscriptionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserSubscriptionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserSubscriptionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!proto.ei.Platform} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {!proto.ei.UserSubscriptionInfo.Status} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.UserSubscriptionInfo.HistoryEntry.serializeBinaryToWriter
    );
  }
  f = message.getPastUserIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.UserSubscriptionInfo.Level = {
  STANDARD: 0,
  PRO: 1
};

/**
 * @enum {number}
 */
proto.ei.UserSubscriptionInfo.Status = {
  UNKNOWN: 0,
  ACTIVE: 1,
  EXPIRED: 2,
  REVOKED: 3,
  GRACE_PERIOD: 4,
  PAUSE_HOLD: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.UserSubscriptionInfo.HistoryEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    messageId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.UserSubscriptionInfo.HistoryEntry;
  return proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.UserSubscriptionInfo.HistoryEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional double timestamp = 1;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message_id = 2;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.setMessageId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.clearMessageId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.hasMessageId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry} returns this
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.HistoryEntry.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Level subscription_level = 13;
 * @return {!proto.ei.UserSubscriptionInfo.Level}
 */
proto.ei.UserSubscriptionInfo.prototype.getSubscriptionLevel = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Level} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearSubscriptionLevel = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasSubscriptionLevel = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Level next_subscription_level = 15;
 * @return {!proto.ei.UserSubscriptionInfo.Level}
 */
proto.ei.UserSubscriptionInfo.prototype.getNextSubscriptionLevel = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Level} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Level} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setNextSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearNextSubscriptionLevel = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasNextSubscriptionLevel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool lock_next_subscription_level = 18;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getLockNextSubscriptionLevel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setLockNextSubscriptionLevel = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearLockNextSubscriptionLevel = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasLockNextSubscriptionLevel = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Platform platform = 10;
 * @return {!proto.ei.Platform}
 */
proto.ei.UserSubscriptionInfo.prototype.getPlatform = function() {
  return /** @type {!proto.ei.Platform} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.ei.Platform} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setPlatform = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearPlatform = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasPlatform = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string original_transaction_id = 1;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.prototype.getOriginalTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setOriginalTransactionId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearOriginalTransactionId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasOriginalTransactionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string linked_transaction_id = 16;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.prototype.getLinkedTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setLinkedTransactionId = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearLinkedTransactionId = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasLinkedTransactionId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool acknowledged = 17;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getAcknowledged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setAcknowledged = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearAcknowledged = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasAcknowledged = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double first_subscribed = 2;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.prototype.getFirstSubscribed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setFirstSubscribed = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearFirstSubscribed = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasFirstSubscribed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double period_end = 4;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.prototype.getPeriodEnd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setPeriodEnd = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearPeriodEnd = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasPeriodEnd = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Status status = 5;
 * @return {!proto.ei.UserSubscriptionInfo.Status}
 */
proto.ei.UserSubscriptionInfo.prototype.getStatus = function() {
  return /** @type {!proto.ei.UserSubscriptionInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.Status} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string store_status = 14;
 * @return {string}
 */
proto.ei.UserSubscriptionInfo.prototype.getStoreStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setStoreStatus = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearStoreStatus = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasStoreStatus = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool auto_renew = 6;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getAutoRenew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setAutoRenew = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearAutoRenew = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasAutoRenew = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool sandbox = 19;
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.getSandbox = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setSandbox = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearSandbox = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasSandbox = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional double last_updated = 7;
 * @return {number}
 */
proto.ei.UserSubscriptionInfo.prototype.getLastUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setLastUpdated = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearLastUpdated = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.UserSubscriptionInfo.prototype.hasLastUpdated = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated HistoryEntry history = 9;
 * @return {!Array<!proto.ei.UserSubscriptionInfo.HistoryEntry>}
 */
proto.ei.UserSubscriptionInfo.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.ei.UserSubscriptionInfo.HistoryEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.UserSubscriptionInfo.HistoryEntry, 9));
};


/**
 * @param {!Array<!proto.ei.UserSubscriptionInfo.HistoryEntry>} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
*/
proto.ei.UserSubscriptionInfo.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.UserSubscriptionInfo.HistoryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.UserSubscriptionInfo.HistoryEntry}
 */
proto.ei.UserSubscriptionInfo.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.UserSubscriptionInfo.HistoryEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * repeated string past_user_ids = 11;
 * @return {!Array<string>}
 */
proto.ei.UserSubscriptionInfo.prototype.getPastUserIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.setPastUserIdsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.addPastUserIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.UserSubscriptionInfo} returns this
 */
proto.ei.UserSubscriptionInfo.prototype.clearPastUserIdsList = function() {
  return this.setPastUserIdsList([]);
};



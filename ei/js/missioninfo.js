// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.MissionInfo');
goog.provide('proto.ei.MissionInfo.DurationType');
goog.provide('proto.ei.MissionInfo.Fuel');
goog.provide('proto.ei.MissionInfo.Spaceship');
goog.provide('proto.ei.MissionInfo.Status');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.ei.ArtifactSpec.Name');
goog.forwardDeclare('proto.ei.Egg');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MissionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.MissionInfo.repeatedFields_, null);
};
goog.inherits(proto.ei.MissionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MissionInfo.displayName = 'proto.ei.MissionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.MissionInfo.Fuel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.MissionInfo.Fuel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.MissionInfo.Fuel.displayName = 'proto.ei.MissionInfo.Fuel';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.MissionInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MissionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MissionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MissionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ship: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    durationType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    fuelList: jspb.Message.toObjectList(msg.getFuelList(),
    proto.ei.MissionInfo.Fuel.toObject, includeInstance),
    level: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    durationSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    capacity: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    qualityBump: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    targetArtifact: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    startTimeDerived: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    missionLog: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    identifier: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.MissionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MissionInfo;
  return proto.ei.MissionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MissionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.MissionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setShip(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.MissionInfo.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.MissionInfo.DurationType} */ (reader.readEnum());
      msg.setDurationType(value);
      break;
    case 4:
      var value = new proto.ei.MissionInfo.Fuel;
      reader.readMessage(value,proto.ei.MissionInfo.Fuel.deserializeBinaryFromReader);
      msg.addFuel(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDurationSeconds(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCapacity(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setQualityBump(value);
      break;
    case 13:
      var value = /** @type {!proto.ei.ArtifactSpec.Name} */ (reader.readEnum());
      msg.setTargetArtifact(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTimeDerived(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMissionLog(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MissionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MissionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MissionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.ei.MissionInfo.Status} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFuelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.MissionInfo.Fuel.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {!proto.ei.ArtifactSpec.Name} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.MissionInfo.Spaceship = {
  CHICKEN_ONE: 0,
  CHICKEN_NINE: 1,
  CHICKEN_HEAVY: 2,
  BCR: 3,
  MILLENIUM_CHICKEN: 4,
  CORELLIHEN_CORVETTE: 5,
  GALEGGTICA: 6,
  CHICKFIANT: 7,
  VOYEGGER: 8,
  HENERPRISE: 9,
  ATREGGIES: 10
};

/**
 * @enum {number}
 */
proto.ei.MissionInfo.Status = {
  FUELING: 0,
  PREPARE_TO_LAUNCH: 5,
  EXPLORING: 10,
  RETURNED: 15,
  ANALYZING: 16,
  COMPLETE: 20,
  ARCHIVED: 25
};

/**
 * @enum {number}
 */
proto.ei.MissionInfo.DurationType = {
  SHORT: 0,
  LONG: 1,
  EPIC: 2,
  TUTORIAL: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.MissionInfo.Fuel.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.MissionInfo.Fuel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.MissionInfo.Fuel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.Fuel.toObject = function(includeInstance, msg) {
  var f, obj = {
    egg: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    amount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.MissionInfo.Fuel}
 */
proto.ei.MissionInfo.Fuel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.MissionInfo.Fuel;
  return proto.ei.MissionInfo.Fuel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.MissionInfo.Fuel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.MissionInfo.Fuel}
 */
proto.ei.MissionInfo.Fuel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEgg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.MissionInfo.Fuel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.MissionInfo.Fuel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.MissionInfo.Fuel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.MissionInfo.Fuel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Egg egg = 1;
 * @return {!proto.ei.Egg}
 */
proto.ei.MissionInfo.Fuel.prototype.getEgg = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.setEgg = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.clearEgg = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.Fuel.prototype.hasEgg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double amount = 2;
 * @return {number}
 */
proto.ei.MissionInfo.Fuel.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.setAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo.Fuel} returns this
 */
proto.ei.MissionInfo.Fuel.prototype.clearAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.Fuel.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Spaceship ship = 1;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.MissionInfo.prototype.getShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setShip = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearShip = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasShip = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Status status = 2;
 * @return {!proto.ei.MissionInfo.Status}
 */
proto.ei.MissionInfo.prototype.getStatus = function() {
  return /** @type {!proto.ei.MissionInfo.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Status} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DurationType duration_type = 3;
 * @return {!proto.ei.MissionInfo.DurationType}
 */
proto.ei.MissionInfo.prototype.getDurationType = function() {
  return /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ei.MissionInfo.DurationType} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setDurationType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearDurationType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasDurationType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Fuel fuel = 4;
 * @return {!Array<!proto.ei.MissionInfo.Fuel>}
 */
proto.ei.MissionInfo.prototype.getFuelList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo.Fuel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo.Fuel, 4));
};


/**
 * @param {!Array<!proto.ei.MissionInfo.Fuel>} value
 * @return {!proto.ei.MissionInfo} returns this
*/
proto.ei.MissionInfo.prototype.setFuelList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.MissionInfo.Fuel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo.Fuel}
 */
proto.ei.MissionInfo.prototype.addFuel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.MissionInfo.Fuel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearFuelList = function() {
  return this.setFuelList([]);
};


/**
 * optional uint32 level = 12;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double duration_seconds = 5;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getDurationSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setDurationSeconds = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearDurationSeconds = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasDurationSeconds = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 capacity = 9;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setCapacity = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearCapacity = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasCapacity = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional double quality_bump = 11;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getQualityBump = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setQualityBump = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearQualityBump = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasQualityBump = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ArtifactSpec.Name target_artifact = 13;
 * @return {!proto.ei.ArtifactSpec.Name}
 */
proto.ei.MissionInfo.prototype.getTargetArtifact = function() {
  return /** @type {!proto.ei.ArtifactSpec.Name} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.ei.ArtifactSpec.Name} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setTargetArtifact = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearTargetArtifact = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasTargetArtifact = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double seconds_remaining = 6;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double start_time_derived = 8;
 * @return {number}
 */
proto.ei.MissionInfo.prototype.getStartTimeDerived = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setStartTimeDerived = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearStartTimeDerived = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasStartTimeDerived = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string mission_log = 10;
 * @return {string}
 */
proto.ei.MissionInfo.prototype.getMissionLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setMissionLog = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearMissionLog = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasMissionLog = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string identifier = 7;
 * @return {string}
 */
proto.ei.MissionInfo.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.MissionInfo} returns this
 */
proto.ei.MissionInfo.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.MissionInfo.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 7) != null;
};



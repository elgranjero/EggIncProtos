// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ArtifactsConfigurationResponse');
goog.provide('proto.ei.ArtifactsConfigurationResponse.ArtifactParameters');
goog.provide('proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo');
goog.provide('proto.ei.ArtifactsConfigurationResponse.MissionParameters');
goog.provide('proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ei.ArtifactSpec');

goog.forwardDeclare('proto.ei.MissionInfo.DurationType');
goog.forwardDeclare('proto.ei.MissionInfo.Spaceship');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsConfigurationResponse.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.displayName = 'proto.ei.ArtifactsConfigurationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsConfigurationResponse.MissionParameters.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.MissionParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.displayName = 'proto.ei.ArtifactsConfigurationResponse.MissionParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.displayName = 'proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.ArtifactParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.displayName = 'proto.ei.ArtifactsConfigurationResponse.ArtifactParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.displayName = 'proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsConfigurationResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    missionParametersList: jspb.Message.toObjectList(msg.getMissionParametersList(),
    proto.ei.ArtifactsConfigurationResponse.MissionParameters.toObject, includeInstance),
    artifactParametersList: jspb.Message.toObjectList(msg.getArtifactParametersList(),
    proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.toObject, includeInstance),
    craftingLevelInfosList: jspb.Message.toObjectList(msg.getCraftingLevelInfosList(),
    proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse}
 */
proto.ei.ArtifactsConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse;
  return proto.ei.ArtifactsConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse}
 */
proto.ei.ArtifactsConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactsConfigurationResponse.MissionParameters;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinaryFromReader);
      msg.addMissionParameters(value);
      break;
    case 2:
      var value = new proto.ei.ArtifactsConfigurationResponse.ArtifactParameters;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinaryFromReader);
      msg.addArtifactParameters(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinaryFromReader);
      msg.addCraftingLevelInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMissionParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ArtifactsConfigurationResponse.MissionParameters.serializeBinaryToWriter
    );
  }
  f = message.getArtifactParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.serializeBinaryToWriter
    );
  }
  f = message.getCraftingLevelInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    ship: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    durationsList: jspb.Message.toObjectList(msg.getDurationsList(),
    proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.toObject, includeInstance),
    levelMissionRequirementsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    capacityDeprecated: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.MissionParameters;
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.Spaceship} */ (reader.readEnum());
      msg.setShip(value);
      break;
    case 3:
      var value = new proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration;
      reader.readMessage(value,proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinaryFromReader);
      msg.addDurations(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLevelMissionRequirements(values[i]);
      }
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCapacityDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.serializeBinaryToWriter
    );
  }
  f = message.getLevelMissionRequirementsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
    durationType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    seconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    quality: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    minQuality: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    maxQuality: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    capacity: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    levelCapacityBump: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    levelQualityBump: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration;
  return proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.MissionInfo.DurationType} */ (reader.readEnum());
      msg.setDurationType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSeconds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setQuality(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMinQuality(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxQuality(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCapacity(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevelCapacityBump(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLevelQualityBump(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
};


/**
 * optional MissionInfo.DurationType duration_type = 1;
 * @return {!proto.ei.MissionInfo.DurationType}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getDurationType = function() {
  return /** @type {!proto.ei.MissionInfo.DurationType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.DurationType} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setDurationType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearDurationType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasDurationType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double seconds = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setSeconds = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearSeconds = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasSeconds = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float quality = 3;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setQuality = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearQuality = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float min_quality = 4;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getMinQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setMinQuality = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearMinQuality = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasMinQuality = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float max_quality = 5;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getMaxQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setMaxQuality = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearMaxQuality = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasMaxQuality = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 capacity = 6;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getCapacity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setCapacity = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearCapacity = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasCapacity = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 level_capacity_bump = 7;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getLevelCapacityBump = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setLevelCapacityBump = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearLevelCapacityBump = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasLevelCapacityBump = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float level_quality_bump = 8;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.getLevelQualityBump = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.setLevelQualityBump = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.clearLevelQualityBump = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration.prototype.hasLevelQualityBump = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional MissionInfo.Spaceship ship = 1;
 * @return {!proto.ei.MissionInfo.Spaceship}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getShip = function() {
  return /** @type {!proto.ei.MissionInfo.Spaceship} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.MissionInfo.Spaceship} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setShip = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearShip = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.hasShip = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Duration durations = 3;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration>}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getDurationsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
*/
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setDurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.addDurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactsConfigurationResponse.MissionParameters.Duration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearDurationsList = function() {
  return this.setDurationsList([]);
};


/**
 * repeated uint32 level_mission_requirements = 4;
 * @return {!Array<number>}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getLevelMissionRequirementsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setLevelMissionRequirementsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.addLevelMissionRequirements = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearLevelMissionRequirementsList = function() {
  return this.setLevelMissionRequirementsList([]);
};


/**
 * optional uint32 capacity_DEPRECATED = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.getCapacityDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.setCapacityDeprecated = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.clearCapacityDeprecated = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.MissionParameters.prototype.hasCapacityDeprecated = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    baseQuality: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    oddsMultiplier: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    value: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    craftingPrice: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    craftingPriceLow: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    craftingPriceDomain: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    craftingPriceCurve: (f = jspb.Message.getOptionalFloatingPointField(msg, 8)) == null ? undefined : f,
    craftingXp: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.ArtifactParameters;
  return proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBaseQuality(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOddsMultiplier(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingPriceLow(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCraftingPriceDomain(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCraftingPriceCurve(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCraftingXp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
*/
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double base_quality = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getBaseQuality = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setBaseQuality = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearBaseQuality = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasBaseQuality = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double odds_multiplier = 4;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getOddsMultiplier = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setOddsMultiplier = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearOddsMultiplier = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasOddsMultiplier = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double value = 3;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearValue = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double crafting_price = 5;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPrice = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPrice = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double crafting_price_low = 6;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPriceLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPriceLow = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPriceLow = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPriceLow = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 crafting_price_domain = 7;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPriceDomain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPriceDomain = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPriceDomain = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPriceDomain = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double crafting_price_curve = 8;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingPriceCurve = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingPriceCurve = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingPriceCurve = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingPriceCurve = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 crafting_xp = 9;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.getCraftingXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.setCraftingXp = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters} returns this
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.clearCraftingXp = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.ArtifactParameters.prototype.hasCraftingXp = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    xpRequired: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    rarityMult: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo;
  return proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setXpRequired(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRarityMult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional double xp_required = 1;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.getXpRequired = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.setXpRequired = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.clearXpRequired = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.hasXpRequired = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float rarity_mult = 2;
 * @return {number}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.getRarityMult = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.setRarityMult = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo} returns this
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.clearRarityMult = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo.prototype.hasRarityMult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MissionParameters mission_parameters = 1;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters>}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.getMissionParametersList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.MissionParameters, 1));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.MissionParameters>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
*/
proto.ei.ArtifactsConfigurationResponse.prototype.setMissionParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.MissionParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.MissionParameters}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.addMissionParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ArtifactsConfigurationResponse.MissionParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
 */
proto.ei.ArtifactsConfigurationResponse.prototype.clearMissionParametersList = function() {
  return this.setMissionParametersList([]);
};


/**
 * repeated ArtifactParameters artifact_parameters = 2;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters>}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.getArtifactParametersList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.ArtifactParameters, 2));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
*/
proto.ei.ArtifactsConfigurationResponse.prototype.setArtifactParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.ArtifactParameters}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.addArtifactParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.ArtifactsConfigurationResponse.ArtifactParameters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
 */
proto.ei.ArtifactsConfigurationResponse.prototype.clearArtifactParametersList = function() {
  return this.setArtifactParametersList([]);
};


/**
 * repeated CraftingLevelInfo crafting_level_infos = 3;
 * @return {!Array<!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo>}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.getCraftingLevelInfosList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo, 3));
};


/**
 * @param {!Array<!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo>} value
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
*/
proto.ei.ArtifactsConfigurationResponse.prototype.setCraftingLevelInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo}
 */
proto.ei.ArtifactsConfigurationResponse.prototype.addCraftingLevelInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.ArtifactsConfigurationResponse.CraftingLevelInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsConfigurationResponse} returns this
 */
proto.ei.ArtifactsConfigurationResponse.prototype.clearCraftingLevelInfosList = function() {
  return this.setCraftingLevelInfosList([]);
};



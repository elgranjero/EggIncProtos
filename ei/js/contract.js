// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.Contract');
goog.provide('proto.ei.Contract.Goal');
goog.provide('proto.ei.Contract.GoalSet');
goog.provide('proto.ei.Contract.GradeSpec');
goog.provide('proto.ei.Contract.PlayerGrade');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ei.GameModifier');

goog.forwardDeclare('proto.ei.Egg');
goog.forwardDeclare('proto.ei.GoalType');
goog.forwardDeclare('proto.ei.RewardType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.displayName = 'proto.ei.Contract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.Goal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.Contract.Goal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.Goal.displayName = 'proto.ei.Contract.Goal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.GoalSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.GoalSet.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract.GoalSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.GoalSet.displayName = 'proto.ei.Contract.GoalSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.Contract.GradeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.Contract.GradeSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.Contract.GradeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.Contract.GradeSpec.displayName = 'proto.ei.Contract.GradeSpec';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.repeatedFields_ = [3,16,20,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    egg: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    customEggId: (f = jspb.Message.getField(msg, 25)) == null ? undefined : f,
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance),
    goalSetsList: jspb.Message.toObjectList(msg.getGoalSetsList(),
    proto.ei.Contract.GoalSet.toObject, includeInstance),
    gradeSpecsList: jspb.Message.toObjectList(msg.getGradeSpecsList(),
    proto.ei.Contract.GradeSpec.toObject, includeInstance),
    seasonId: (f = jspb.Message.getField(msg, 23)) == null ? undefined : f,
    coopAllowed: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    maxCoopSize: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    maxBoosts: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    minutesPerToken: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 60.0),
    chickenRunCooldownMinutes: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 180.0),
    startTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    expirationTime: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    lengthSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 7)) == null ? undefined : f,
    maxSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    minClientVersion: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    leggacy: (f = jspb.Message.getBooleanField(msg, 19)) == null ? undefined : f,
    ccOnly: (f = jspb.Message.getBooleanField(msg, 22)) == null ? undefined : f,
    defaultShellIdsList: (f = jspb.Message.getRepeatedField(msg, 24)) == null ? undefined : f,
    debug: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    key: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract}
 */
proto.ei.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract;
  return proto.ei.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract}
 */
proto.ei.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.ei.Egg} */ (reader.readEnum());
      msg.setEgg(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomEggId(value);
      break;
    case 3:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    case 16:
      var value = new proto.ei.Contract.GoalSet;
      reader.readMessage(value,proto.ei.Contract.GoalSet.deserializeBinaryFromReader);
      msg.addGoalSets(value);
      break;
    case 20:
      var value = new proto.ei.Contract.GradeSpec;
      reader.readMessage(value,proto.ei.Contract.GradeSpec.deserializeBinaryFromReader);
      msg.addGradeSpecs(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeasonId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCoopAllowed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxCoopSize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxBoosts(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinutesPerToken(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChickenRunCooldownMinutes(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStartTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExpirationTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLengthSeconds(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxSoulEggs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinClientVersion(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeggacy(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcOnly(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.addDefaultShellIds(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDebug(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!proto.ei.Egg} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
  f = message.getGoalSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.ei.Contract.GoalSet.serializeBinaryToWriter
    );
  }
  f = message.getGradeSpecsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.ei.Contract.GradeSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getDefaultShellIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ei.Contract.PlayerGrade = {
  GRADE_UNSET: 0,
  GRADE_C: 1,
  GRADE_B: 2,
  GRADE_A: 3,
  GRADE_AA: 4,
  GRADE_AAA: 5
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.Goal.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.Goal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.Goal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.Goal.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    targetAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    rewardType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    rewardSubType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    rewardAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    targetSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.Goal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.Goal;
  return proto.ei.Contract.Goal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.Goal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.Goal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.GoalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetAmount(value);
      break;
    case 3:
      var value = /** @type {!proto.ei.RewardType} */ (reader.readEnum());
      msg.setRewardType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardSubType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRewardAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTargetSoulEggs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.Goal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.Goal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.Goal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.Goal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.GoalType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {!proto.ei.RewardType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional GoalType type = 1;
 * @return {!proto.ei.GoalType}
 */
proto.ei.Contract.Goal.prototype.getType = function() {
  return /** @type {!proto.ei.GoalType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/**
 * @param {!proto.ei.GoalType} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double target_amount = 2;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getTargetAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setTargetAmount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearTargetAmount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasTargetAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RewardType reward_type = 3;
 * @return {!proto.ei.RewardType}
 */
proto.ei.Contract.Goal.prototype.getRewardType = function() {
  return /** @type {!proto.ei.RewardType} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/**
 * @param {!proto.ei.RewardType} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setRewardType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearRewardType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reward_sub_type = 4;
 * @return {string}
 */
proto.ei.Contract.Goal.prototype.getRewardSubType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setRewardSubType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearRewardSubType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardSubType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double reward_amount = 5;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getRewardAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setRewardAmount = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearRewardAmount = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasRewardAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double target_soul_eggs = 6;
 * @return {number}
 */
proto.ei.Contract.Goal.prototype.getTargetSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.setTargetSoulEggs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.Goal} returns this
 */
proto.ei.Contract.Goal.prototype.clearTargetSoulEggs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.Goal.prototype.hasTargetSoulEggs = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.GoalSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.GoalSet.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.GoalSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.GoalSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GoalSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.GoalSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.GoalSet;
  return proto.ei.Contract.GoalSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.GoalSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.GoalSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.GoalSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.GoalSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.GoalSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GoalSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Goal goals = 1;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.GoalSet.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 1));
};


/**
 * @param {!Array<!proto.ei.Contract.Goal>} value
 * @return {!proto.ei.Contract.GoalSet} returns this
*/
proto.ei.Contract.GoalSet.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.GoalSet.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract.GoalSet} returns this
 */
proto.ei.Contract.GoalSet.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.Contract.GradeSpec.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.Contract.GradeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.Contract.GradeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.Contract.GradeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GradeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    grade: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    goalsList: jspb.Message.toObjectList(msg.getGoalsList(),
    proto.ei.Contract.Goal.toObject, includeInstance),
    modifiersList: jspb.Message.toObjectList(msg.getModifiersList(),
    proto.ei.GameModifier.toObject, includeInstance),
    lengthSeconds: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.Contract.GradeSpec}
 */
proto.ei.Contract.GradeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.Contract.GradeSpec;
  return proto.ei.Contract.GradeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.Contract.GradeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.Contract.GradeSpec}
 */
proto.ei.Contract.GradeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ei.Contract.PlayerGrade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 2:
      var value = new proto.ei.Contract.Goal;
      reader.readMessage(value,proto.ei.Contract.Goal.deserializeBinaryFromReader);
      msg.addGoals(value);
      break;
    case 3:
      var value = new proto.ei.GameModifier;
      reader.readMessage(value,proto.ei.GameModifier.deserializeBinaryFromReader);
      msg.addModifiers(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLengthSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.Contract.GradeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.Contract.GradeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.Contract.GradeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.Contract.GradeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGoalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ei.Contract.Goal.serializeBinaryToWriter
    );
  }
  f = message.getModifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.GameModifier.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional PlayerGrade grade = 1;
 * @return {!proto.ei.Contract.PlayerGrade}
 */
proto.ei.Contract.GradeSpec.prototype.getGrade = function() {
  return /** @type {!proto.ei.Contract.PlayerGrade} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.ei.Contract.PlayerGrade} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.setGrade = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearGrade = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.GradeSpec.prototype.hasGrade = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Goal goals = 2;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.GradeSpec.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 2));
};


/**
 * @param {!Array<!proto.ei.Contract.Goal>} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
*/
proto.ei.Contract.GradeSpec.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.GradeSpec.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};


/**
 * repeated GameModifier modifiers = 3;
 * @return {!Array<!proto.ei.GameModifier>}
 */
proto.ei.Contract.GradeSpec.prototype.getModifiersList = function() {
  return /** @type{!Array<!proto.ei.GameModifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.GameModifier, 3));
};


/**
 * @param {!Array<!proto.ei.GameModifier>} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
*/
proto.ei.Contract.GradeSpec.prototype.setModifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.GameModifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.GameModifier}
 */
proto.ei.Contract.GradeSpec.prototype.addModifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.GameModifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearModifiersList = function() {
  return this.setModifiersList([]);
};


/**
 * optional double length_seconds = 4;
 * @return {number}
 */
proto.ei.Contract.GradeSpec.prototype.getLengthSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.setLengthSeconds = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract.GradeSpec} returns this
 */
proto.ei.Contract.GradeSpec.prototype.clearLengthSeconds = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.GradeSpec.prototype.hasLengthSeconds = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.Contract.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.ei.Contract.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string description = 10;
 * @return {string}
 */
proto.ei.Contract.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Egg egg = 2;
 * @return {!proto.ei.Egg}
 */
proto.ei.Contract.prototype.getEgg = function() {
  return /** @type {!proto.ei.Egg} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.ei.Egg} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setEgg = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearEgg = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasEgg = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string custom_egg_id = 25;
 * @return {string}
 */
proto.ei.Contract.prototype.getCustomEggId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setCustomEggId = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearCustomEggId = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasCustomEggId = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * repeated Goal goals = 3;
 * @return {!Array<!proto.ei.Contract.Goal>}
 */
proto.ei.Contract.prototype.getGoalsList = function() {
  return /** @type{!Array<!proto.ei.Contract.Goal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.Goal, 3));
};


/**
 * @param {!Array<!proto.ei.Contract.Goal>} value
 * @return {!proto.ei.Contract} returns this
*/
proto.ei.Contract.prototype.setGoalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.Contract.Goal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.Goal}
 */
proto.ei.Contract.prototype.addGoals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.Contract.Goal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearGoalsList = function() {
  return this.setGoalsList([]);
};


/**
 * repeated GoalSet goal_sets = 16;
 * @return {!Array<!proto.ei.Contract.GoalSet>}
 */
proto.ei.Contract.prototype.getGoalSetsList = function() {
  return /** @type{!Array<!proto.ei.Contract.GoalSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.GoalSet, 16));
};


/**
 * @param {!Array<!proto.ei.Contract.GoalSet>} value
 * @return {!proto.ei.Contract} returns this
*/
proto.ei.Contract.prototype.setGoalSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.ei.Contract.GoalSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.GoalSet}
 */
proto.ei.Contract.prototype.addGoalSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.ei.Contract.GoalSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearGoalSetsList = function() {
  return this.setGoalSetsList([]);
};


/**
 * repeated GradeSpec grade_specs = 20;
 * @return {!Array<!proto.ei.Contract.GradeSpec>}
 */
proto.ei.Contract.prototype.getGradeSpecsList = function() {
  return /** @type{!Array<!proto.ei.Contract.GradeSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.Contract.GradeSpec, 20));
};


/**
 * @param {!Array<!proto.ei.Contract.GradeSpec>} value
 * @return {!proto.ei.Contract} returns this
*/
proto.ei.Contract.prototype.setGradeSpecsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.ei.Contract.GradeSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract.GradeSpec}
 */
proto.ei.Contract.prototype.addGradeSpecs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.ei.Contract.GradeSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearGradeSpecsList = function() {
  return this.setGradeSpecsList([]);
};


/**
 * optional string season_id = 23;
 * @return {string}
 */
proto.ei.Contract.prototype.getSeasonId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setSeasonId = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearSeasonId = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasSeasonId = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool coop_allowed = 4;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getCoopAllowed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setCoopAllowed = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearCoopAllowed = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasCoopAllowed = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 max_coop_size = 5;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxCoopSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMaxCoopSize = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMaxCoopSize = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxCoopSize = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 max_boosts = 12;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxBoosts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMaxBoosts = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMaxBoosts = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxBoosts = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional double minutes_per_token = 15;
 * @return {number}
 */
proto.ei.Contract.prototype.getMinutesPerToken = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 60.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMinutesPerToken = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMinutesPerToken = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMinutesPerToken = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional double chicken_run_cooldown_minutes = 18;
 * @return {number}
 */
proto.ei.Contract.prototype.getChickenRunCooldownMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 180.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setChickenRunCooldownMinutes = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearChickenRunCooldownMinutes = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasChickenRunCooldownMinutes = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double start_time = 17;
 * @return {number}
 */
proto.ei.Contract.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional double expiration_time = 6;
 * @return {number}
 */
proto.ei.Contract.prototype.getExpirationTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setExpirationTime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearExpirationTime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasExpirationTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double length_seconds = 7;
 * @return {number}
 */
proto.ei.Contract.prototype.getLengthSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setLengthSeconds = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearLengthSeconds = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasLengthSeconds = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double max_soul_eggs = 13;
 * @return {number}
 */
proto.ei.Contract.prototype.getMaxSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMaxSoulEggs = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMaxSoulEggs = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMaxSoulEggs = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 min_client_version = 14;
 * @return {number}
 */
proto.ei.Contract.prototype.getMinClientVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setMinClientVersion = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearMinClientVersion = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasMinClientVersion = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool leggacy = 19;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getLeggacy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setLeggacy = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearLeggacy = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasLeggacy = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool cc_only = 22;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getCcOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setCcOnly = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearCcOnly = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasCcOnly = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * repeated string default_shell_ids = 24;
 * @return {!Array<string>}
 */
proto.ei.Contract.prototype.getDefaultShellIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 24));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setDefaultShellIdsList = function(value) {
  return jspb.Message.setField(this, 24, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.addDefaultShellIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 24, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearDefaultShellIdsList = function() {
  return this.setDefaultShellIdsList([]);
};


/**
 * optional bool debug = 11;
 * @return {boolean}
 */
proto.ei.Contract.prototype.getDebug = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setDebug = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearDebug = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasDebug = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string key = 21;
 * @return {string}
 */
proto.ei.Contract.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.Contract} returns this
 */
proto.ei.Contract.prototype.clearKey = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.Contract.prototype.hasKey = function() {
  return jspb.Message.getField(this, 21) != null;
};



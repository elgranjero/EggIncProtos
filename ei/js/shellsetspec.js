// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ShellSetSpec');
goog.provide('proto.ei.ShellSetSpec.VariationSpec');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ei.DLCItem');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellSetSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ShellSetSpec.repeatedFields_, null);
};
goog.inherits(proto.ei.ShellSetSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellSetSpec.displayName = 'proto.ei.ShellSetSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ShellSetSpec.VariationSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ShellSetSpec.VariationSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ShellSetSpec.VariationSpec.displayName = 'proto.ei.ShellSetSpec.VariationSpec';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ShellSetSpec.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellSetSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellSetSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellSetSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    priceMultDeprecated: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 1.0),
    discount: (f = jspb.Message.getOptionalFloatingPointField(msg, 17)) == null ? undefined : f,
    requiredEop: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    requiredSoulEggs: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    requiredParentSet: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f,
    isNew: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    expires: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    secondsUntilAvailable: (f = jspb.Message.getOptionalFloatingPointField(msg, 18)) == null ? undefined : f,
    secondsRemaining: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    popularity: (f = jspb.Message.getField(msg, 21)) == null ? undefined : f,
    decorator: (f = jspb.Message.getBooleanField(msg, 14)) == null ? undefined : f,
    modifiedGeometry: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    elementSet: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    hexBaseColor: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    variationsList: jspb.Message.toObjectList(msg.getVariationsList(),
    proto.ei.ShellSetSpec.VariationSpec.toObject, includeInstance),
    icon: (f = msg.getIcon()) && proto.ei.DLCItem.toObject(includeInstance, f),
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    customAppearance: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.ShellSetSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellSetSpec;
  return proto.ei.ShellSetSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellSetSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellSetSpec}
 */
proto.ei.ShellSetSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceMultDeprecated(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRequiredEop(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRequiredSoulEggs(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequiredParentSet(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNew(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpires(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsUntilAvailable(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecondsRemaining(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPopularity(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDecorator(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setModifiedGeometry(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setElementSet(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setHexBaseColor(value);
      break;
    case 15:
      var value = new proto.ei.ShellSetSpec.VariationSpec;
      reader.readMessage(value,proto.ei.ShellSetSpec.VariationSpec.deserializeBinaryFromReader);
      msg.addVariations(value);
      break;
    case 19:
      var value = new proto.ei.DLCItem;
      reader.readMessage(value,proto.ei.DLCItem.deserializeBinaryFromReader);
      msg.setIcon(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCustomAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellSetSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellSetSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellSetSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getVariationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.ei.ShellSetSpec.VariationSpec.serializeBinaryToWriter
    );
  }
  f = message.getIcon();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.ei.DLCItem.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ShellSetSpec.VariationSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ShellSetSpec.VariationSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.VariationSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    hexColor: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    price: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    sortPriority: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    defaultAppearance: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    customAppearance: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ShellSetSpec.VariationSpec}
 */
proto.ei.ShellSetSpec.VariationSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ShellSetSpec.VariationSpec;
  return proto.ei.ShellSetSpec.VariationSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ShellSetSpec.VariationSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ShellSetSpec.VariationSpec}
 */
proto.ei.ShellSetSpec.VariationSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHexColor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortPriority(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefaultAppearance(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCustomAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ShellSetSpec.VariationSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ShellSetSpec.VariationSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ShellSetSpec.VariationSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string hex_color = 2;
 * @return {string}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getHexColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setHexColor = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearHexColor = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasHexColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 price = 3;
 * @return {number}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 sort_priority = 6;
 * @return {number}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getSortPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setSortPriority = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearSortPriority = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasSortPriority = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool default_appearance = 4;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool custom_appearance = 5;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.getCustomAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.setCustomAppearance = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec.VariationSpec} returns this
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.clearCustomAppearance = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.VariationSpec.prototype.hasCustomAppearance = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string identifier = 1;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 price = 3;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setPrice = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearPrice = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double price_mult_DEPRECATED = 8;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getPriceMultDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 1.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setPriceMultDeprecated = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearPriceMultDeprecated = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasPriceMultDeprecated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double discount = 17;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setDiscount = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearDiscount = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasDiscount = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 required_eop = 4;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getRequiredEop = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setRequiredEop = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearRequiredEop = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasRequiredEop = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double required_soul_eggs = 5;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getRequiredSoulEggs = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setRequiredSoulEggs = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearRequiredSoulEggs = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasRequiredSoulEggs = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string required_parent_set = 20;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getRequiredParentSet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setRequiredParentSet = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearRequiredParentSet = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasRequiredParentSet = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool is_new = 9;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getIsNew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setIsNew = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearIsNew = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasIsNew = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool expires = 10;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getExpires = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setExpires = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearExpires = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional double seconds_until_available = 18;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getSecondsUntilAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setSecondsUntilAvailable = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearSecondsUntilAvailable = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasSecondsUntilAvailable = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double seconds_remaining = 11;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getSecondsRemaining = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setSecondsRemaining = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearSecondsRemaining = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasSecondsRemaining = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 popularity = 21;
 * @return {number}
 */
proto.ei.ShellSetSpec.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setPopularity = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearPopularity = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasPopularity = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool decorator = 14;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getDecorator = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setDecorator = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearDecorator = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasDecorator = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool modified_geometry = 13;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getModifiedGeometry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setModifiedGeometry = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearModifiedGeometry = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasModifiedGeometry = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool element_set = 7;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getElementSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setElementSet = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearElementSet = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasElementSet = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string hex_base_color = 16;
 * @return {string}
 */
proto.ei.ShellSetSpec.prototype.getHexBaseColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setHexBaseColor = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearHexBaseColor = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasHexBaseColor = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated VariationSpec variations = 15;
 * @return {!Array<!proto.ei.ShellSetSpec.VariationSpec>}
 */
proto.ei.ShellSetSpec.prototype.getVariationsList = function() {
  return /** @type{!Array<!proto.ei.ShellSetSpec.VariationSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ShellSetSpec.VariationSpec, 15));
};


/**
 * @param {!Array<!proto.ei.ShellSetSpec.VariationSpec>} value
 * @return {!proto.ei.ShellSetSpec} returns this
*/
proto.ei.ShellSetSpec.prototype.setVariationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ei.ShellSetSpec.VariationSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ShellSetSpec.VariationSpec}
 */
proto.ei.ShellSetSpec.prototype.addVariations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ei.ShellSetSpec.VariationSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearVariationsList = function() {
  return this.setVariationsList([]);
};


/**
 * optional DLCItem icon = 19;
 * @return {?proto.ei.DLCItem}
 */
proto.ei.ShellSetSpec.prototype.getIcon = function() {
  return /** @type{?proto.ei.DLCItem} */ (
    jspb.Message.getWrapperField(this, proto.ei.DLCItem, 19));
};


/**
 * @param {?proto.ei.DLCItem|undefined} value
 * @return {!proto.ei.ShellSetSpec} returns this
*/
proto.ei.ShellSetSpec.prototype.setIcon = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearIcon = function() {
  return this.setIcon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasIcon = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool default_appearance = 6;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getDefaultAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setDefaultAppearance = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearDefaultAppearance = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasDefaultAppearance = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool custom_appearance = 12;
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.getCustomAppearance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.setCustomAppearance = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ShellSetSpec} returns this
 */
proto.ei.ShellSetSpec.prototype.clearCustomAppearance = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ShellSetSpec.prototype.hasCustomAppearance = function() {
  return jspb.Message.getField(this, 12) != null;
};



// source: ei.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.ei.ArtifactsDB');
goog.provide('proto.ei.ArtifactsDB.ActiveArtifactSet');
goog.provide('proto.ei.ArtifactsDB.ActiveArtifactSlot');
goog.provide('proto.ei.ArtifactsDB.CraftableArtifact');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.ei.ArtifactInventoryItem');
goog.require('proto.ei.ArtifactSpec');
goog.require('proto.ei.InventorySlot');
goog.require('proto.ei.MissionInfo');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsDB.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsDB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.displayName = 'proto.ei.ArtifactsDB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsDB.ActiveArtifactSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.ActiveArtifactSlot.displayName = 'proto.ei.ArtifactsDB.ActiveArtifactSlot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB.ActiveArtifactSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ei.ArtifactsDB.ActiveArtifactSet.repeatedFields_, null);
};
goog.inherits(proto.ei.ArtifactsDB.ActiveArtifactSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.ActiveArtifactSet.displayName = 'proto.ei.ArtifactsDB.ActiveArtifactSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ei.ArtifactsDB.CraftableArtifact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ei.ArtifactsDB.CraftableArtifact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ei.ArtifactsDB.CraftableArtifact.displayName = 'proto.ei.ArtifactsDB.CraftableArtifact';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsDB.repeatedFields_ = [1,3,7,11,13,12,4,5,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryItemsList: jspb.Message.toObjectList(msg.getInventoryItemsList(),
    proto.ei.ArtifactInventoryItem.toObject, includeInstance),
    itemSequence: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    inventorySlotsList: jspb.Message.toObjectList(msg.getInventorySlotsList(),
    proto.ei.InventorySlot.toObject, includeInstance),
    activeArtifactsDeprecatedList: jspb.Message.toObjectList(msg.getActiveArtifactsDeprecatedList(),
    proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject, includeInstance),
    activeArtifactSetsList: jspb.Message.toObjectList(msg.getActiveArtifactSetsList(),
    proto.ei.ArtifactsDB.ActiveArtifactSet.toObject, includeInstance),
    savedArtifactSetsList: jspb.Message.toObjectList(msg.getSavedArtifactSetsList(),
    proto.ei.ArtifactsDB.ActiveArtifactSet.toObject, includeInstance),
    artifactStatusList: jspb.Message.toObjectList(msg.getArtifactStatusList(),
    proto.ei.ArtifactsDB.CraftableArtifact.toObject, includeInstance),
    fuelingMission: (f = msg.getFuelingMission()) && proto.ei.MissionInfo.toObject(includeInstance, f),
    missionInfosList: jspb.Message.toObjectList(msg.getMissionInfosList(),
    proto.ei.MissionInfo.toObject, includeInstance),
    missionArchiveList: jspb.Message.toObjectList(msg.getMissionArchiveList(),
    proto.ei.MissionInfo.toObject, includeInstance),
    discoveredArtifactsDeprecatedList: jspb.Message.toObjectList(msg.getDiscoveredArtifactsDeprecatedList(),
    proto.ei.ArtifactSpec.toObject, includeInstance),
    craftableArtifactsDeprecatedList: jspb.Message.toObjectList(msg.getCraftableArtifactsDeprecatedList(),
    proto.ei.ArtifactsDB.CraftableArtifact.toObject, includeInstance),
    craftingCountsDeprecatedList: jspb.Message.toObjectList(msg.getCraftingCountsDeprecatedList(),
    proto.ei.ArtifactsDB.CraftableArtifact.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB}
 */
proto.ei.ArtifactsDB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB;
  return proto.ei.ArtifactsDB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB}
 */
proto.ei.ArtifactsDB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactInventoryItem;
      reader.readMessage(value,proto.ei.ArtifactInventoryItem.deserializeBinaryFromReader);
      msg.addInventoryItems(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemSequence(value);
      break;
    case 3:
      var value = new proto.ei.InventorySlot;
      reader.readMessage(value,proto.ei.InventorySlot.deserializeBinaryFromReader);
      msg.addInventorySlots(value);
      break;
    case 7:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSlot;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader);
      msg.addActiveArtifactsDeprecated(value);
      break;
    case 11:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSet;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader);
      msg.addActiveArtifactSets(value);
      break;
    case 13:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSet;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader);
      msg.addSavedArtifactSets(value);
      break;
    case 12:
      var value = new proto.ei.ArtifactsDB.CraftableArtifact;
      reader.readMessage(value,proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader);
      msg.addArtifactStatus(value);
      break;
    case 14:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.setFuelingMission(value);
      break;
    case 4:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.addMissionInfos(value);
      break;
    case 5:
      var value = new proto.ei.MissionInfo;
      reader.readMessage(value,proto.ei.MissionInfo.deserializeBinaryFromReader);
      msg.addMissionArchive(value);
      break;
    case 8:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.addDiscoveredArtifactsDeprecated(value);
      break;
    case 9:
      var value = new proto.ei.ArtifactsDB.CraftableArtifact;
      reader.readMessage(value,proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader);
      msg.addCraftableArtifactsDeprecated(value);
      break;
    case 10:
      var value = new proto.ei.ArtifactsDB.CraftableArtifact;
      reader.readMessage(value,proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader);
      msg.addCraftingCountsDeprecated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ArtifactInventoryItem.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getInventorySlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ei.InventorySlot.serializeBinaryToWriter
    );
  }
  f = message.getActiveArtifactsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
  f = message.getActiveArtifactSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter
    );
  }
  f = message.getSavedArtifactSetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter
    );
  }
  f = message.getArtifactStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter
    );
  }
  f = message.getFuelingMission();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getMissionInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getMissionArchiveList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ei.MissionInfo.serializeBinaryToWriter
    );
  }
  f = message.getDiscoveredArtifactsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = message.getCraftableArtifactsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter
    );
  }
  f = message.getCraftingCountsDeprecatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    occupied: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    itemId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB.ActiveArtifactSlot;
  return proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOccupied(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setItemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional bool occupied = 1;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.getOccupied = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.setOccupied = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.clearOccupied = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.hasOccupied = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 item_id = 2;
 * @return {number}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.getItemId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.setItemId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.clearItemId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSlot.prototype.hasItemId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.ActiveArtifactSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
    proto.ei.ArtifactsDB.ActiveArtifactSlot.toObject, includeInstance),
    uid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB.ActiveArtifactSet;
  return proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactsDB.ActiveArtifactSlot;
      reader.readMessage(value,proto.ei.ArtifactsDB.ActiveArtifactSlot.deserializeBinaryFromReader);
      msg.addSlots(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ei.ArtifactsDB.ActiveArtifactSlot.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated ActiveArtifactSlot slots = 1;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.getSlotsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSlot, 1));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
*/
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.setSlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.addSlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.clearSlotsList = function() {
  return this.setSlotsList([]);
};


/**
 * optional uint32 uid = 2;
 * @return {number}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.setUid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet} returns this
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.clearUid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.ActiveArtifactSet.prototype.hasUid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.toObject = function(opt_includeInstance) {
  return proto.ei.ArtifactsDB.CraftableArtifact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.CraftableArtifact.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.ei.ArtifactSpec.toObject(includeInstance, f),
    discovered: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    craftable: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    recipeDiscovered: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
    seen: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    count: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ei.ArtifactsDB.CraftableArtifact;
  return proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.CraftableArtifact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ei.ArtifactSpec;
      reader.readMessage(value,proto.ei.ArtifactSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDiscovered(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCraftable(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecipeDiscovered(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSeen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ei.ArtifactsDB.CraftableArtifact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ei.ArtifactSpec.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional ArtifactSpec spec = 1;
 * @return {?proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getSpec = function() {
  return /** @type{?proto.ei.ArtifactSpec} */ (
    jspb.Message.getWrapperField(this, proto.ei.ArtifactSpec, 1));
};


/**
 * @param {?proto.ei.ArtifactSpec|undefined} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
*/
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool discovered = 6;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getDiscovered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setDiscovered = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearDiscovered = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasDiscovered = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool craftable = 4;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getCraftable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setCraftable = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearCraftable = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasCraftable = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool recipe_discovered = 5;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getRecipeDiscovered = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setRecipeDiscovered = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearRecipeDiscovered = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasRecipeDiscovered = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool seen = 2;
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getSeen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setSeen = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearSeen = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasSeen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact} returns this
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.clearCount = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.CraftableArtifact.prototype.hasCount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ArtifactInventoryItem inventory_items = 1;
 * @return {!Array<!proto.ei.ArtifactInventoryItem>}
 */
proto.ei.ArtifactsDB.prototype.getInventoryItemsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactInventoryItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactInventoryItem, 1));
};


/**
 * @param {!Array<!proto.ei.ArtifactInventoryItem>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setInventoryItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ei.ArtifactInventoryItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactInventoryItem}
 */
proto.ei.ArtifactsDB.prototype.addInventoryItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ei.ArtifactInventoryItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearInventoryItemsList = function() {
  return this.setInventoryItemsList([]);
};


/**
 * optional uint64 item_sequence = 2;
 * @return {number}
 */
proto.ei.ArtifactsDB.prototype.getItemSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.setItemSequence = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearItemSequence = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.prototype.hasItemSequence = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated InventorySlot inventory_slots = 3;
 * @return {!Array<!proto.ei.InventorySlot>}
 */
proto.ei.ArtifactsDB.prototype.getInventorySlotsList = function() {
  return /** @type{!Array<!proto.ei.InventorySlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.InventorySlot, 3));
};


/**
 * @param {!Array<!proto.ei.InventorySlot>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setInventorySlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ei.InventorySlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.InventorySlot}
 */
proto.ei.ArtifactsDB.prototype.addInventorySlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ei.InventorySlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearInventorySlotsList = function() {
  return this.setInventorySlotsList([]);
};


/**
 * repeated ActiveArtifactSlot active_artifacts_DEPRECATED = 7;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>}
 */
proto.ei.ArtifactsDB.prototype.getActiveArtifactsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSlot, 7));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSlot>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setActiveArtifactsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSlot}
 */
proto.ei.ArtifactsDB.prototype.addActiveArtifactsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSlot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearActiveArtifactsDeprecatedList = function() {
  return this.setActiveArtifactsDeprecatedList([]);
};


/**
 * repeated ActiveArtifactSet active_artifact_sets = 11;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>}
 */
proto.ei.ArtifactsDB.prototype.getActiveArtifactSetsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSet, 11));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setActiveArtifactSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.prototype.addActiveArtifactSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearActiveArtifactSetsList = function() {
  return this.setActiveArtifactSetsList([]);
};


/**
 * repeated ActiveArtifactSet saved_artifact_sets = 13;
 * @return {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>}
 */
proto.ei.ArtifactsDB.prototype.getSavedArtifactSetsList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.ActiveArtifactSet, 13));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.ActiveArtifactSet>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setSavedArtifactSetsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.ActiveArtifactSet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.ActiveArtifactSet}
 */
proto.ei.ArtifactsDB.prototype.addSavedArtifactSets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ei.ArtifactsDB.ActiveArtifactSet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearSavedArtifactSetsList = function() {
  return this.setSavedArtifactSetsList([]);
};


/**
 * repeated CraftableArtifact artifact_status = 12;
 * @return {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>}
 */
proto.ei.ArtifactsDB.prototype.getArtifactStatusList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.CraftableArtifact, 12));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setArtifactStatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.prototype.addArtifactStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ei.ArtifactsDB.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearArtifactStatusList = function() {
  return this.setArtifactStatusList([]);
};


/**
 * optional MissionInfo fueling_mission = 14;
 * @return {?proto.ei.MissionInfo}
 */
proto.ei.ArtifactsDB.prototype.getFuelingMission = function() {
  return /** @type{?proto.ei.MissionInfo} */ (
    jspb.Message.getWrapperField(this, proto.ei.MissionInfo, 14));
};


/**
 * @param {?proto.ei.MissionInfo|undefined} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setFuelingMission = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearFuelingMission = function() {
  return this.setFuelingMission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ei.ArtifactsDB.prototype.hasFuelingMission = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated MissionInfo mission_infos = 4;
 * @return {!Array<!proto.ei.MissionInfo>}
 */
proto.ei.ArtifactsDB.prototype.getMissionInfosList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo, 4));
};


/**
 * @param {!Array<!proto.ei.MissionInfo>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setMissionInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ei.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.ArtifactsDB.prototype.addMissionInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ei.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearMissionInfosList = function() {
  return this.setMissionInfosList([]);
};


/**
 * repeated MissionInfo mission_archive = 5;
 * @return {!Array<!proto.ei.MissionInfo>}
 */
proto.ei.ArtifactsDB.prototype.getMissionArchiveList = function() {
  return /** @type{!Array<!proto.ei.MissionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.MissionInfo, 5));
};


/**
 * @param {!Array<!proto.ei.MissionInfo>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setMissionArchiveList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ei.MissionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.MissionInfo}
 */
proto.ei.ArtifactsDB.prototype.addMissionArchive = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ei.MissionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearMissionArchiveList = function() {
  return this.setMissionArchiveList([]);
};


/**
 * repeated ArtifactSpec discovered_artifacts_DEPRECATED = 8;
 * @return {!Array<!proto.ei.ArtifactSpec>}
 */
proto.ei.ArtifactsDB.prototype.getDiscoveredArtifactsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactSpec, 8));
};


/**
 * @param {!Array<!proto.ei.ArtifactSpec>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setDiscoveredArtifactsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ei.ArtifactSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactSpec}
 */
proto.ei.ArtifactsDB.prototype.addDiscoveredArtifactsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ei.ArtifactSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearDiscoveredArtifactsDeprecatedList = function() {
  return this.setDiscoveredArtifactsDeprecatedList([]);
};


/**
 * repeated CraftableArtifact craftable_artifacts_DEPRECATED = 9;
 * @return {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>}
 */
proto.ei.ArtifactsDB.prototype.getCraftableArtifactsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.CraftableArtifact, 9));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setCraftableArtifactsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.prototype.addCraftableArtifactsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ei.ArtifactsDB.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearCraftableArtifactsDeprecatedList = function() {
  return this.setCraftableArtifactsDeprecatedList([]);
};


/**
 * repeated CraftableArtifact crafting_counts_DEPRECATED = 10;
 * @return {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>}
 */
proto.ei.ArtifactsDB.prototype.getCraftingCountsDeprecatedList = function() {
  return /** @type{!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ei.ArtifactsDB.CraftableArtifact, 10));
};


/**
 * @param {!Array<!proto.ei.ArtifactsDB.CraftableArtifact>} value
 * @return {!proto.ei.ArtifactsDB} returns this
*/
proto.ei.ArtifactsDB.prototype.setCraftingCountsDeprecatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.ei.ArtifactsDB.CraftableArtifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ei.ArtifactsDB.CraftableArtifact}
 */
proto.ei.ArtifactsDB.prototype.addCraftingCountsDeprecated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.ei.ArtifactsDB.CraftableArtifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ei.ArtifactsDB} returns this
 */
proto.ei.ArtifactsDB.prototype.clearCraftingCountsDeprecatedList = function() {
  return this.setCraftingCountsDeprecatedList([]);
};


